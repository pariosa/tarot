2025-08-11 00:17:20.059 [main] INFO  [] [] c.mercy.tarot.TarotApplicationTests - Starting TarotApplicationTests using Java 21.0.2 with PID 10235 (started by w0xy in /Users/w0xy/code/tarot)
2025-08-11 00:17:20.071 [main] DEBUG [] [] c.mercy.tarot.TarotApplicationTests - Running with Spring Boot v3.2.4, Spring v6.1.5
2025-08-11 00:17:20.071 [main] INFO  [] [] c.mercy.tarot.TarotApplicationTests - No active profile set, falling back to 1 default profile: "default"
2025-08-11 00:17:20.122 [main] DEBUG [] [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@4fbb001b
2025-08-11 00:17:20.228 [main] INFO  [] [] c.mercy.tarot.TarotApplicationTests - Started TarotApplicationTests in 0.575 seconds (process running for 1.653)
2025-08-11 00:17:21.504 [SpringApplicationShutdownHook] DEBUG [] [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@4fbb001b, started on Mon Aug 11 00:17:20 EDT 2025
2025-08-11 00:17:40.177 [main] INFO  [] [] com.mercy.tarot.TarotApplication - Starting TarotApplication v0.0.5-SNAPSHOT using Java 21.0.2 with PID 10264 (/Users/w0xy/code/tarot/target/tarot-0.0.5-SNAPSHOT.jar started by w0xy in /Users/w0xy/code/tarot)
2025-08-11 00:17:40.178 [main] DEBUG [] [] com.mercy.tarot.TarotApplication - Running with Spring Boot v3.2.4, Spring v6.1.5
2025-08-11 00:17:40.179 [main] INFO  [] [] com.mercy.tarot.TarotApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-11 00:17:40.983 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-11 00:17:41.040 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 51 ms. Found 3 JPA repository interfaces.
2025-08-11 00:17:41.864 [main] INFO  [] [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-11 00:17:41.879 [main] INFO  [] [] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-11 00:17:41.879 [main] INFO  [] [] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.19]
2025-08-11 00:17:41.912 [main] INFO  [] [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-11 00:17:41.912 [main] INFO  [] [] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1636 ms
2025-08-11 00:17:41.960 [main] ERROR [] [] o.s.b.w.e.tomcat.TomcatStarter - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'jwtAuthenticationFilter' defined in URL [jar:nested:/Users/w0xy/code/tarot/target/tarot-0.0.5-SNAPSHOT.jar/!BOOT-INF/classes/!/com/mercy/tarot/security/JwtAuthenticationFilter.class]: Unsatisfied dependency expressed through constructor parameter 1: No qualifying bean of type 'org.springframework.security.core.userdetails.UserDetailsService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
2025-08-11 00:17:41.992 [main] INFO  [] [] o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-08-11 00:17:42.012 [main] WARN  [] [] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server
2025-08-11 00:17:42.020 [main] INFO  [] [] o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-11 00:17:42.043 [main] ERROR [] [] o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 1 of constructor in com.mercy.tarot.security.JwtAuthenticationFilter required a bean of type 'org.springframework.security.core.userdetails.UserDetailsService' that could not be found.


Action:

Consider defining a bean of type 'org.springframework.security.core.userdetails.UserDetailsService' in your configuration.

2025-08-11 00:24:18.078 [main] INFO  [] [] c.mercy.tarot.TarotApplicationTests - Starting TarotApplicationTests using Java 21.0.2 with PID 10607 (started by w0xy in /Users/w0xy/code/tarot)
2025-08-11 00:24:18.080 [main] DEBUG [] [] c.mercy.tarot.TarotApplicationTests - Running with Spring Boot v3.2.4, Spring v6.1.5
2025-08-11 00:24:18.081 [main] INFO  [] [] c.mercy.tarot.TarotApplicationTests - No active profile set, falling back to 1 default profile: "default"
2025-08-11 00:24:18.153 [main] DEBUG [] [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@4fbb001b
2025-08-11 00:24:18.500 [main] INFO  [] [] c.mercy.tarot.TarotApplicationTests - Started TarotApplicationTests in 1.438 seconds (process running for 2.956)
2025-08-11 00:24:20.885 [SpringApplicationShutdownHook] DEBUG [] [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@4fbb001b, started on Mon Aug 11 00:24:18 EDT 2025
2025-08-11 00:24:26.620 [main] INFO  [] [] com.mercy.tarot.TarotApplication - Starting TarotApplication v0.0.5-SNAPSHOT using Java 21.0.2 with PID 10638 (/Users/w0xy/code/tarot/target/tarot-0.0.5-SNAPSHOT.jar started by w0xy in /Users/w0xy/code/tarot)
2025-08-11 00:24:26.621 [main] DEBUG [] [] com.mercy.tarot.TarotApplication - Running with Spring Boot v3.2.4, Spring v6.1.5
2025-08-11 00:24:26.622 [main] INFO  [] [] com.mercy.tarot.TarotApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-11 00:24:27.416 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-11 00:24:27.469 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 47 ms. Found 3 JPA repository interfaces.
2025-08-11 00:24:28.322 [main] INFO  [] [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-11 00:24:28.335 [main] INFO  [] [] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-11 00:24:28.336 [main] INFO  [] [] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.19]
2025-08-11 00:24:28.368 [main] INFO  [] [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-11 00:24:28.369 [main] INFO  [] [] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1646 ms
2025-08-11 00:24:28.404 [main] ERROR [] [] o.s.b.w.e.tomcat.TomcatStarter - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'jwtAuthenticationFilter' defined in URL [jar:nested:/Users/w0xy/code/tarot/target/tarot-0.0.5-SNAPSHOT.jar/!BOOT-INF/classes/!/com/mercy/tarot/security/JwtAuthenticationFilter.class]: Unsatisfied dependency expressed through constructor parameter 1: No qualifying bean of type 'org.springframework.security.core.userdetails.UserDetailsService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
2025-08-11 00:24:28.437 [main] INFO  [] [] o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-08-11 00:24:28.453 [main] WARN  [] [] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server
2025-08-11 00:24:28.462 [main] INFO  [] [] o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-11 00:24:28.485 [main] ERROR [] [] o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 1 of constructor in com.mercy.tarot.security.JwtAuthenticationFilter required a bean of type 'org.springframework.security.core.userdetails.UserDetailsService' that could not be found.


Action:

Consider defining a bean of type 'org.springframework.security.core.userdetails.UserDetailsService' in your configuration.

2025-08-11 00:28:45.545 [main] INFO  [] [] c.mercy.tarot.TarotApplicationTests - Starting TarotApplicationTests using Java 21.0.2 with PID 10870 (started by w0xy in /Users/w0xy/code/tarot)
2025-08-11 00:28:45.548 [main] DEBUG [] [] c.mercy.tarot.TarotApplicationTests - Running with Spring Boot v3.2.4, Spring v6.1.5
2025-08-11 00:28:45.550 [main] INFO  [] [] c.mercy.tarot.TarotApplicationTests - No active profile set, falling back to 1 default profile: "default"
2025-08-11 00:28:45.678 [main] DEBUG [] [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@4fbb001b
2025-08-11 00:28:45.778 [main] INFO  [] [] c.mercy.tarot.TarotApplicationTests - Started TarotApplicationTests in 0.689 seconds (process running for 1.96)
2025-08-11 00:28:47.267 [SpringApplicationShutdownHook] DEBUG [] [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@4fbb001b, started on Mon Aug 11 00:28:45 EDT 2025
2025-08-11 00:28:51.936 [main] INFO  [] [] com.mercy.tarot.TarotApplication - Starting TarotApplication v0.0.5-SNAPSHOT using Java 21.0.2 with PID 10904 (/Users/w0xy/code/tarot/target/tarot-0.0.5-SNAPSHOT.jar started by w0xy in /Users/w0xy/code/tarot)
2025-08-11 00:28:51.938 [main] DEBUG [] [] com.mercy.tarot.TarotApplication - Running with Spring Boot v3.2.4, Spring v6.1.5
2025-08-11 00:28:51.939 [main] INFO  [] [] com.mercy.tarot.TarotApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-11 00:28:52.722 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-11 00:28:52.775 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 47 ms. Found 3 JPA repository interfaces.
2025-08-11 00:28:53.596 [main] INFO  [] [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-11 00:28:53.609 [main] INFO  [] [] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-11 00:28:53.609 [main] INFO  [] [] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.19]
2025-08-11 00:28:53.644 [main] INFO  [] [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-11 00:28:53.645 [main] INFO  [] [] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1616 ms
2025-08-11 00:28:53.911 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-11 00:28:54.145 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@66713605
2025-08-11 00:28:54.148 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-11 00:28:54.246 [main] INFO  [] [] org.flywaydb.core.FlywayExecutor - Database: jdbc:mysql://127.0.0.1:3306/tarot (MySQL 8.3)
2025-08-11 00:28:54.269 [main] WARN  [] [] o.f.c.i.database.base.Database - Flyway upgrade recommended: MySQL 8.3 is newer than this version of Flyway and support has not been tested. The latest supported version of MySQL is 8.1.
2025-08-11 00:28:54.351 [main] INFO  [] [] o.f.core.internal.command.DbValidate - Successfully validated 6 migrations (execution time 00:00.050s)
2025-08-11 00:28:54.371 [main] INFO  [] [] o.f.core.internal.command.DbMigrate - Current version of schema `tarot`: 1.0.6
2025-08-11 00:28:54.379 [main] INFO  [] [] o.f.core.internal.command.DbMigrate - Schema `tarot` is up to date. No migration necessary.
2025-08-11 00:28:54.432 [main] INFO  [] [] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-11 00:28:54.495 [main] INFO  [] [] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.0.CR1
2025-08-11 00:28:54.532 [main] INFO  [] [] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-11 00:28:54.604 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@642c72cf
2025-08-11 00:28:54.604 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@642c72cf
2025-08-11 00:28:54.604 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@642c72cf
2025-08-11 00:28:54.604 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4e6cbdf1
2025-08-11 00:28:54.605 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4e6cbdf1
2025-08-11 00:28:54.605 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@67fac095
2025-08-11 00:28:54.605 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@67fac095
2025-08-11 00:28:54.605 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@5a13f1f7
2025-08-11 00:28:54.605 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@5a13f1f7
2025-08-11 00:28:54.605 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5dae5a70
2025-08-11 00:28:54.606 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5dae5a70
2025-08-11 00:28:54.606 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@5dae5a70
2025-08-11 00:28:54.606 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@7686f701
2025-08-11 00:28:54.606 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@7686f701
2025-08-11 00:28:54.606 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@7686f701
2025-08-11 00:28:54.607 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@47c96f2c
2025-08-11 00:28:54.607 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@47c96f2c
2025-08-11 00:28:54.607 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@210a26b
2025-08-11 00:28:54.607 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@2dc21583
2025-08-11 00:28:54.607 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@2dc21583
2025-08-11 00:28:54.607 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@6cbdd1c5
2025-08-11 00:28:54.608 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@60816371
2025-08-11 00:28:54.608 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@678586f0
2025-08-11 00:28:54.608 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@678586f0
2025-08-11 00:28:54.608 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@678586f0
2025-08-11 00:28:54.608 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@5ad6f98e
2025-08-11 00:28:54.608 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@5ad6f98e
2025-08-11 00:28:54.608 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@5ad6f98e
2025-08-11 00:28:54.608 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@586728e8
2025-08-11 00:28:54.608 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@586728e8
2025-08-11 00:28:54.609 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@586728e8
2025-08-11 00:28:54.610 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@3316527e
2025-08-11 00:28:54.610 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@3316527e
2025-08-11 00:28:54.610 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@3316527e
2025-08-11 00:28:54.610 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@786ff0ea
2025-08-11 00:28:54.610 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@786ff0ea
2025-08-11 00:28:54.610 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@786ff0ea
2025-08-11 00:28:54.610 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@15186ce0
2025-08-11 00:28:54.611 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@15186ce0
2025-08-11 00:28:54.611 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@745926c3
2025-08-11 00:28:54.611 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@745926c3
2025-08-11 00:28:54.611 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@75dd0f94
2025-08-11 00:28:54.611 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@75dd0f94
2025-08-11 00:28:54.611 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@75dd0f94
2025-08-11 00:28:54.611 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@72324965
2025-08-11 00:28:54.612 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@249b54af
2025-08-11 00:28:54.612 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@249b54af
2025-08-11 00:28:54.612 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@194911c1
2025-08-11 00:28:54.612 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@4751cd3
2025-08-11 00:28:54.612 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@4751cd3
2025-08-11 00:28:54.612 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@4751cd3
2025-08-11 00:28:54.612 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@64ec1459
2025-08-11 00:28:54.612 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@1aac0a47
2025-08-11 00:28:54.613 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4b3ad7ca
2025-08-11 00:28:54.613 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@6785c9fa
2025-08-11 00:28:54.613 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@6785c9fa
2025-08-11 00:28:54.613 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@63cf578f
2025-08-11 00:28:54.613 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@63cf578f
2025-08-11 00:28:54.613 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@194b9783
2025-08-11 00:28:54.614 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@45297e7
2025-08-11 00:28:54.614 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@4dd1548e
2025-08-11 00:28:54.614 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@54bb1194
2025-08-11 00:28:54.614 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@1109730f
2025-08-11 00:28:54.615 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@1f42366
2025-08-11 00:28:54.615 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@46c662f2
2025-08-11 00:28:54.615 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@46c662f2
2025-08-11 00:28:54.615 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@4afdfc0f
2025-08-11 00:28:54.616 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@4afdfc0f
2025-08-11 00:28:54.616 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@10b67f54
2025-08-11 00:28:54.616 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@10b67f54
2025-08-11 00:28:54.616 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@30798137
2025-08-11 00:28:54.616 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@30798137
2025-08-11 00:28:54.616 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@455da438
2025-08-11 00:28:54.616 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@455da438
2025-08-11 00:28:54.617 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@60652518
2025-08-11 00:28:54.617 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@438aaa9f
2025-08-11 00:28:54.617 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@3f06ebe0
2025-08-11 00:28:54.617 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@3f06ebe0
2025-08-11 00:28:54.617 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@1752e45c
2025-08-11 00:28:54.617 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5ed65e4b
2025-08-11 00:28:54.618 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@481ed95c
2025-08-11 00:28:54.618 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@40cf6254
2025-08-11 00:28:54.618 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@40cf6254
2025-08-11 00:28:54.619 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@40bf0e15
2025-08-11 00:28:54.619 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2c77344f
2025-08-11 00:28:54.619 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@121ddca4
2025-08-11 00:28:54.620 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@121ddca4
2025-08-11 00:28:54.620 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@297bd171
2025-08-11 00:28:54.620 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@297bd171
2025-08-11 00:28:54.620 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@118cbded
2025-08-11 00:28:54.621 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@118cbded
2025-08-11 00:28:54.621 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@118cbded
2025-08-11 00:28:54.621 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4cc26df
2025-08-11 00:28:54.621 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4cc26df
2025-08-11 00:28:54.622 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4cc26df
2025-08-11 00:28:54.622 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@7848321e
2025-08-11 00:28:54.622 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@f4f843f
2025-08-11 00:28:54.622 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@7b5833ee
2025-08-11 00:28:54.622 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@7b5833ee
2025-08-11 00:28:54.622 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@1e471884
2025-08-11 00:28:54.625 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@1e471884
2025-08-11 00:28:54.625 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@1e471884
2025-08-11 00:28:54.625 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@27261190
2025-08-11 00:28:54.625 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@543b0737
2025-08-11 00:28:54.626 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@6e46891d
2025-08-11 00:28:54.626 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@6e46891d
2025-08-11 00:28:54.626 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@48632f69
2025-08-11 00:28:54.626 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@48632f69
2025-08-11 00:28:54.626 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@48632f69
2025-08-11 00:28:54.626 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@5fde1d64
2025-08-11 00:28:54.626 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@5fde1d64
2025-08-11 00:28:54.626 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@5350ab17
2025-08-11 00:28:54.626 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@5350ab17
2025-08-11 00:28:54.626 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@984de01
2025-08-11 00:28:54.627 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@984de01
2025-08-11 00:28:54.627 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@58cda03f
2025-08-11 00:28:54.627 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@58cda03f
2025-08-11 00:28:54.627 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@7757a37f
2025-08-11 00:28:54.628 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7757a37f
2025-08-11 00:28:54.629 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@2109a691
2025-08-11 00:28:54.629 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@e521067
2025-08-11 00:28:54.641 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@148ab138
2025-08-11 00:28:54.641 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@148ab138
2025-08-11 00:28:54.643 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@2036f83
2025-08-11 00:28:54.643 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@68b3248a
2025-08-11 00:28:54.643 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@20fcea37
2025-08-11 00:28:54.643 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@399af6dc
2025-08-11 00:28:54.643 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@48fc0211
2025-08-11 00:28:54.644 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@3ae2702a
2025-08-11 00:28:54.644 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@7d088813
2025-08-11 00:28:54.644 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@134abd78
2025-08-11 00:28:54.644 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@3b0ed98a
2025-08-11 00:28:54.875 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-11 00:28:55.045 [main] DEBUG [] [] o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7f1ad846) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5d5ae6aa)
2025-08-11 00:28:55.046 [main] DEBUG [] [] o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2bc2e022) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2210e466)
2025-08-11 00:28:55.046 [main] DEBUG [] [] o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@be1c08a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@10408ea)
2025-08-11 00:28:55.046 [main] DEBUG [] [] o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3d7b3b18) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@186dcb05)
2025-08-11 00:28:55.046 [main] DEBUG [] [] o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1d0dad12) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3c6fb501)
2025-08-11 00:28:55.046 [main] DEBUG [] [] o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@58a8ea6f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2e6b379c)
2025-08-11 00:28:55.046 [main] DEBUG [] [] o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5e7e7a7e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1ff81b0d)
2025-08-11 00:28:55.046 [main] DEBUG [] [] o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1c610f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@773c7147)
2025-08-11 00:28:55.046 [main] DEBUG [] [] o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5abc5854) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5c3007d)
2025-08-11 00:28:55.047 [main] DEBUG [] [] o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2025-08-11 00:28:55.048 [main] DEBUG [] [] o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2025-08-11 00:28:55.048 [main] DEBUG [] [] o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2025-08-11 00:28:55.050 [main] DEBUG [] [] o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-08-11 00:28:55.050 [main] DEBUG [] [] o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-08-11 00:28:55.053 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@13137835
2025-08-11 00:28:55.053 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@2036f83`
2025-08-11 00:28:55.057 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-08-11 00:28:55.057 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-08-11 00:28:55.057 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-08-11 00:28:55.060 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-11 00:28:55.060 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-11 00:28:55.060 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-11 00:28:55.060 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-11 00:28:55.060 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-11 00:28:55.061 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-11 00:28:55.062 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-08-11 00:28:55.062 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-11 00:28:55.062 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-11 00:28:55.063 [main] DEBUG [] [] o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@39ead1b7] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@27ec74a3]
2025-08-11 00:28:56.097 [main] INFO  [] [] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-11 00:28:56.097 [main] DEBUG [] [] o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@39ead1b7] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@1315befe]
2025-08-11 00:28:56.100 [main] TRACE [] [] o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@1315befe] for TypeConfiguration
2025-08-11 00:28:56.101 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-11 00:28:56.186 [main] DEBUG [] [] o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false]
2025-08-11 00:28:56.509 [main] DEBUG [] [] c.m.t.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-11 00:28:56.590 [main] INFO  [] [] c.m.tarot.controllers.CardController - CardController initialized with cardRepository: $Proxy139
2025-08-11 00:28:56.652 [main] INFO  [] [] c.m.t.controllers.StoryController - StoryController initialized with repository: $Proxy140
2025-08-11 00:28:56.688 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-11 00:28:56.869 [main] DEBUG [] [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 34 mappings in 'requestMappingHandlerMapping'
2025-08-11 00:28:56.944 [main] DEBUG [] [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 00:28:56.992 [main] INFO  [] [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@362fbd98, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@11e36e5c, org.springframework.security.web.context.SecurityContextHolderFilter@73cd3b8, org.springframework.security.web.header.HeaderWriterFilter@69d145f6, org.springframework.security.web.authentication.logout.LogoutFilter@236bb278, com.mercy.tarot.security.JwtAuthenticationFilter@7aa62a90, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5eb89000, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@16b1b213, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2620264e, org.springframework.security.web.access.ExceptionTranslationFilter@6e49863e, org.springframework.security.web.access.intercept.AuthorizationFilter@71dac63f]
2025-08-11 00:28:57.097 [main] DEBUG [] [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-11 00:28:57.136 [main] DEBUG [] [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-11 00:28:57.271 [main] INFO  [] [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-08-11 00:28:57.296 [main] INFO  [] [] com.mercy.tarot.TarotApplication - Started TarotApplication in 5.964 seconds (process running for 6.662)
2025-08-11 00:28:57.574 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from users u1_0
2025-08-11 00:28:57.622 [main] DEBUG [] [] org.hibernate.SQL - insert into users (created_at,email,is_active,name,password,photo_url,updated_at) values (?,?,?,?,?,?,?)
2025-08-11 00:28:57.651 [main] WARN  [] [] o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 0, SQLState: S0022
2025-08-11 00:28:57.651 [main] ERROR [] [] o.h.e.jdbc.spi.SqlExceptionHelper - Column 'id' not found.
2025-08-11 00:28:57.668 [main] DEBUG [] [] org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
2025-08-11 00:28:57.685 [main] DEBUG [] [] org.hibernate.SQL - insert into users (created_at,email,is_active,name,password,photo_url,updated_at) values (?,?,?,?,?,?,?)
2025-08-11 00:28:57.698 [main] WARN  [] [] o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 0, SQLState: S0022
2025-08-11 00:28:57.698 [main] ERROR [] [] o.h.e.jdbc.spi.SqlExceptionHelper - Column 'id' not found.
2025-08-11 00:28:57.699 [main] DEBUG [] [] org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
2025-08-11 00:28:57.701 [main] DEBUG [] [] org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
2025-08-11 00:28:57.713 [main] DEBUG [] [] org.hibernate.SQL - insert into users (created_at,email,is_active,name,password,photo_url,updated_at) values (?,?,?,?,?,?,?)
2025-08-11 00:28:57.717 [main] WARN  [] [] o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 0, SQLState: S0022
2025-08-11 00:28:57.717 [main] ERROR [] [] o.h.e.jdbc.spi.SqlExceptionHelper - Column 'id' not found.
2025-08-11 00:28:57.718 [main] DEBUG [] [] org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
2025-08-11 00:28:57.719 [main] DEBUG [] [] org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
2025-08-11 00:28:57.724 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from card c1_0
2025-08-11 00:28:57.739 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:57.744 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:57.749 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:57.753 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:57.757 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:57.759 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:57.764 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:57.780 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:57.784 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:57.788 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:57.793 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:57.798 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:57.801 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:57.808 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:57.811 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:57.815 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:57.818 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:57.821 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:57.824 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:57.827 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:57.830 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:57.844 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:57.848 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:57.853 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:57.856 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:57.873 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:57.887 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:57.891 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:57.894 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:57.899 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:57.919 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:57.936 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:57.939 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:57.943 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:57.946 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:57.960 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:57.963 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:57.971 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:57.976 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:57.989 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:57.994 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.004 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.009 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.012 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.015 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.018 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.022 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.026 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.040 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.043 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.046 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.049 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.067 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.081 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.084 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.087 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.090 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.093 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.098 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.104 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.131 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.135 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.140 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.143 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.146 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.160 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.166 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.183 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.197 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.200 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.204 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.216 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.221 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.226 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.230 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.232 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.236 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.240 [main] DEBUG [] [] org.hibernate.SQL - insert into card (card_description,card_value,major,reversed_description,story,suit,title,id) values (?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.245 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from tarotstoryelements tse1_0
2025-08-11 00:28:58.267 [main] DEBUG [] [] org.hibernate.SQL - select tse1_0.title,tse1_0.ally_defecits,tse1_0.ally_descriptors,tse1_0.ally_goals,tse1_0.call_to_action,tse1_0.card_name,tse1_0.climax_description,tse1_0.climax_event,tse1_0.climax_location,tse1_0.enemy_defecits,tse1_0.enemy_descriptors,tse1_0.enemy_goals,tse1_0.keywords,tse1_0.locations,tse1_0.main_character_defecits,tse1_0.main_character_descriptors,tse1_0.main_character_goals,tse1_0.moral_value,tse1_0.point_of_view,tse1_0.style,tse1_0.theme from tarotstoryelements tse1_0 where tse1_0.title=?
2025-08-11 00:28:58.271 [main] DEBUG [] [] org.hibernate.SQL - insert into tarotstoryelements (ally_defecits,ally_descriptors,ally_goals,call_to_action,card_name,climax_description,climax_event,climax_location,enemy_defecits,enemy_descriptors,enemy_goals,keywords,locations,main_character_defecits,main_character_descriptors,main_character_goals,moral_value,point_of_view,style,theme,title) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.311 [main] DEBUG [] [] org.hibernate.SQL - select tse1_0.title,tse1_0.ally_defecits,tse1_0.ally_descriptors,tse1_0.ally_goals,tse1_0.call_to_action,tse1_0.card_name,tse1_0.climax_description,tse1_0.climax_event,tse1_0.climax_location,tse1_0.enemy_defecits,tse1_0.enemy_descriptors,tse1_0.enemy_goals,tse1_0.keywords,tse1_0.locations,tse1_0.main_character_defecits,tse1_0.main_character_descriptors,tse1_0.main_character_goals,tse1_0.moral_value,tse1_0.point_of_view,tse1_0.style,tse1_0.theme from tarotstoryelements tse1_0 where tse1_0.title=?
2025-08-11 00:28:58.316 [main] DEBUG [] [] org.hibernate.SQL - insert into tarotstoryelements (ally_defecits,ally_descriptors,ally_goals,call_to_action,card_name,climax_description,climax_event,climax_location,enemy_defecits,enemy_descriptors,enemy_goals,keywords,locations,main_character_defecits,main_character_descriptors,main_character_goals,moral_value,point_of_view,style,theme,title) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.353 [main] DEBUG [] [] org.hibernate.SQL - select tse1_0.title,tse1_0.ally_defecits,tse1_0.ally_descriptors,tse1_0.ally_goals,tse1_0.call_to_action,tse1_0.card_name,tse1_0.climax_description,tse1_0.climax_event,tse1_0.climax_location,tse1_0.enemy_defecits,tse1_0.enemy_descriptors,tse1_0.enemy_goals,tse1_0.keywords,tse1_0.locations,tse1_0.main_character_defecits,tse1_0.main_character_descriptors,tse1_0.main_character_goals,tse1_0.moral_value,tse1_0.point_of_view,tse1_0.style,tse1_0.theme from tarotstoryelements tse1_0 where tse1_0.title=?
2025-08-11 00:28:58.365 [main] DEBUG [] [] org.hibernate.SQL - insert into tarotstoryelements (ally_defecits,ally_descriptors,ally_goals,call_to_action,card_name,climax_description,climax_event,climax_location,enemy_defecits,enemy_descriptors,enemy_goals,keywords,locations,main_character_defecits,main_character_descriptors,main_character_goals,moral_value,point_of_view,style,theme,title) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.369 [main] DEBUG [] [] org.hibernate.SQL - select tse1_0.title,tse1_0.ally_defecits,tse1_0.ally_descriptors,tse1_0.ally_goals,tse1_0.call_to_action,tse1_0.card_name,tse1_0.climax_description,tse1_0.climax_event,tse1_0.climax_location,tse1_0.enemy_defecits,tse1_0.enemy_descriptors,tse1_0.enemy_goals,tse1_0.keywords,tse1_0.locations,tse1_0.main_character_defecits,tse1_0.main_character_descriptors,tse1_0.main_character_goals,tse1_0.moral_value,tse1_0.point_of_view,tse1_0.style,tse1_0.theme from tarotstoryelements tse1_0 where tse1_0.title=?
2025-08-11 00:28:58.371 [main] DEBUG [] [] org.hibernate.SQL - insert into tarotstoryelements (ally_defecits,ally_descriptors,ally_goals,call_to_action,card_name,climax_description,climax_event,climax_location,enemy_defecits,enemy_descriptors,enemy_goals,keywords,locations,main_character_defecits,main_character_descriptors,main_character_goals,moral_value,point_of_view,style,theme,title) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.374 [main] DEBUG [] [] org.hibernate.SQL - select tse1_0.title,tse1_0.ally_defecits,tse1_0.ally_descriptors,tse1_0.ally_goals,tse1_0.call_to_action,tse1_0.card_name,tse1_0.climax_description,tse1_0.climax_event,tse1_0.climax_location,tse1_0.enemy_defecits,tse1_0.enemy_descriptors,tse1_0.enemy_goals,tse1_0.keywords,tse1_0.locations,tse1_0.main_character_defecits,tse1_0.main_character_descriptors,tse1_0.main_character_goals,tse1_0.moral_value,tse1_0.point_of_view,tse1_0.style,tse1_0.theme from tarotstoryelements tse1_0 where tse1_0.title=?
2025-08-11 00:28:58.378 [main] DEBUG [] [] org.hibernate.SQL - select tse1_0.title,tse1_0.ally_defecits,tse1_0.ally_descriptors,tse1_0.ally_goals,tse1_0.call_to_action,tse1_0.card_name,tse1_0.climax_description,tse1_0.climax_event,tse1_0.climax_location,tse1_0.enemy_defecits,tse1_0.enemy_descriptors,tse1_0.enemy_goals,tse1_0.keywords,tse1_0.locations,tse1_0.main_character_defecits,tse1_0.main_character_descriptors,tse1_0.main_character_goals,tse1_0.moral_value,tse1_0.point_of_view,tse1_0.style,tse1_0.theme from tarotstoryelements tse1_0 where tse1_0.title=?
2025-08-11 00:28:58.382 [main] DEBUG [] [] org.hibernate.SQL - select tse1_0.title,tse1_0.ally_defecits,tse1_0.ally_descriptors,tse1_0.ally_goals,tse1_0.call_to_action,tse1_0.card_name,tse1_0.climax_description,tse1_0.climax_event,tse1_0.climax_location,tse1_0.enemy_defecits,tse1_0.enemy_descriptors,tse1_0.enemy_goals,tse1_0.keywords,tse1_0.locations,tse1_0.main_character_defecits,tse1_0.main_character_descriptors,tse1_0.main_character_goals,tse1_0.moral_value,tse1_0.point_of_view,tse1_0.style,tse1_0.theme from tarotstoryelements tse1_0 where tse1_0.title=?
2025-08-11 00:28:58.383 [main] DEBUG [] [] org.hibernate.SQL - insert into tarotstoryelements (ally_defecits,ally_descriptors,ally_goals,call_to_action,card_name,climax_description,climax_event,climax_location,enemy_defecits,enemy_descriptors,enemy_goals,keywords,locations,main_character_defecits,main_character_descriptors,main_character_goals,moral_value,point_of_view,style,theme,title) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.408 [main] DEBUG [] [] org.hibernate.SQL - select tse1_0.title,tse1_0.ally_defecits,tse1_0.ally_descriptors,tse1_0.ally_goals,tse1_0.call_to_action,tse1_0.card_name,tse1_0.climax_description,tse1_0.climax_event,tse1_0.climax_location,tse1_0.enemy_defecits,tse1_0.enemy_descriptors,tse1_0.enemy_goals,tse1_0.keywords,tse1_0.locations,tse1_0.main_character_defecits,tse1_0.main_character_descriptors,tse1_0.main_character_goals,tse1_0.moral_value,tse1_0.point_of_view,tse1_0.style,tse1_0.theme from tarotstoryelements tse1_0 where tse1_0.title=?
2025-08-11 00:28:58.432 [main] DEBUG [] [] org.hibernate.SQL - insert into tarotstoryelements (ally_defecits,ally_descriptors,ally_goals,call_to_action,card_name,climax_description,climax_event,climax_location,enemy_defecits,enemy_descriptors,enemy_goals,keywords,locations,main_character_defecits,main_character_descriptors,main_character_goals,moral_value,point_of_view,style,theme,title) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.437 [main] DEBUG [] [] org.hibernate.SQL - select tse1_0.title,tse1_0.ally_defecits,tse1_0.ally_descriptors,tse1_0.ally_goals,tse1_0.call_to_action,tse1_0.card_name,tse1_0.climax_description,tse1_0.climax_event,tse1_0.climax_location,tse1_0.enemy_defecits,tse1_0.enemy_descriptors,tse1_0.enemy_goals,tse1_0.keywords,tse1_0.locations,tse1_0.main_character_defecits,tse1_0.main_character_descriptors,tse1_0.main_character_goals,tse1_0.moral_value,tse1_0.point_of_view,tse1_0.style,tse1_0.theme from tarotstoryelements tse1_0 where tse1_0.title=?
2025-08-11 00:28:58.440 [main] DEBUG [] [] org.hibernate.SQL - insert into tarotstoryelements (ally_defecits,ally_descriptors,ally_goals,call_to_action,card_name,climax_description,climax_event,climax_location,enemy_defecits,enemy_descriptors,enemy_goals,keywords,locations,main_character_defecits,main_character_descriptors,main_character_goals,moral_value,point_of_view,style,theme,title) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.445 [main] DEBUG [] [] org.hibernate.SQL - select tse1_0.title,tse1_0.ally_defecits,tse1_0.ally_descriptors,tse1_0.ally_goals,tse1_0.call_to_action,tse1_0.card_name,tse1_0.climax_description,tse1_0.climax_event,tse1_0.climax_location,tse1_0.enemy_defecits,tse1_0.enemy_descriptors,tse1_0.enemy_goals,tse1_0.keywords,tse1_0.locations,tse1_0.main_character_defecits,tse1_0.main_character_descriptors,tse1_0.main_character_goals,tse1_0.moral_value,tse1_0.point_of_view,tse1_0.style,tse1_0.theme from tarotstoryelements tse1_0 where tse1_0.title=?
2025-08-11 00:28:58.446 [main] DEBUG [] [] org.hibernate.SQL - insert into tarotstoryelements (ally_defecits,ally_descriptors,ally_goals,call_to_action,card_name,climax_description,climax_event,climax_location,enemy_defecits,enemy_descriptors,enemy_goals,keywords,locations,main_character_defecits,main_character_descriptors,main_character_goals,moral_value,point_of_view,style,theme,title) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.452 [main] DEBUG [] [] org.hibernate.SQL - select tse1_0.title,tse1_0.ally_defecits,tse1_0.ally_descriptors,tse1_0.ally_goals,tse1_0.call_to_action,tse1_0.card_name,tse1_0.climax_description,tse1_0.climax_event,tse1_0.climax_location,tse1_0.enemy_defecits,tse1_0.enemy_descriptors,tse1_0.enemy_goals,tse1_0.keywords,tse1_0.locations,tse1_0.main_character_defecits,tse1_0.main_character_descriptors,tse1_0.main_character_goals,tse1_0.moral_value,tse1_0.point_of_view,tse1_0.style,tse1_0.theme from tarotstoryelements tse1_0 where tse1_0.title=?
2025-08-11 00:28:58.463 [main] DEBUG [] [] org.hibernate.SQL - insert into tarotstoryelements (ally_defecits,ally_descriptors,ally_goals,call_to_action,card_name,climax_description,climax_event,climax_location,enemy_defecits,enemy_descriptors,enemy_goals,keywords,locations,main_character_defecits,main_character_descriptors,main_character_goals,moral_value,point_of_view,style,theme,title) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.478 [main] DEBUG [] [] org.hibernate.SQL - select tse1_0.title,tse1_0.ally_defecits,tse1_0.ally_descriptors,tse1_0.ally_goals,tse1_0.call_to_action,tse1_0.card_name,tse1_0.climax_description,tse1_0.climax_event,tse1_0.climax_location,tse1_0.enemy_defecits,tse1_0.enemy_descriptors,tse1_0.enemy_goals,tse1_0.keywords,tse1_0.locations,tse1_0.main_character_defecits,tse1_0.main_character_descriptors,tse1_0.main_character_goals,tse1_0.moral_value,tse1_0.point_of_view,tse1_0.style,tse1_0.theme from tarotstoryelements tse1_0 where tse1_0.title=?
2025-08-11 00:28:58.483 [main] DEBUG [] [] org.hibernate.SQL - select tse1_0.title,tse1_0.ally_defecits,tse1_0.ally_descriptors,tse1_0.ally_goals,tse1_0.call_to_action,tse1_0.card_name,tse1_0.climax_description,tse1_0.climax_event,tse1_0.climax_location,tse1_0.enemy_defecits,tse1_0.enemy_descriptors,tse1_0.enemy_goals,tse1_0.keywords,tse1_0.locations,tse1_0.main_character_defecits,tse1_0.main_character_descriptors,tse1_0.main_character_goals,tse1_0.moral_value,tse1_0.point_of_view,tse1_0.style,tse1_0.theme from tarotstoryelements tse1_0 where tse1_0.title=?
2025-08-11 00:28:58.484 [main] DEBUG [] [] org.hibernate.SQL - insert into tarotstoryelements (ally_defecits,ally_descriptors,ally_goals,call_to_action,card_name,climax_description,climax_event,climax_location,enemy_defecits,enemy_descriptors,enemy_goals,keywords,locations,main_character_defecits,main_character_descriptors,main_character_goals,moral_value,point_of_view,style,theme,title) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.489 [main] DEBUG [] [] org.hibernate.SQL - select tse1_0.title,tse1_0.ally_defecits,tse1_0.ally_descriptors,tse1_0.ally_goals,tse1_0.call_to_action,tse1_0.card_name,tse1_0.climax_description,tse1_0.climax_event,tse1_0.climax_location,tse1_0.enemy_defecits,tse1_0.enemy_descriptors,tse1_0.enemy_goals,tse1_0.keywords,tse1_0.locations,tse1_0.main_character_defecits,tse1_0.main_character_descriptors,tse1_0.main_character_goals,tse1_0.moral_value,tse1_0.point_of_view,tse1_0.style,tse1_0.theme from tarotstoryelements tse1_0 where tse1_0.title=?
2025-08-11 00:28:58.491 [main] DEBUG [] [] org.hibernate.SQL - insert into tarotstoryelements (ally_defecits,ally_descriptors,ally_goals,call_to_action,card_name,climax_description,climax_event,climax_location,enemy_defecits,enemy_descriptors,enemy_goals,keywords,locations,main_character_defecits,main_character_descriptors,main_character_goals,moral_value,point_of_view,style,theme,title) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.518 [main] DEBUG [] [] org.hibernate.SQL - select tse1_0.title,tse1_0.ally_defecits,tse1_0.ally_descriptors,tse1_0.ally_goals,tse1_0.call_to_action,tse1_0.card_name,tse1_0.climax_description,tse1_0.climax_event,tse1_0.climax_location,tse1_0.enemy_defecits,tse1_0.enemy_descriptors,tse1_0.enemy_goals,tse1_0.keywords,tse1_0.locations,tse1_0.main_character_defecits,tse1_0.main_character_descriptors,tse1_0.main_character_goals,tse1_0.moral_value,tse1_0.point_of_view,tse1_0.style,tse1_0.theme from tarotstoryelements tse1_0 where tse1_0.title=?
2025-08-11 00:28:58.520 [main] DEBUG [] [] org.hibernate.SQL - insert into tarotstoryelements (ally_defecits,ally_descriptors,ally_goals,call_to_action,card_name,climax_description,climax_event,climax_location,enemy_defecits,enemy_descriptors,enemy_goals,keywords,locations,main_character_defecits,main_character_descriptors,main_character_goals,moral_value,point_of_view,style,theme,title) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.533 [main] DEBUG [] [] org.hibernate.SQL - select tse1_0.title,tse1_0.ally_defecits,tse1_0.ally_descriptors,tse1_0.ally_goals,tse1_0.call_to_action,tse1_0.card_name,tse1_0.climax_description,tse1_0.climax_event,tse1_0.climax_location,tse1_0.enemy_defecits,tse1_0.enemy_descriptors,tse1_0.enemy_goals,tse1_0.keywords,tse1_0.locations,tse1_0.main_character_defecits,tse1_0.main_character_descriptors,tse1_0.main_character_goals,tse1_0.moral_value,tse1_0.point_of_view,tse1_0.style,tse1_0.theme from tarotstoryelements tse1_0 where tse1_0.title=?
2025-08-11 00:28:58.535 [main] DEBUG [] [] org.hibernate.SQL - insert into tarotstoryelements (ally_defecits,ally_descriptors,ally_goals,call_to_action,card_name,climax_description,climax_event,climax_location,enemy_defecits,enemy_descriptors,enemy_goals,keywords,locations,main_character_defecits,main_character_descriptors,main_character_goals,moral_value,point_of_view,style,theme,title) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.549 [main] DEBUG [] [] org.hibernate.SQL - select tse1_0.title,tse1_0.ally_defecits,tse1_0.ally_descriptors,tse1_0.ally_goals,tse1_0.call_to_action,tse1_0.card_name,tse1_0.climax_description,tse1_0.climax_event,tse1_0.climax_location,tse1_0.enemy_defecits,tse1_0.enemy_descriptors,tse1_0.enemy_goals,tse1_0.keywords,tse1_0.locations,tse1_0.main_character_defecits,tse1_0.main_character_descriptors,tse1_0.main_character_goals,tse1_0.moral_value,tse1_0.point_of_view,tse1_0.style,tse1_0.theme from tarotstoryelements tse1_0 where tse1_0.title=?
2025-08-11 00:28:58.553 [main] DEBUG [] [] org.hibernate.SQL - insert into tarotstoryelements (ally_defecits,ally_descriptors,ally_goals,call_to_action,card_name,climax_description,climax_event,climax_location,enemy_defecits,enemy_descriptors,enemy_goals,keywords,locations,main_character_defecits,main_character_descriptors,main_character_goals,moral_value,point_of_view,style,theme,title) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.585 [main] DEBUG [] [] org.hibernate.SQL - select tse1_0.title,tse1_0.ally_defecits,tse1_0.ally_descriptors,tse1_0.ally_goals,tse1_0.call_to_action,tse1_0.card_name,tse1_0.climax_description,tse1_0.climax_event,tse1_0.climax_location,tse1_0.enemy_defecits,tse1_0.enemy_descriptors,tse1_0.enemy_goals,tse1_0.keywords,tse1_0.locations,tse1_0.main_character_defecits,tse1_0.main_character_descriptors,tse1_0.main_character_goals,tse1_0.moral_value,tse1_0.point_of_view,tse1_0.style,tse1_0.theme from tarotstoryelements tse1_0 where tse1_0.title=?
2025-08-11 00:28:58.587 [main] DEBUG [] [] org.hibernate.SQL - insert into tarotstoryelements (ally_defecits,ally_descriptors,ally_goals,call_to_action,card_name,climax_description,climax_event,climax_location,enemy_defecits,enemy_descriptors,enemy_goals,keywords,locations,main_character_defecits,main_character_descriptors,main_character_goals,moral_value,point_of_view,style,theme,title) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.590 [main] DEBUG [] [] org.hibernate.SQL - select tse1_0.title,tse1_0.ally_defecits,tse1_0.ally_descriptors,tse1_0.ally_goals,tse1_0.call_to_action,tse1_0.card_name,tse1_0.climax_description,tse1_0.climax_event,tse1_0.climax_location,tse1_0.enemy_defecits,tse1_0.enemy_descriptors,tse1_0.enemy_goals,tse1_0.keywords,tse1_0.locations,tse1_0.main_character_defecits,tse1_0.main_character_descriptors,tse1_0.main_character_goals,tse1_0.moral_value,tse1_0.point_of_view,tse1_0.style,tse1_0.theme from tarotstoryelements tse1_0 where tse1_0.title=?
2025-08-11 00:28:58.592 [main] DEBUG [] [] org.hibernate.SQL - insert into tarotstoryelements (ally_defecits,ally_descriptors,ally_goals,call_to_action,card_name,climax_description,climax_event,climax_location,enemy_defecits,enemy_descriptors,enemy_goals,keywords,locations,main_character_defecits,main_character_descriptors,main_character_goals,moral_value,point_of_view,style,theme,title) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.596 [main] DEBUG [] [] org.hibernate.SQL - select tse1_0.title,tse1_0.ally_defecits,tse1_0.ally_descriptors,tse1_0.ally_goals,tse1_0.call_to_action,tse1_0.card_name,tse1_0.climax_description,tse1_0.climax_event,tse1_0.climax_location,tse1_0.enemy_defecits,tse1_0.enemy_descriptors,tse1_0.enemy_goals,tse1_0.keywords,tse1_0.locations,tse1_0.main_character_defecits,tse1_0.main_character_descriptors,tse1_0.main_character_goals,tse1_0.moral_value,tse1_0.point_of_view,tse1_0.style,tse1_0.theme from tarotstoryelements tse1_0 where tse1_0.title=?
2025-08-11 00:28:58.597 [main] DEBUG [] [] org.hibernate.SQL - insert into tarotstoryelements (ally_defecits,ally_descriptors,ally_goals,call_to_action,card_name,climax_description,climax_event,climax_location,enemy_defecits,enemy_descriptors,enemy_goals,keywords,locations,main_character_defecits,main_character_descriptors,main_character_goals,moral_value,point_of_view,style,theme,title) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.621 [main] DEBUG [] [] org.hibernate.SQL - select tse1_0.title,tse1_0.ally_defecits,tse1_0.ally_descriptors,tse1_0.ally_goals,tse1_0.call_to_action,tse1_0.card_name,tse1_0.climax_description,tse1_0.climax_event,tse1_0.climax_location,tse1_0.enemy_defecits,tse1_0.enemy_descriptors,tse1_0.enemy_goals,tse1_0.keywords,tse1_0.locations,tse1_0.main_character_defecits,tse1_0.main_character_descriptors,tse1_0.main_character_goals,tse1_0.moral_value,tse1_0.point_of_view,tse1_0.style,tse1_0.theme from tarotstoryelements tse1_0 where tse1_0.title=?
2025-08-11 00:28:58.623 [main] DEBUG [] [] org.hibernate.SQL - insert into tarotstoryelements (ally_defecits,ally_descriptors,ally_goals,call_to_action,card_name,climax_description,climax_event,climax_location,enemy_defecits,enemy_descriptors,enemy_goals,keywords,locations,main_character_defecits,main_character_descriptors,main_character_goals,moral_value,point_of_view,style,theme,title) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.626 [main] DEBUG [] [] org.hibernate.SQL - select tse1_0.title,tse1_0.ally_defecits,tse1_0.ally_descriptors,tse1_0.ally_goals,tse1_0.call_to_action,tse1_0.card_name,tse1_0.climax_description,tse1_0.climax_event,tse1_0.climax_location,tse1_0.enemy_defecits,tse1_0.enemy_descriptors,tse1_0.enemy_goals,tse1_0.keywords,tse1_0.locations,tse1_0.main_character_defecits,tse1_0.main_character_descriptors,tse1_0.main_character_goals,tse1_0.moral_value,tse1_0.point_of_view,tse1_0.style,tse1_0.theme from tarotstoryelements tse1_0 where tse1_0.title=?
2025-08-11 00:28:58.629 [main] DEBUG [] [] org.hibernate.SQL - insert into tarotstoryelements (ally_defecits,ally_descriptors,ally_goals,call_to_action,card_name,climax_description,climax_event,climax_location,enemy_defecits,enemy_descriptors,enemy_goals,keywords,locations,main_character_defecits,main_character_descriptors,main_character_goals,moral_value,point_of_view,style,theme,title) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.631 [main] DEBUG [] [] org.hibernate.SQL - select tse1_0.title,tse1_0.ally_defecits,tse1_0.ally_descriptors,tse1_0.ally_goals,tse1_0.call_to_action,tse1_0.card_name,tse1_0.climax_description,tse1_0.climax_event,tse1_0.climax_location,tse1_0.enemy_defecits,tse1_0.enemy_descriptors,tse1_0.enemy_goals,tse1_0.keywords,tse1_0.locations,tse1_0.main_character_defecits,tse1_0.main_character_descriptors,tse1_0.main_character_goals,tse1_0.moral_value,tse1_0.point_of_view,tse1_0.style,tse1_0.theme from tarotstoryelements tse1_0 where tse1_0.title=?
2025-08-11 00:28:58.632 [main] DEBUG [] [] org.hibernate.SQL - insert into tarotstoryelements (ally_defecits,ally_descriptors,ally_goals,call_to_action,card_name,climax_description,climax_event,climax_location,enemy_defecits,enemy_descriptors,enemy_goals,keywords,locations,main_character_defecits,main_character_descriptors,main_character_goals,moral_value,point_of_view,style,theme,title) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.634 [main] DEBUG [] [] org.hibernate.SQL - select tse1_0.title,tse1_0.ally_defecits,tse1_0.ally_descriptors,tse1_0.ally_goals,tse1_0.call_to_action,tse1_0.card_name,tse1_0.climax_description,tse1_0.climax_event,tse1_0.climax_location,tse1_0.enemy_defecits,tse1_0.enemy_descriptors,tse1_0.enemy_goals,tse1_0.keywords,tse1_0.locations,tse1_0.main_character_defecits,tse1_0.main_character_descriptors,tse1_0.main_character_goals,tse1_0.moral_value,tse1_0.point_of_view,tse1_0.style,tse1_0.theme from tarotstoryelements tse1_0 where tse1_0.title=?
2025-08-11 00:28:58.636 [main] DEBUG [] [] org.hibernate.SQL - insert into tarotstoryelements (ally_defecits,ally_descriptors,ally_goals,call_to_action,card_name,climax_description,climax_event,climax_location,enemy_defecits,enemy_descriptors,enemy_goals,keywords,locations,main_character_defecits,main_character_descriptors,main_character_goals,moral_value,point_of_view,style,theme,title) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.638 [main] DEBUG [] [] org.hibernate.SQL - select tse1_0.title,tse1_0.ally_defecits,tse1_0.ally_descriptors,tse1_0.ally_goals,tse1_0.call_to_action,tse1_0.card_name,tse1_0.climax_description,tse1_0.climax_event,tse1_0.climax_location,tse1_0.enemy_defecits,tse1_0.enemy_descriptors,tse1_0.enemy_goals,tse1_0.keywords,tse1_0.locations,tse1_0.main_character_defecits,tse1_0.main_character_descriptors,tse1_0.main_character_goals,tse1_0.moral_value,tse1_0.point_of_view,tse1_0.style,tse1_0.theme from tarotstoryelements tse1_0 where tse1_0.title=?
2025-08-11 00:28:58.640 [main] DEBUG [] [] org.hibernate.SQL - insert into tarotstoryelements (ally_defecits,ally_descriptors,ally_goals,call_to_action,card_name,climax_description,climax_event,climax_location,enemy_defecits,enemy_descriptors,enemy_goals,keywords,locations,main_character_defecits,main_character_descriptors,main_character_goals,moral_value,point_of_view,style,theme,title) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.653 [main] DEBUG [] [] org.hibernate.SQL - select tse1_0.title,tse1_0.ally_defecits,tse1_0.ally_descriptors,tse1_0.ally_goals,tse1_0.call_to_action,tse1_0.card_name,tse1_0.climax_description,tse1_0.climax_event,tse1_0.climax_location,tse1_0.enemy_defecits,tse1_0.enemy_descriptors,tse1_0.enemy_goals,tse1_0.keywords,tse1_0.locations,tse1_0.main_character_defecits,tse1_0.main_character_descriptors,tse1_0.main_character_goals,tse1_0.moral_value,tse1_0.point_of_view,tse1_0.style,tse1_0.theme from tarotstoryelements tse1_0 where tse1_0.title=?
2025-08-11 00:28:58.654 [main] DEBUG [] [] org.hibernate.SQL - insert into tarotstoryelements (ally_defecits,ally_descriptors,ally_goals,call_to_action,card_name,climax_description,climax_event,climax_location,enemy_defecits,enemy_descriptors,enemy_goals,keywords,locations,main_character_defecits,main_character_descriptors,main_character_goals,moral_value,point_of_view,style,theme,title) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.657 [main] DEBUG [] [] org.hibernate.SQL - select tse1_0.title,tse1_0.ally_defecits,tse1_0.ally_descriptors,tse1_0.ally_goals,tse1_0.call_to_action,tse1_0.card_name,tse1_0.climax_description,tse1_0.climax_event,tse1_0.climax_location,tse1_0.enemy_defecits,tse1_0.enemy_descriptors,tse1_0.enemy_goals,tse1_0.keywords,tse1_0.locations,tse1_0.main_character_defecits,tse1_0.main_character_descriptors,tse1_0.main_character_goals,tse1_0.moral_value,tse1_0.point_of_view,tse1_0.style,tse1_0.theme from tarotstoryelements tse1_0 where tse1_0.title=?
2025-08-11 00:28:58.659 [main] DEBUG [] [] org.hibernate.SQL - insert into tarotstoryelements (ally_defecits,ally_descriptors,ally_goals,call_to_action,card_name,climax_description,climax_event,climax_location,enemy_defecits,enemy_descriptors,enemy_goals,keywords,locations,main_character_defecits,main_character_descriptors,main_character_goals,moral_value,point_of_view,style,theme,title) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.664 [main] DEBUG [] [] org.hibernate.SQL - select tse1_0.title,tse1_0.ally_defecits,tse1_0.ally_descriptors,tse1_0.ally_goals,tse1_0.call_to_action,tse1_0.card_name,tse1_0.climax_description,tse1_0.climax_event,tse1_0.climax_location,tse1_0.enemy_defecits,tse1_0.enemy_descriptors,tse1_0.enemy_goals,tse1_0.keywords,tse1_0.locations,tse1_0.main_character_defecits,tse1_0.main_character_descriptors,tse1_0.main_character_goals,tse1_0.moral_value,tse1_0.point_of_view,tse1_0.style,tse1_0.theme from tarotstoryelements tse1_0 where tse1_0.title=?
2025-08-11 00:28:58.666 [main] DEBUG [] [] org.hibernate.SQL - insert into tarotstoryelements (ally_defecits,ally_descriptors,ally_goals,call_to_action,card_name,climax_description,climax_event,climax_location,enemy_defecits,enemy_descriptors,enemy_goals,keywords,locations,main_character_defecits,main_character_descriptors,main_character_goals,moral_value,point_of_view,style,theme,title) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.668 [main] DEBUG [] [] org.hibernate.SQL - select tse1_0.title,tse1_0.ally_defecits,tse1_0.ally_descriptors,tse1_0.ally_goals,tse1_0.call_to_action,tse1_0.card_name,tse1_0.climax_description,tse1_0.climax_event,tse1_0.climax_location,tse1_0.enemy_defecits,tse1_0.enemy_descriptors,tse1_0.enemy_goals,tse1_0.keywords,tse1_0.locations,tse1_0.main_character_defecits,tse1_0.main_character_descriptors,tse1_0.main_character_goals,tse1_0.moral_value,tse1_0.point_of_view,tse1_0.style,tse1_0.theme from tarotstoryelements tse1_0 where tse1_0.title=?
2025-08-11 00:28:58.670 [main] DEBUG [] [] org.hibernate.SQL - insert into tarotstoryelements (ally_defecits,ally_descriptors,ally_goals,call_to_action,card_name,climax_description,climax_event,climax_location,enemy_defecits,enemy_descriptors,enemy_goals,keywords,locations,main_character_defecits,main_character_descriptors,main_character_goals,moral_value,point_of_view,style,theme,title) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.672 [main] DEBUG [] [] org.hibernate.SQL - select tse1_0.title,tse1_0.ally_defecits,tse1_0.ally_descriptors,tse1_0.ally_goals,tse1_0.call_to_action,tse1_0.card_name,tse1_0.climax_description,tse1_0.climax_event,tse1_0.climax_location,tse1_0.enemy_defecits,tse1_0.enemy_descriptors,tse1_0.enemy_goals,tse1_0.keywords,tse1_0.locations,tse1_0.main_character_defecits,tse1_0.main_character_descriptors,tse1_0.main_character_goals,tse1_0.moral_value,tse1_0.point_of_view,tse1_0.style,tse1_0.theme from tarotstoryelements tse1_0 where tse1_0.title=?
2025-08-11 00:28:58.680 [main] DEBUG [] [] org.hibernate.SQL - insert into tarotstoryelements (ally_defecits,ally_descriptors,ally_goals,call_to_action,card_name,climax_description,climax_event,climax_location,enemy_defecits,enemy_descriptors,enemy_goals,keywords,locations,main_character_defecits,main_character_descriptors,main_character_goals,moral_value,point_of_view,style,theme,title) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.683 [main] DEBUG [] [] org.hibernate.SQL - select tse1_0.title,tse1_0.ally_defecits,tse1_0.ally_descriptors,tse1_0.ally_goals,tse1_0.call_to_action,tse1_0.card_name,tse1_0.climax_description,tse1_0.climax_event,tse1_0.climax_location,tse1_0.enemy_defecits,tse1_0.enemy_descriptors,tse1_0.enemy_goals,tse1_0.keywords,tse1_0.locations,tse1_0.main_character_defecits,tse1_0.main_character_descriptors,tse1_0.main_character_goals,tse1_0.moral_value,tse1_0.point_of_view,tse1_0.style,tse1_0.theme from tarotstoryelements tse1_0 where tse1_0.title=?
2025-08-11 00:28:58.685 [main] DEBUG [] [] org.hibernate.SQL - insert into tarotstoryelements (ally_defecits,ally_descriptors,ally_goals,call_to_action,card_name,climax_description,climax_event,climax_location,enemy_defecits,enemy_descriptors,enemy_goals,keywords,locations,main_character_defecits,main_character_descriptors,main_character_goals,moral_value,point_of_view,style,theme,title) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.688 [main] DEBUG [] [] org.hibernate.SQL - select tse1_0.title,tse1_0.ally_defecits,tse1_0.ally_descriptors,tse1_0.ally_goals,tse1_0.call_to_action,tse1_0.card_name,tse1_0.climax_description,tse1_0.climax_event,tse1_0.climax_location,tse1_0.enemy_defecits,tse1_0.enemy_descriptors,tse1_0.enemy_goals,tse1_0.keywords,tse1_0.locations,tse1_0.main_character_defecits,tse1_0.main_character_descriptors,tse1_0.main_character_goals,tse1_0.moral_value,tse1_0.point_of_view,tse1_0.style,tse1_0.theme from tarotstoryelements tse1_0 where tse1_0.title=?
2025-08-11 00:28:58.690 [main] DEBUG [] [] org.hibernate.SQL - insert into tarotstoryelements (ally_defecits,ally_descriptors,ally_goals,call_to_action,card_name,climax_description,climax_event,climax_location,enemy_defecits,enemy_descriptors,enemy_goals,keywords,locations,main_character_defecits,main_character_descriptors,main_character_goals,moral_value,point_of_view,style,theme,title) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.692 [main] DEBUG [] [] org.hibernate.SQL - select tse1_0.title,tse1_0.ally_defecits,tse1_0.ally_descriptors,tse1_0.ally_goals,tse1_0.call_to_action,tse1_0.card_name,tse1_0.climax_description,tse1_0.climax_event,tse1_0.climax_location,tse1_0.enemy_defecits,tse1_0.enemy_descriptors,tse1_0.enemy_goals,tse1_0.keywords,tse1_0.locations,tse1_0.main_character_defecits,tse1_0.main_character_descriptors,tse1_0.main_character_goals,tse1_0.moral_value,tse1_0.point_of_view,tse1_0.style,tse1_0.theme from tarotstoryelements tse1_0 where tse1_0.title=?
2025-08-11 00:28:58.694 [main] DEBUG [] [] org.hibernate.SQL - insert into tarotstoryelements (ally_defecits,ally_descriptors,ally_goals,call_to_action,card_name,climax_description,climax_event,climax_location,enemy_defecits,enemy_descriptors,enemy_goals,keywords,locations,main_character_defecits,main_character_descriptors,main_character_goals,moral_value,point_of_view,style,theme,title) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.697 [main] DEBUG [] [] org.hibernate.SQL - select tse1_0.title,tse1_0.ally_defecits,tse1_0.ally_descriptors,tse1_0.ally_goals,tse1_0.call_to_action,tse1_0.card_name,tse1_0.climax_description,tse1_0.climax_event,tse1_0.climax_location,tse1_0.enemy_defecits,tse1_0.enemy_descriptors,tse1_0.enemy_goals,tse1_0.keywords,tse1_0.locations,tse1_0.main_character_defecits,tse1_0.main_character_descriptors,tse1_0.main_character_goals,tse1_0.moral_value,tse1_0.point_of_view,tse1_0.style,tse1_0.theme from tarotstoryelements tse1_0 where tse1_0.title=?
2025-08-11 00:28:58.698 [main] DEBUG [] [] org.hibernate.SQL - insert into tarotstoryelements (ally_defecits,ally_descriptors,ally_goals,call_to_action,card_name,climax_description,climax_event,climax_location,enemy_defecits,enemy_descriptors,enemy_goals,keywords,locations,main_character_defecits,main_character_descriptors,main_character_goals,moral_value,point_of_view,style,theme,title) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.710 [main] DEBUG [] [] org.hibernate.SQL - select tse1_0.title,tse1_0.ally_defecits,tse1_0.ally_descriptors,tse1_0.ally_goals,tse1_0.call_to_action,tse1_0.card_name,tse1_0.climax_description,tse1_0.climax_event,tse1_0.climax_location,tse1_0.enemy_defecits,tse1_0.enemy_descriptors,tse1_0.enemy_goals,tse1_0.keywords,tse1_0.locations,tse1_0.main_character_defecits,tse1_0.main_character_descriptors,tse1_0.main_character_goals,tse1_0.moral_value,tse1_0.point_of_view,tse1_0.style,tse1_0.theme from tarotstoryelements tse1_0 where tse1_0.title=?
2025-08-11 00:28:58.711 [main] DEBUG [] [] org.hibernate.SQL - insert into tarotstoryelements (ally_defecits,ally_descriptors,ally_goals,call_to_action,card_name,climax_description,climax_event,climax_location,enemy_defecits,enemy_descriptors,enemy_goals,keywords,locations,main_character_defecits,main_character_descriptors,main_character_goals,moral_value,point_of_view,style,theme,title) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.715 [main] DEBUG [] [] org.hibernate.SQL - select tse1_0.title,tse1_0.ally_defecits,tse1_0.ally_descriptors,tse1_0.ally_goals,tse1_0.call_to_action,tse1_0.card_name,tse1_0.climax_description,tse1_0.climax_event,tse1_0.climax_location,tse1_0.enemy_defecits,tse1_0.enemy_descriptors,tse1_0.enemy_goals,tse1_0.keywords,tse1_0.locations,tse1_0.main_character_defecits,tse1_0.main_character_descriptors,tse1_0.main_character_goals,tse1_0.moral_value,tse1_0.point_of_view,tse1_0.style,tse1_0.theme from tarotstoryelements tse1_0 where tse1_0.title=?
2025-08-11 00:28:58.716 [main] DEBUG [] [] org.hibernate.SQL - insert into tarotstoryelements (ally_defecits,ally_descriptors,ally_goals,call_to_action,card_name,climax_description,climax_event,climax_location,enemy_defecits,enemy_descriptors,enemy_goals,keywords,locations,main_character_defecits,main_character_descriptors,main_character_goals,moral_value,point_of_view,style,theme,title) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.718 [main] DEBUG [] [] org.hibernate.SQL - select tse1_0.title,tse1_0.ally_defecits,tse1_0.ally_descriptors,tse1_0.ally_goals,tse1_0.call_to_action,tse1_0.card_name,tse1_0.climax_description,tse1_0.climax_event,tse1_0.climax_location,tse1_0.enemy_defecits,tse1_0.enemy_descriptors,tse1_0.enemy_goals,tse1_0.keywords,tse1_0.locations,tse1_0.main_character_defecits,tse1_0.main_character_descriptors,tse1_0.main_character_goals,tse1_0.moral_value,tse1_0.point_of_view,tse1_0.style,tse1_0.theme from tarotstoryelements tse1_0 where tse1_0.title=?
2025-08-11 00:28:58.719 [main] DEBUG [] [] org.hibernate.SQL - insert into tarotstoryelements (ally_defecits,ally_descriptors,ally_goals,call_to_action,card_name,climax_description,climax_event,climax_location,enemy_defecits,enemy_descriptors,enemy_goals,keywords,locations,main_character_defecits,main_character_descriptors,main_character_goals,moral_value,point_of_view,style,theme,title) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.722 [main] DEBUG [] [] org.hibernate.SQL - select tse1_0.title,tse1_0.ally_defecits,tse1_0.ally_descriptors,tse1_0.ally_goals,tse1_0.call_to_action,tse1_0.card_name,tse1_0.climax_description,tse1_0.climax_event,tse1_0.climax_location,tse1_0.enemy_defecits,tse1_0.enemy_descriptors,tse1_0.enemy_goals,tse1_0.keywords,tse1_0.locations,tse1_0.main_character_defecits,tse1_0.main_character_descriptors,tse1_0.main_character_goals,tse1_0.moral_value,tse1_0.point_of_view,tse1_0.style,tse1_0.theme from tarotstoryelements tse1_0 where tse1_0.title=?
2025-08-11 00:28:58.723 [main] DEBUG [] [] org.hibernate.SQL - insert into tarotstoryelements (ally_defecits,ally_descriptors,ally_goals,call_to_action,card_name,climax_description,climax_event,climax_location,enemy_defecits,enemy_descriptors,enemy_goals,keywords,locations,main_character_defecits,main_character_descriptors,main_character_goals,moral_value,point_of_view,style,theme,title) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.726 [main] DEBUG [] [] org.hibernate.SQL - select tse1_0.title,tse1_0.ally_defecits,tse1_0.ally_descriptors,tse1_0.ally_goals,tse1_0.call_to_action,tse1_0.card_name,tse1_0.climax_description,tse1_0.climax_event,tse1_0.climax_location,tse1_0.enemy_defecits,tse1_0.enemy_descriptors,tse1_0.enemy_goals,tse1_0.keywords,tse1_0.locations,tse1_0.main_character_defecits,tse1_0.main_character_descriptors,tse1_0.main_character_goals,tse1_0.moral_value,tse1_0.point_of_view,tse1_0.style,tse1_0.theme from tarotstoryelements tse1_0 where tse1_0.title=?
2025-08-11 00:28:58.727 [main] DEBUG [] [] org.hibernate.SQL - insert into tarotstoryelements (ally_defecits,ally_descriptors,ally_goals,call_to_action,card_name,climax_description,climax_event,climax_location,enemy_defecits,enemy_descriptors,enemy_goals,keywords,locations,main_character_defecits,main_character_descriptors,main_character_goals,moral_value,point_of_view,style,theme,title) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.730 [main] DEBUG [] [] org.hibernate.SQL - select tse1_0.title,tse1_0.ally_defecits,tse1_0.ally_descriptors,tse1_0.ally_goals,tse1_0.call_to_action,tse1_0.card_name,tse1_0.climax_description,tse1_0.climax_event,tse1_0.climax_location,tse1_0.enemy_defecits,tse1_0.enemy_descriptors,tse1_0.enemy_goals,tse1_0.keywords,tse1_0.locations,tse1_0.main_character_defecits,tse1_0.main_character_descriptors,tse1_0.main_character_goals,tse1_0.moral_value,tse1_0.point_of_view,tse1_0.style,tse1_0.theme from tarotstoryelements tse1_0 where tse1_0.title=?
2025-08-11 00:28:58.731 [main] DEBUG [] [] org.hibernate.SQL - insert into tarotstoryelements (ally_defecits,ally_descriptors,ally_goals,call_to_action,card_name,climax_description,climax_event,climax_location,enemy_defecits,enemy_descriptors,enemy_goals,keywords,locations,main_character_defecits,main_character_descriptors,main_character_goals,moral_value,point_of_view,style,theme,title) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.733 [main] DEBUG [] [] org.hibernate.SQL - select tse1_0.title,tse1_0.ally_defecits,tse1_0.ally_descriptors,tse1_0.ally_goals,tse1_0.call_to_action,tse1_0.card_name,tse1_0.climax_description,tse1_0.climax_event,tse1_0.climax_location,tse1_0.enemy_defecits,tse1_0.enemy_descriptors,tse1_0.enemy_goals,tse1_0.keywords,tse1_0.locations,tse1_0.main_character_defecits,tse1_0.main_character_descriptors,tse1_0.main_character_goals,tse1_0.moral_value,tse1_0.point_of_view,tse1_0.style,tse1_0.theme from tarotstoryelements tse1_0 where tse1_0.title=?
2025-08-11 00:28:58.734 [main] DEBUG [] [] org.hibernate.SQL - insert into tarotstoryelements (ally_defecits,ally_descriptors,ally_goals,call_to_action,card_name,climax_description,climax_event,climax_location,enemy_defecits,enemy_descriptors,enemy_goals,keywords,locations,main_character_defecits,main_character_descriptors,main_character_goals,moral_value,point_of_view,style,theme,title) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.737 [main] DEBUG [] [] org.hibernate.SQL - select tse1_0.title,tse1_0.ally_defecits,tse1_0.ally_descriptors,tse1_0.ally_goals,tse1_0.call_to_action,tse1_0.card_name,tse1_0.climax_description,tse1_0.climax_event,tse1_0.climax_location,tse1_0.enemy_defecits,tse1_0.enemy_descriptors,tse1_0.enemy_goals,tse1_0.keywords,tse1_0.locations,tse1_0.main_character_defecits,tse1_0.main_character_descriptors,tse1_0.main_character_goals,tse1_0.moral_value,tse1_0.point_of_view,tse1_0.style,tse1_0.theme from tarotstoryelements tse1_0 where tse1_0.title=?
2025-08-11 00:28:58.738 [main] DEBUG [] [] org.hibernate.SQL - insert into tarotstoryelements (ally_defecits,ally_descriptors,ally_goals,call_to_action,card_name,climax_description,climax_event,climax_location,enemy_defecits,enemy_descriptors,enemy_goals,keywords,locations,main_character_defecits,main_character_descriptors,main_character_goals,moral_value,point_of_view,style,theme,title) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.743 [main] DEBUG [] [] org.hibernate.SQL - select tse1_0.title,tse1_0.ally_defecits,tse1_0.ally_descriptors,tse1_0.ally_goals,tse1_0.call_to_action,tse1_0.card_name,tse1_0.climax_description,tse1_0.climax_event,tse1_0.climax_location,tse1_0.enemy_defecits,tse1_0.enemy_descriptors,tse1_0.enemy_goals,tse1_0.keywords,tse1_0.locations,tse1_0.main_character_defecits,tse1_0.main_character_descriptors,tse1_0.main_character_goals,tse1_0.moral_value,tse1_0.point_of_view,tse1_0.style,tse1_0.theme from tarotstoryelements tse1_0 where tse1_0.title=?
2025-08-11 00:28:58.744 [main] DEBUG [] [] org.hibernate.SQL - insert into tarotstoryelements (ally_defecits,ally_descriptors,ally_goals,call_to_action,card_name,climax_description,climax_event,climax_location,enemy_defecits,enemy_descriptors,enemy_goals,keywords,locations,main_character_defecits,main_character_descriptors,main_character_goals,moral_value,point_of_view,style,theme,title) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.748 [main] DEBUG [] [] org.hibernate.SQL - select tse1_0.title,tse1_0.ally_defecits,tse1_0.ally_descriptors,tse1_0.ally_goals,tse1_0.call_to_action,tse1_0.card_name,tse1_0.climax_description,tse1_0.climax_event,tse1_0.climax_location,tse1_0.enemy_defecits,tse1_0.enemy_descriptors,tse1_0.enemy_goals,tse1_0.keywords,tse1_0.locations,tse1_0.main_character_defecits,tse1_0.main_character_descriptors,tse1_0.main_character_goals,tse1_0.moral_value,tse1_0.point_of_view,tse1_0.style,tse1_0.theme from tarotstoryelements tse1_0 where tse1_0.title=?
2025-08-11 00:28:58.754 [main] DEBUG [] [] org.hibernate.SQL - insert into tarotstoryelements (ally_defecits,ally_descriptors,ally_goals,call_to_action,card_name,climax_description,climax_event,climax_location,enemy_defecits,enemy_descriptors,enemy_goals,keywords,locations,main_character_defecits,main_character_descriptors,main_character_goals,moral_value,point_of_view,style,theme,title) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.757 [main] DEBUG [] [] org.hibernate.SQL - select tse1_0.title,tse1_0.ally_defecits,tse1_0.ally_descriptors,tse1_0.ally_goals,tse1_0.call_to_action,tse1_0.card_name,tse1_0.climax_description,tse1_0.climax_event,tse1_0.climax_location,tse1_0.enemy_defecits,tse1_0.enemy_descriptors,tse1_0.enemy_goals,tse1_0.keywords,tse1_0.locations,tse1_0.main_character_defecits,tse1_0.main_character_descriptors,tse1_0.main_character_goals,tse1_0.moral_value,tse1_0.point_of_view,tse1_0.style,tse1_0.theme from tarotstoryelements tse1_0 where tse1_0.title=?
2025-08-11 00:28:58.758 [main] DEBUG [] [] org.hibernate.SQL - insert into tarotstoryelements (ally_defecits,ally_descriptors,ally_goals,call_to_action,card_name,climax_description,climax_event,climax_location,enemy_defecits,enemy_descriptors,enemy_goals,keywords,locations,main_character_defecits,main_character_descriptors,main_character_goals,moral_value,point_of_view,style,theme,title) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.761 [main] DEBUG [] [] org.hibernate.SQL - select tse1_0.title,tse1_0.ally_defecits,tse1_0.ally_descriptors,tse1_0.ally_goals,tse1_0.call_to_action,tse1_0.card_name,tse1_0.climax_description,tse1_0.climax_event,tse1_0.climax_location,tse1_0.enemy_defecits,tse1_0.enemy_descriptors,tse1_0.enemy_goals,tse1_0.keywords,tse1_0.locations,tse1_0.main_character_defecits,tse1_0.main_character_descriptors,tse1_0.main_character_goals,tse1_0.moral_value,tse1_0.point_of_view,tse1_0.style,tse1_0.theme from tarotstoryelements tse1_0 where tse1_0.title=?
2025-08-11 00:28:58.762 [main] DEBUG [] [] org.hibernate.SQL - insert into tarotstoryelements (ally_defecits,ally_descriptors,ally_goals,call_to_action,card_name,climax_description,climax_event,climax_location,enemy_defecits,enemy_descriptors,enemy_goals,keywords,locations,main_character_defecits,main_character_descriptors,main_character_goals,moral_value,point_of_view,style,theme,title) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.769 [main] DEBUG [] [] org.hibernate.SQL - select tse1_0.title,tse1_0.ally_defecits,tse1_0.ally_descriptors,tse1_0.ally_goals,tse1_0.call_to_action,tse1_0.card_name,tse1_0.climax_description,tse1_0.climax_event,tse1_0.climax_location,tse1_0.enemy_defecits,tse1_0.enemy_descriptors,tse1_0.enemy_goals,tse1_0.keywords,tse1_0.locations,tse1_0.main_character_defecits,tse1_0.main_character_descriptors,tse1_0.main_character_goals,tse1_0.moral_value,tse1_0.point_of_view,tse1_0.style,tse1_0.theme from tarotstoryelements tse1_0 where tse1_0.title=?
2025-08-11 00:28:58.771 [main] DEBUG [] [] org.hibernate.SQL - insert into tarotstoryelements (ally_defecits,ally_descriptors,ally_goals,call_to_action,card_name,climax_description,climax_event,climax_location,enemy_defecits,enemy_descriptors,enemy_goals,keywords,locations,main_character_defecits,main_character_descriptors,main_character_goals,moral_value,point_of_view,style,theme,title) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
2025-08-11 00:28:58.776 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from users u1_0
2025-08-11 00:29:22.352 [http-nio-8080-exec-1] INFO  [] [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-11 00:29:22.360 [http-nio-8080-exec-1] INFO  [] [] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-11 00:29:22.364 [http-nio-8080-exec-1] DEBUG [] [] o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-11 00:29:22.364 [http-nio-8080-exec-1] DEBUG [] [] o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-11 00:29:22.365 [http-nio-8080-exec-1] DEBUG [] [] o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-11 00:29:22.401 [http-nio-8080-exec-1] DEBUG [] [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@2cb4e4b1
2025-08-11 00:29:22.402 [http-nio-8080-exec-1] DEBUG [] [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@54632794
2025-08-11 00:29:22.403 [http-nio-8080-exec-1] DEBUG [] [] o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 00:29:22.404 [http-nio-8080-exec-1] INFO  [] [] o.s.web.servlet.DispatcherServlet - Completed initialization in 43 ms
2025-08-11 00:29:22.580 [http-nio-8080-exec-1] DEBUG [] [] o.s.web.servlet.DispatcherServlet - OPTIONS "/api/auth/token", parameters={}
2025-08-11 00:29:22.589 [http-nio-8080-exec-1] DEBUG [] [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping$HttpOptionsHandler#handle()
2025-08-11 00:29:22.681 [http-nio-8080-exec-1] DEBUG [] [] o.s.web.servlet.DispatcherServlet - Completed 403 FORBIDDEN
2025-08-11 00:36:13.231 [SpringApplicationShutdownHook] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-11 00:36:13.316 [SpringApplicationShutdownHook] TRACE [] [] o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@1315befe] for TypeConfiguration
2025-08-11 00:36:13.320 [SpringApplicationShutdownHook] DEBUG [] [] o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@1a72c9d2] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@1315befe]
2025-08-11 00:36:13.337 [SpringApplicationShutdownHook] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-11 00:36:13.373 [SpringApplicationShutdownHook] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-11 00:36:28.016 [main] INFO  [] [] c.mercy.tarot.TarotApplicationTests - Starting TarotApplicationTests using Java 21.0.2 with PID 11358 (started by w0xy in /Users/w0xy/code/tarot)
2025-08-11 00:36:28.018 [main] DEBUG [] [] c.mercy.tarot.TarotApplicationTests - Running with Spring Boot v3.2.4, Spring v6.1.5
2025-08-11 00:36:28.019 [main] INFO  [] [] c.mercy.tarot.TarotApplicationTests - No active profile set, falling back to 1 default profile: "default"
2025-08-11 00:36:28.064 [main] DEBUG [] [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@4fbb001b
2025-08-11 00:36:28.176 [main] INFO  [] [] c.mercy.tarot.TarotApplicationTests - Started TarotApplicationTests in 0.633 seconds (process running for 1.702)
2025-08-11 00:36:29.490 [SpringApplicationShutdownHook] DEBUG [] [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@4fbb001b, started on Mon Aug 11 00:36:28 EDT 2025
2025-08-11 00:36:34.311 [main] INFO  [] [] com.mercy.tarot.TarotApplication - Starting TarotApplication v0.0.5-SNAPSHOT using Java 21.0.2 with PID 11386 (/Users/w0xy/code/tarot/target/tarot-0.0.5-SNAPSHOT.jar started by w0xy in /Users/w0xy/code/tarot)
2025-08-11 00:36:34.314 [main] DEBUG [] [] com.mercy.tarot.TarotApplication - Running with Spring Boot v3.2.4, Spring v6.1.5
2025-08-11 00:36:34.315 [main] INFO  [] [] com.mercy.tarot.TarotApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-11 00:36:35.486 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-11 00:36:35.547 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 52 ms. Found 3 JPA repository interfaces.
2025-08-11 00:36:36.607 [main] INFO  [] [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-11 00:36:36.626 [main] INFO  [] [] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-11 00:36:36.627 [main] INFO  [] [] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.19]
2025-08-11 00:36:36.669 [main] INFO  [] [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-11 00:36:36.669 [main] INFO  [] [] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2237 ms
2025-08-11 00:36:37.054 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-11 00:36:37.341 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@b06d46d
2025-08-11 00:36:37.344 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-11 00:36:37.501 [main] INFO  [] [] org.flywaydb.core.FlywayExecutor - Database: jdbc:mysql://127.0.0.1:3306/tarot (MySQL 8.3)
2025-08-11 00:36:37.527 [main] WARN  [] [] o.f.c.i.database.base.Database - Flyway upgrade recommended: MySQL 8.3 is newer than this version of Flyway and support has not been tested. The latest supported version of MySQL is 8.1.
2025-08-11 00:36:37.703 [main] INFO  [] [] o.f.core.internal.command.DbValidate - Successfully validated 6 migrations (execution time 00:00.052s)
2025-08-11 00:36:37.720 [main] INFO  [] [] o.f.core.internal.command.DbMigrate - Current version of schema `tarot`: 1.0.6
2025-08-11 00:36:37.726 [main] INFO  [] [] o.f.core.internal.command.DbMigrate - Schema `tarot` is up to date. No migration necessary.
2025-08-11 00:36:37.786 [main] INFO  [] [] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-11 00:36:37.860 [main] INFO  [] [] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.0.CR1
2025-08-11 00:36:37.901 [main] INFO  [] [] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-11 00:36:37.983 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5c8b10b4
2025-08-11 00:36:37.984 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5c8b10b4
2025-08-11 00:36:37.984 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5c8b10b4
2025-08-11 00:36:37.984 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@1410d645
2025-08-11 00:36:37.984 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@1410d645
2025-08-11 00:36:37.984 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4ccdacf5
2025-08-11 00:36:37.985 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4ccdacf5
2025-08-11 00:36:37.985 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@5aa6da2
2025-08-11 00:36:37.985 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@5aa6da2
2025-08-11 00:36:37.985 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1a0d313
2025-08-11 00:36:37.985 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1a0d313
2025-08-11 00:36:37.985 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@1a0d313
2025-08-11 00:36:37.985 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@13908f9c
2025-08-11 00:36:37.985 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@13908f9c
2025-08-11 00:36:37.986 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@13908f9c
2025-08-11 00:36:37.986 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@329b331f
2025-08-11 00:36:37.986 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@329b331f
2025-08-11 00:36:37.986 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@640a8f93
2025-08-11 00:36:37.986 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@6335f04a
2025-08-11 00:36:37.986 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@6335f04a
2025-08-11 00:36:37.987 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@74ce7fdf
2025-08-11 00:36:37.987 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@1f26b992
2025-08-11 00:36:37.987 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@2f60cbf2
2025-08-11 00:36:37.987 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@2f60cbf2
2025-08-11 00:36:37.987 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@2f60cbf2
2025-08-11 00:36:37.987 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@631bc9f4
2025-08-11 00:36:37.988 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@631bc9f4
2025-08-11 00:36:37.988 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@631bc9f4
2025-08-11 00:36:37.988 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@642c72cf
2025-08-11 00:36:37.988 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@642c72cf
2025-08-11 00:36:37.988 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@642c72cf
2025-08-11 00:36:37.989 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@4e6cbdf1
2025-08-11 00:36:37.989 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@4e6cbdf1
2025-08-11 00:36:37.989 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@4e6cbdf1
2025-08-11 00:36:37.989 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@67fac095
2025-08-11 00:36:37.989 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@67fac095
2025-08-11 00:36:37.989 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@67fac095
2025-08-11 00:36:37.989 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@5a13f1f7
2025-08-11 00:36:37.990 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@5a13f1f7
2025-08-11 00:36:37.990 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@5dae5a70
2025-08-11 00:36:37.990 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@5dae5a70
2025-08-11 00:36:37.990 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@7686f701
2025-08-11 00:36:37.990 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@7686f701
2025-08-11 00:36:37.991 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7686f701
2025-08-11 00:36:37.991 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@47c96f2c
2025-08-11 00:36:37.991 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@210a26b
2025-08-11 00:36:37.991 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@210a26b
2025-08-11 00:36:37.991 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@2dc21583
2025-08-11 00:36:37.991 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@6cbdd1c5
2025-08-11 00:36:37.991 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@6cbdd1c5
2025-08-11 00:36:37.991 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@6cbdd1c5
2025-08-11 00:36:37.992 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@60816371
2025-08-11 00:36:37.992 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@678586f0
2025-08-11 00:36:37.992 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@5ad6f98e
2025-08-11 00:36:37.992 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@586728e8
2025-08-11 00:36:37.992 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@586728e8
2025-08-11 00:36:37.992 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@3316527e
2025-08-11 00:36:37.993 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@3316527e
2025-08-11 00:36:37.993 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@786ff0ea
2025-08-11 00:36:37.993 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@15186ce0
2025-08-11 00:36:37.993 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@745926c3
2025-08-11 00:36:37.993 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@75dd0f94
2025-08-11 00:36:37.993 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@72324965
2025-08-11 00:36:37.994 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@249b54af
2025-08-11 00:36:37.994 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@194911c1
2025-08-11 00:36:37.994 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@194911c1
2025-08-11 00:36:37.994 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@4751cd3
2025-08-11 00:36:37.994 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@4751cd3
2025-08-11 00:36:37.994 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@64ec1459
2025-08-11 00:36:37.994 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@64ec1459
2025-08-11 00:36:37.995 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@1aac0a47
2025-08-11 00:36:37.995 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@1aac0a47
2025-08-11 00:36:37.995 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4b3ad7ca
2025-08-11 00:36:37.995 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4b3ad7ca
2025-08-11 00:36:37.995 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6785c9fa
2025-08-11 00:36:37.995 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@63cf578f
2025-08-11 00:36:37.995 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@194b9783
2025-08-11 00:36:37.995 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@194b9783
2025-08-11 00:36:37.995 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@45297e7
2025-08-11 00:36:37.995 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4dd1548e
2025-08-11 00:36:37.995 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@54bb1194
2025-08-11 00:36:37.996 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@1109730f
2025-08-11 00:36:37.996 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@1109730f
2025-08-11 00:36:37.996 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1f42366
2025-08-11 00:36:37.996 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@46c662f2
2025-08-11 00:36:37.996 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@4afdfc0f
2025-08-11 00:36:37.996 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@4afdfc0f
2025-08-11 00:36:37.996 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@10b67f54
2025-08-11 00:36:37.997 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@10b67f54
2025-08-11 00:36:38.001 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@30798137
2025-08-11 00:36:38.001 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@30798137
2025-08-11 00:36:38.001 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@30798137
2025-08-11 00:36:38.002 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@455da438
2025-08-11 00:36:38.002 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@455da438
2025-08-11 00:36:38.002 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@455da438
2025-08-11 00:36:38.002 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@60652518
2025-08-11 00:36:38.003 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@438aaa9f
2025-08-11 00:36:38.003 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@3f06ebe0
2025-08-11 00:36:38.004 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@3f06ebe0
2025-08-11 00:36:38.004 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@1752e45c
2025-08-11 00:36:38.004 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@1752e45c
2025-08-11 00:36:38.004 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@1752e45c
2025-08-11 00:36:38.004 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@5ed65e4b
2025-08-11 00:36:38.004 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@481ed95c
2025-08-11 00:36:38.005 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@40cf6254
2025-08-11 00:36:38.005 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@40cf6254
2025-08-11 00:36:38.005 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@40bf0e15
2025-08-11 00:36:38.005 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@40bf0e15
2025-08-11 00:36:38.005 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@40bf0e15
2025-08-11 00:36:38.006 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@2c77344f
2025-08-11 00:36:38.006 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@2c77344f
2025-08-11 00:36:38.006 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@121ddca4
2025-08-11 00:36:38.006 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@121ddca4
2025-08-11 00:36:38.006 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@297bd171
2025-08-11 00:36:38.006 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@297bd171
2025-08-11 00:36:38.007 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@118cbded
2025-08-11 00:36:38.007 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@118cbded
2025-08-11 00:36:38.007 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@4cc26df
2025-08-11 00:36:38.007 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@4cc26df
2025-08-11 00:36:38.007 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@7848321e
2025-08-11 00:36:38.007 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@f4f843f
2025-08-11 00:36:38.014 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@15e8c040
2025-08-11 00:36:38.014 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@15e8c040
2025-08-11 00:36:38.015 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@3e39e0fb
2025-08-11 00:36:38.018 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@260d48f5
2025-08-11 00:36:38.018 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@6f106af8
2025-08-11 00:36:38.018 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@1edf71d9
2025-08-11 00:36:38.019 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@52d9d817
2025-08-11 00:36:38.019 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@131ba005
2025-08-11 00:36:38.020 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@7f305f34
2025-08-11 00:36:38.020 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@1a84a8b2
2025-08-11 00:36:38.020 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@601d295
2025-08-11 00:36:38.296 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-11 00:36:38.495 [main] DEBUG [] [] o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@268f0ff3) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@11978f52)
2025-08-11 00:36:38.495 [main] DEBUG [] [] o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3e0855b0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@484b5a21)
2025-08-11 00:36:38.496 [main] DEBUG [] [] o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@16e5344c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3ba5c4dd)
2025-08-11 00:36:38.496 [main] DEBUG [] [] o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@47fca3cc) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@55746340)
2025-08-11 00:36:38.496 [main] DEBUG [] [] o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6a0c7af6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7f1ad846)
2025-08-11 00:36:38.496 [main] DEBUG [] [] o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5d5ae6aa) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2bc2e022)
2025-08-11 00:36:38.496 [main] DEBUG [] [] o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2210e466) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@be1c08a)
2025-08-11 00:36:38.496 [main] DEBUG [] [] o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@10408ea) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3d7b3b18)
2025-08-11 00:36:38.496 [main] DEBUG [] [] o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@186dcb05) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1d0dad12)
2025-08-11 00:36:38.499 [main] DEBUG [] [] o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2025-08-11 00:36:38.499 [main] DEBUG [] [] o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2025-08-11 00:36:38.500 [main] DEBUG [] [] o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2025-08-11 00:36:38.506 [main] DEBUG [] [] o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-08-11 00:36:38.506 [main] DEBUG [] [] o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-08-11 00:36:38.517 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@51df2a41
2025-08-11 00:36:38.518 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@3e39e0fb`
2025-08-11 00:36:38.523 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-08-11 00:36:38.524 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-08-11 00:36:38.524 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-08-11 00:36:38.528 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-11 00:36:38.528 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-11 00:36:38.528 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-11 00:36:38.528 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-11 00:36:38.529 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-11 00:36:38.529 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-11 00:36:38.530 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-08-11 00:36:38.530 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-11 00:36:38.530 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-11 00:36:38.531 [main] DEBUG [] [] o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@13714753] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3c3cd7a5]
2025-08-11 00:36:39.823 [main] INFO  [] [] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-11 00:36:39.824 [main] DEBUG [] [] o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@13714753] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@65293ca5]
2025-08-11 00:36:39.827 [main] TRACE [] [] o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@65293ca5] for TypeConfiguration
2025-08-11 00:36:39.827 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-11 00:36:39.927 [main] DEBUG [] [] o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false]
2025-08-11 00:36:40.211 [main] DEBUG [] [] c.m.t.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-11 00:36:40.325 [main] INFO  [] [] c.m.tarot.controllers.CardController - CardController initialized with cardRepository: $Proxy139
2025-08-11 00:36:40.400 [main] INFO  [] [] c.m.t.controllers.StoryController - StoryController initialized with repository: $Proxy140
2025-08-11 00:36:40.444 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-11 00:36:40.679 [main] DEBUG [] [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 34 mappings in 'requestMappingHandlerMapping'
2025-08-11 00:36:40.756 [main] DEBUG [] [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 00:36:40.811 [main] INFO  [] [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@3c592c0c, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3979c6e8, org.springframework.security.web.context.SecurityContextHolderFilter@3325f17, org.springframework.security.web.header.HeaderWriterFilter@3f7b15bb, org.springframework.web.filter.CorsFilter@6fb3d3bb, org.springframework.security.web.authentication.logout.LogoutFilter@4d0b8b8b, com.mercy.tarot.security.JwtAuthenticationFilter@60c68c7b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5d51203b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@32be672d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@38a3c078, org.springframework.security.web.session.SessionManagementFilter@33a0b857, org.springframework.security.web.access.ExceptionTranslationFilter@21632bf8, org.springframework.security.web.access.intercept.AuthorizationFilter@26247027]
2025-08-11 00:36:40.908 [main] DEBUG [] [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-11 00:36:40.946 [main] DEBUG [] [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-11 00:36:41.088 [main] INFO  [] [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-08-11 00:36:41.117 [main] INFO  [] [] com.mercy.tarot.TarotApplication - Started TarotApplication in 7.636 seconds (process running for 8.617)
2025-08-11 00:36:41.423 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from users u1_0
2025-08-11 00:36:41.433 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from card c1_0
2025-08-11 00:36:41.437 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from tarotstoryelements tse1_0
2025-08-11 00:36:41.442 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from users u1_0
2025-08-11 00:41:22.406 [http-nio-8080-exec-1] INFO  [] [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-11 00:41:22.411 [http-nio-8080-exec-1] INFO  [] [] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-11 00:41:22.415 [http-nio-8080-exec-1] DEBUG [] [] o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-11 00:41:22.416 [http-nio-8080-exec-1] DEBUG [] [] o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-11 00:41:22.416 [http-nio-8080-exec-1] DEBUG [] [] o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-11 00:41:22.441 [http-nio-8080-exec-1] DEBUG [] [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@81f9b01
2025-08-11 00:41:22.443 [http-nio-8080-exec-1] DEBUG [] [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@2926144f
2025-08-11 00:41:22.445 [http-nio-8080-exec-1] DEBUG [] [] o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 00:41:22.446 [http-nio-8080-exec-1] INFO  [] [] o.s.web.servlet.DispatcherServlet - Completed initialization in 34 ms
2025-08-11 00:42:42.135 [SpringApplicationShutdownHook] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-11 00:42:42.242 [SpringApplicationShutdownHook] TRACE [] [] o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@65293ca5] for TypeConfiguration
2025-08-11 00:42:42.253 [SpringApplicationShutdownHook] DEBUG [] [] o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@35a0de28] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@65293ca5]
2025-08-11 00:42:42.350 [SpringApplicationShutdownHook] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-11 00:42:42.395 [SpringApplicationShutdownHook] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-11 00:43:02.701 [main] INFO  [] [] c.mercy.tarot.TarotApplicationTests - Starting TarotApplicationTests using Java 21.0.2 with PID 11945 (started by w0xy in /Users/w0xy/code/tarot)
2025-08-11 00:43:02.703 [main] DEBUG [] [] c.mercy.tarot.TarotApplicationTests - Running with Spring Boot v3.2.4, Spring v6.1.5
2025-08-11 00:43:02.704 [main] INFO  [] [] c.mercy.tarot.TarotApplicationTests - No active profile set, falling back to 1 default profile: "default"
2025-08-11 00:43:02.760 [main] DEBUG [] [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@4fbb001b
2025-08-11 00:43:02.884 [main] INFO  [] [] c.mercy.tarot.TarotApplicationTests - Started TarotApplicationTests in 0.787 seconds (process running for 2.637)
2025-08-11 00:43:04.364 [SpringApplicationShutdownHook] DEBUG [] [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@4fbb001b, started on Mon Aug 11 00:43:02 EDT 2025
2025-08-11 00:43:17.596 [main] INFO  [] [] com.mercy.tarot.TarotApplication - Starting TarotApplication v0.0.5-SNAPSHOT using Java 21.0.2 with PID 12006 (/Users/w0xy/code/tarot/target/tarot-0.0.5-SNAPSHOT.jar started by w0xy in /Users/w0xy/code/tarot)
2025-08-11 00:43:17.601 [main] DEBUG [] [] com.mercy.tarot.TarotApplication - Running with Spring Boot v3.2.4, Spring v6.1.5
2025-08-11 00:43:17.603 [main] INFO  [] [] com.mercy.tarot.TarotApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-11 00:43:19.951 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-11 00:43:20.158 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 187 ms. Found 3 JPA repository interfaces.
2025-08-11 00:43:22.071 [main] INFO  [] [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-11 00:43:22.097 [main] INFO  [] [] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-11 00:43:22.097 [main] INFO  [] [] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.19]
2025-08-11 00:43:22.174 [main] INFO  [] [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-11 00:43:22.174 [main] INFO  [] [] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4293 ms
2025-08-11 00:43:22.820 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-11 00:43:23.790 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2e0ad709
2025-08-11 00:43:23.795 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-11 00:43:23.929 [main] INFO  [] [] org.flywaydb.core.FlywayExecutor - Database: jdbc:mysql://127.0.0.1:3306/tarot (MySQL 8.3)
2025-08-11 00:43:23.951 [main] WARN  [] [] o.f.c.i.database.base.Database - Flyway upgrade recommended: MySQL 8.3 is newer than this version of Flyway and support has not been tested. The latest supported version of MySQL is 8.1.
2025-08-11 00:43:24.139 [main] INFO  [] [] o.f.core.internal.command.DbValidate - Successfully validated 6 migrations (execution time 00:00.067s)
2025-08-11 00:43:24.172 [main] INFO  [] [] o.f.core.internal.command.DbMigrate - Current version of schema `tarot`: 1.0.6
2025-08-11 00:43:24.181 [main] INFO  [] [] o.f.core.internal.command.DbMigrate - Schema `tarot` is up to date. No migration necessary.
2025-08-11 00:43:24.281 [main] INFO  [] [] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-11 00:43:24.419 [main] INFO  [] [] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.0.CR1
2025-08-11 00:43:24.485 [main] INFO  [] [] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-11 00:43:24.684 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3316527e
2025-08-11 00:43:24.685 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3316527e
2025-08-11 00:43:24.685 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@3316527e
2025-08-11 00:43:24.685 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@786ff0ea
2025-08-11 00:43:24.685 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@786ff0ea
2025-08-11 00:43:24.686 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@15186ce0
2025-08-11 00:43:24.686 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@15186ce0
2025-08-11 00:43:24.686 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@745926c3
2025-08-11 00:43:24.686 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@745926c3
2025-08-11 00:43:24.687 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@75dd0f94
2025-08-11 00:43:24.687 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@75dd0f94
2025-08-11 00:43:24.687 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@75dd0f94
2025-08-11 00:43:24.687 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@72324965
2025-08-11 00:43:24.687 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@72324965
2025-08-11 00:43:24.688 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@72324965
2025-08-11 00:43:24.688 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@249b54af
2025-08-11 00:43:24.688 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@249b54af
2025-08-11 00:43:24.688 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@194911c1
2025-08-11 00:43:24.689 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@4751cd3
2025-08-11 00:43:24.689 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@4751cd3
2025-08-11 00:43:24.689 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@64ec1459
2025-08-11 00:43:24.689 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@1aac0a47
2025-08-11 00:43:24.690 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@4b3ad7ca
2025-08-11 00:43:24.690 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@4b3ad7ca
2025-08-11 00:43:24.690 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@4b3ad7ca
2025-08-11 00:43:24.690 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@6785c9fa
2025-08-11 00:43:24.691 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@6785c9fa
2025-08-11 00:43:24.691 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@6785c9fa
2025-08-11 00:43:24.691 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@63cf578f
2025-08-11 00:43:24.691 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@63cf578f
2025-08-11 00:43:24.691 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@63cf578f
2025-08-11 00:43:24.692 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@194b9783
2025-08-11 00:43:24.692 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@194b9783
2025-08-11 00:43:24.692 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@194b9783
2025-08-11 00:43:24.693 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@45297e7
2025-08-11 00:43:24.693 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@45297e7
2025-08-11 00:43:24.693 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@45297e7
2025-08-11 00:43:24.693 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@4dd1548e
2025-08-11 00:43:24.693 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@4dd1548e
2025-08-11 00:43:24.694 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@54bb1194
2025-08-11 00:43:24.694 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@54bb1194
2025-08-11 00:43:24.695 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@1109730f
2025-08-11 00:43:24.695 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@1109730f
2025-08-11 00:43:24.695 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@1109730f
2025-08-11 00:43:24.695 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1f42366
2025-08-11 00:43:24.696 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@46c662f2
2025-08-11 00:43:24.696 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@46c662f2
2025-08-11 00:43:24.696 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@4afdfc0f
2025-08-11 00:43:24.696 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@10b67f54
2025-08-11 00:43:24.696 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@10b67f54
2025-08-11 00:43:24.697 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@10b67f54
2025-08-11 00:43:24.697 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@30798137
2025-08-11 00:43:24.697 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@455da438
2025-08-11 00:43:24.697 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@60652518
2025-08-11 00:43:24.697 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@438aaa9f
2025-08-11 00:43:24.698 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@438aaa9f
2025-08-11 00:43:24.698 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@3f06ebe0
2025-08-11 00:43:24.698 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@3f06ebe0
2025-08-11 00:43:24.699 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@1752e45c
2025-08-11 00:43:24.699 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@5ed65e4b
2025-08-11 00:43:24.699 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@481ed95c
2025-08-11 00:43:24.699 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@40cf6254
2025-08-11 00:43:24.699 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@40bf0e15
2025-08-11 00:43:24.700 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@2c77344f
2025-08-11 00:43:24.700 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@121ddca4
2025-08-11 00:43:24.700 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@121ddca4
2025-08-11 00:43:24.700 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@297bd171
2025-08-11 00:43:24.701 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@297bd171
2025-08-11 00:43:24.701 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@118cbded
2025-08-11 00:43:24.701 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@118cbded
2025-08-11 00:43:24.701 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@4cc26df
2025-08-11 00:43:24.701 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@4cc26df
2025-08-11 00:43:24.702 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@7848321e
2025-08-11 00:43:24.702 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@7848321e
2025-08-11 00:43:24.702 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@f4f843f
2025-08-11 00:43:24.702 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7b5833ee
2025-08-11 00:43:24.703 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@1e471884
2025-08-11 00:43:24.703 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@1e471884
2025-08-11 00:43:24.703 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@27261190
2025-08-11 00:43:24.703 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@543b0737
2025-08-11 00:43:24.704 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6e46891d
2025-08-11 00:43:24.704 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@48632f69
2025-08-11 00:43:24.708 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@48632f69
2025-08-11 00:43:24.708 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5fde1d64
2025-08-11 00:43:24.708 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5350ab17
2025-08-11 00:43:24.709 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@984de01
2025-08-11 00:43:24.709 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@984de01
2025-08-11 00:43:24.709 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@58cda03f
2025-08-11 00:43:24.709 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@58cda03f
2025-08-11 00:43:24.710 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@7757a37f
2025-08-11 00:43:24.710 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@7757a37f
2025-08-11 00:43:24.710 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@7757a37f
2025-08-11 00:43:24.710 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@2109a691
2025-08-11 00:43:24.710 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@2109a691
2025-08-11 00:43:24.711 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@2109a691
2025-08-11 00:43:24.711 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@e521067
2025-08-11 00:43:24.711 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3bab95ca
2025-08-11 00:43:24.711 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@71ad959b
2025-08-11 00:43:24.711 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@71ad959b
2025-08-11 00:43:24.711 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@1d7c9811
2025-08-11 00:43:24.712 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@1d7c9811
2025-08-11 00:43:24.712 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@1d7c9811
2025-08-11 00:43:24.712 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@3b362f1
2025-08-11 00:43:24.712 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@6451a288
2025-08-11 00:43:24.712 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@79cdf2d4
2025-08-11 00:43:24.713 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@79cdf2d4
2025-08-11 00:43:24.713 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@8851ec
2025-08-11 00:43:24.713 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@8851ec
2025-08-11 00:43:24.713 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@8851ec
2025-08-11 00:43:24.713 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@18b40fe6
2025-08-11 00:43:24.714 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@18b40fe6
2025-08-11 00:43:24.714 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7198ab9a
2025-08-11 00:43:24.714 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7198ab9a
2025-08-11 00:43:24.714 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@67d5ac2f
2025-08-11 00:43:24.714 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@67d5ac2f
2025-08-11 00:43:24.714 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@25109608
2025-08-11 00:43:24.714 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@25109608
2025-08-11 00:43:24.715 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@1d637673
2025-08-11 00:43:24.715 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@1d637673
2025-08-11 00:43:24.717 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@2913ca3e
2025-08-11 00:43:24.717 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@636dbfe7
2025-08-11 00:43:24.725 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@20fcea37
2025-08-11 00:43:24.726 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@20fcea37
2025-08-11 00:43:24.728 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@1640f20f
2025-08-11 00:43:24.729 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@134d7ffa
2025-08-11 00:43:24.729 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@24405466
2025-08-11 00:43:24.729 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@35010a6b
2025-08-11 00:43:24.729 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@4d4b019e
2025-08-11 00:43:24.729 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@7ed8b44
2025-08-11 00:43:24.730 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@21280cbb
2025-08-11 00:43:24.730 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@1cc708a7
2025-08-11 00:43:24.730 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@995ad50
2025-08-11 00:43:25.169 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-11 00:43:25.382 [main] DEBUG [] [] o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@66b40dd3) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7296fe0b)
2025-08-11 00:43:25.383 [main] DEBUG [] [] o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4a5066f5) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@578d472a)
2025-08-11 00:43:25.383 [main] DEBUG [] [] o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1191029d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@54b2d002)
2025-08-11 00:43:25.383 [main] DEBUG [] [] o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1d1c63af) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2095c331)
2025-08-11 00:43:25.383 [main] DEBUG [] [] o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3909a854) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7b795db7)
2025-08-11 00:43:25.384 [main] DEBUG [] [] o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@586486c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@b849fa6)
2025-08-11 00:43:25.384 [main] DEBUG [] [] o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7fbbdd8a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4e9ea32f)
2025-08-11 00:43:25.384 [main] DEBUG [] [] o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@79ec57b8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@56ba8e8c)
2025-08-11 00:43:25.385 [main] DEBUG [] [] o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@774c5e5c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4cf01c41)
2025-08-11 00:43:25.387 [main] DEBUG [] [] o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2025-08-11 00:43:25.388 [main] DEBUG [] [] o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2025-08-11 00:43:25.388 [main] DEBUG [] [] o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2025-08-11 00:43:25.393 [main] DEBUG [] [] o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-08-11 00:43:25.393 [main] DEBUG [] [] o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-08-11 00:43:25.398 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@4ab86b2a
2025-08-11 00:43:25.398 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@1640f20f`
2025-08-11 00:43:25.408 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-08-11 00:43:25.409 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-08-11 00:43:25.409 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-08-11 00:43:25.416 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-11 00:43:25.417 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-11 00:43:25.417 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-11 00:43:25.417 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-11 00:43:25.417 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-11 00:43:25.417 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-11 00:43:25.418 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-08-11 00:43:25.419 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-11 00:43:25.419 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-11 00:43:25.422 [main] DEBUG [] [] o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@30665461] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@146833a2]
2025-08-11 00:43:27.463 [main] INFO  [] [] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-11 00:43:27.465 [main] DEBUG [] [] o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@30665461] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@e356940]
2025-08-11 00:43:27.470 [main] TRACE [] [] o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@e356940] for TypeConfiguration
2025-08-11 00:43:27.471 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-11 00:43:27.667 [main] DEBUG [] [] o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false]
2025-08-11 00:43:28.228 [main] DEBUG [] [] c.m.t.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-11 00:43:28.638 [main] INFO  [] [] c.m.tarot.controllers.CardController - CardController initialized with cardRepository: $Proxy139
2025-08-11 00:43:28.832 [main] INFO  [] [] c.m.t.controllers.StoryController - StoryController initialized with repository: $Proxy140
2025-08-11 00:43:28.951 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-11 00:43:29.369 [main] DEBUG [] [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 34 mappings in 'requestMappingHandlerMapping'
2025-08-11 00:43:29.523 [main] DEBUG [] [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 00:43:29.622 [main] INFO  [] [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7306836f, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@e9c5db9, org.springframework.security.web.context.SecurityContextHolderFilter@16b1b213, org.springframework.security.web.header.HeaderWriterFilter@5d51203b, org.springframework.web.filter.CorsFilter@393aac93, org.springframework.security.web.authentication.logout.LogoutFilter@5d414943, com.mercy.tarot.security.JwtAuthenticationFilter@4e773b8a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1df8c7f4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@75a6cdb, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@71dac63f, org.springframework.security.web.session.SessionManagementFilter@73cd3b8, org.springframework.security.web.access.ExceptionTranslationFilter@3325f17, org.springframework.security.web.access.intercept.AuthorizationFilter@209baf91]
2025-08-11 00:43:29.834 [main] DEBUG [] [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-11 00:43:29.925 [main] DEBUG [] [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-11 00:43:30.231 [main] INFO  [] [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-08-11 00:43:30.271 [main] INFO  [] [] com.mercy.tarot.TarotApplication - Started TarotApplication in 14.629 seconds (process running for 17.813)
2025-08-11 00:43:30.906 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from card c1_0
2025-08-11 00:43:30.942 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from tarotstoryelements tse1_0
2025-08-11 00:43:30.976 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from users u1_0
2025-08-11 00:43:30.987 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from users u1_0
2025-08-11 00:43:36.100 [http-nio-8080-exec-1] INFO  [] [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-11 00:43:36.100 [http-nio-8080-exec-1] INFO  [] [] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-11 00:43:36.101 [http-nio-8080-exec-1] DEBUG [] [] o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-11 00:43:36.101 [http-nio-8080-exec-1] DEBUG [] [] o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-11 00:43:36.101 [http-nio-8080-exec-1] DEBUG [] [] o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-11 00:43:36.103 [http-nio-8080-exec-1] DEBUG [] [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@225d93aa
2025-08-11 00:43:36.104 [http-nio-8080-exec-1] DEBUG [] [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@57d8d8e2
2025-08-11 00:43:36.104 [http-nio-8080-exec-1] DEBUG [] [] o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 00:43:36.104 [http-nio-8080-exec-1] INFO  [] [] o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-08-11 00:44:53.337 [SpringApplicationShutdownHook] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-11 00:44:53.359 [SpringApplicationShutdownHook] TRACE [] [] o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@e356940] for TypeConfiguration
2025-08-11 00:44:53.360 [SpringApplicationShutdownHook] DEBUG [] [] o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@57ac61b9] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@e356940]
2025-08-11 00:44:53.363 [SpringApplicationShutdownHook] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-11 00:44:53.428 [SpringApplicationShutdownHook] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-11 00:45:05.126 [main] INFO  [] [] c.mercy.tarot.TarotApplicationTests - Starting TarotApplicationTests using Java 21.0.2 with PID 12160 (started by w0xy in /Users/w0xy/code/tarot)
2025-08-11 00:45:05.127 [main] DEBUG [] [] c.mercy.tarot.TarotApplicationTests - Running with Spring Boot v3.2.4, Spring v6.1.5
2025-08-11 00:45:05.128 [main] INFO  [] [] c.mercy.tarot.TarotApplicationTests - No active profile set, falling back to 1 default profile: "default"
2025-08-11 00:45:05.198 [main] DEBUG [] [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@4fbb001b
2025-08-11 00:45:05.327 [main] INFO  [] [] c.mercy.tarot.TarotApplicationTests - Started TarotApplicationTests in 0.594 seconds (process running for 1.748)
2025-08-11 00:45:06.645 [SpringApplicationShutdownHook] DEBUG [] [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@4fbb001b, started on Mon Aug 11 00:45:05 EDT 2025
2025-08-11 00:45:12.527 [main] INFO  [] [] com.mercy.tarot.TarotApplication - Starting TarotApplication v0.0.5-SNAPSHOT using Java 21.0.2 with PID 12193 (/Users/w0xy/code/tarot/target/tarot-0.0.5-SNAPSHOT.jar started by w0xy in /Users/w0xy/code/tarot)
2025-08-11 00:45:12.529 [main] DEBUG [] [] com.mercy.tarot.TarotApplication - Running with Spring Boot v3.2.4, Spring v6.1.5
2025-08-11 00:45:12.530 [main] INFO  [] [] com.mercy.tarot.TarotApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-11 00:45:13.616 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-11 00:45:13.725 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 95 ms. Found 3 JPA repository interfaces.
2025-08-11 00:45:15.955 [main] INFO  [] [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-11 00:45:15.980 [main] INFO  [] [] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-11 00:45:15.981 [main] INFO  [] [] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.19]
2025-08-11 00:45:16.032 [main] INFO  [] [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-11 00:45:16.032 [main] INFO  [] [] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3398 ms
2025-08-11 00:45:16.491 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-11 00:45:16.768 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5864e8bf
2025-08-11 00:45:16.771 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-11 00:45:16.890 [main] INFO  [] [] org.flywaydb.core.FlywayExecutor - Database: jdbc:mysql://127.0.0.1:3306/tarot (MySQL 8.3)
2025-08-11 00:45:16.912 [main] WARN  [] [] o.f.c.i.database.base.Database - Flyway upgrade recommended: MySQL 8.3 is newer than this version of Flyway and support has not been tested. The latest supported version of MySQL is 8.1.
2025-08-11 00:45:17.317 [main] INFO  [] [] o.f.core.internal.command.DbValidate - Successfully validated 6 migrations (execution time 00:00.385s)
2025-08-11 00:45:17.413 [main] INFO  [] [] o.f.core.internal.command.DbMigrate - Current version of schema `tarot`: 1.0.6
2025-08-11 00:45:17.420 [main] INFO  [] [] o.f.core.internal.command.DbMigrate - Schema `tarot` is up to date. No migration necessary.
2025-08-11 00:45:17.689 [main] INFO  [] [] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-11 00:45:17.903 [main] INFO  [] [] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.0.CR1
2025-08-11 00:45:17.994 [main] INFO  [] [] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-11 00:45:18.125 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7686f701
2025-08-11 00:45:18.125 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7686f701
2025-08-11 00:45:18.125 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@7686f701
2025-08-11 00:45:18.126 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@47c96f2c
2025-08-11 00:45:18.126 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@47c96f2c
2025-08-11 00:45:18.126 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@210a26b
2025-08-11 00:45:18.127 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@210a26b
2025-08-11 00:45:18.127 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2dc21583
2025-08-11 00:45:18.128 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2dc21583
2025-08-11 00:45:18.128 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6cbdd1c5
2025-08-11 00:45:18.128 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6cbdd1c5
2025-08-11 00:45:18.128 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6cbdd1c5
2025-08-11 00:45:18.128 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@60816371
2025-08-11 00:45:18.128 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@60816371
2025-08-11 00:45:18.129 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@60816371
2025-08-11 00:45:18.129 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@678586f0
2025-08-11 00:45:18.129 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@678586f0
2025-08-11 00:45:18.129 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@5ad6f98e
2025-08-11 00:45:18.129 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@586728e8
2025-08-11 00:45:18.129 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@586728e8
2025-08-11 00:45:18.130 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@3316527e
2025-08-11 00:45:18.130 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@786ff0ea
2025-08-11 00:45:18.130 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@15186ce0
2025-08-11 00:45:18.130 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@15186ce0
2025-08-11 00:45:18.130 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@15186ce0
2025-08-11 00:45:18.131 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@745926c3
2025-08-11 00:45:18.131 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@745926c3
2025-08-11 00:45:18.131 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@745926c3
2025-08-11 00:45:18.131 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@75dd0f94
2025-08-11 00:45:18.132 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@75dd0f94
2025-08-11 00:45:18.132 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@75dd0f94
2025-08-11 00:45:18.133 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@72324965
2025-08-11 00:45:18.133 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@72324965
2025-08-11 00:45:18.133 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@72324965
2025-08-11 00:45:18.133 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@249b54af
2025-08-11 00:45:18.133 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@249b54af
2025-08-11 00:45:18.134 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@249b54af
2025-08-11 00:45:18.134 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@194911c1
2025-08-11 00:45:18.134 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@194911c1
2025-08-11 00:45:18.134 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@4751cd3
2025-08-11 00:45:18.134 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@4751cd3
2025-08-11 00:45:18.134 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@64ec1459
2025-08-11 00:45:18.135 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@64ec1459
2025-08-11 00:45:18.135 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@64ec1459
2025-08-11 00:45:18.135 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1aac0a47
2025-08-11 00:45:18.136 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@4b3ad7ca
2025-08-11 00:45:18.136 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4b3ad7ca
2025-08-11 00:45:18.136 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@6785c9fa
2025-08-11 00:45:18.136 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@63cf578f
2025-08-11 00:45:18.136 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@63cf578f
2025-08-11 00:45:18.136 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@63cf578f
2025-08-11 00:45:18.136 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@194b9783
2025-08-11 00:45:18.137 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@45297e7
2025-08-11 00:45:18.138 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4dd1548e
2025-08-11 00:45:18.139 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@54bb1194
2025-08-11 00:45:18.139 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@54bb1194
2025-08-11 00:45:18.139 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1109730f
2025-08-11 00:45:18.140 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1109730f
2025-08-11 00:45:18.140 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@1f42366
2025-08-11 00:45:18.140 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@46c662f2
2025-08-11 00:45:18.140 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@4afdfc0f
2025-08-11 00:45:18.140 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@10b67f54
2025-08-11 00:45:18.141 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@30798137
2025-08-11 00:45:18.141 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@455da438
2025-08-11 00:45:18.142 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@60652518
2025-08-11 00:45:18.142 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@60652518
2025-08-11 00:45:18.142 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@438aaa9f
2025-08-11 00:45:18.143 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@438aaa9f
2025-08-11 00:45:18.143 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@3f06ebe0
2025-08-11 00:45:18.144 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@3f06ebe0
2025-08-11 00:45:18.144 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@1752e45c
2025-08-11 00:45:18.144 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@1752e45c
2025-08-11 00:45:18.144 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@5ed65e4b
2025-08-11 00:45:18.144 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@5ed65e4b
2025-08-11 00:45:18.145 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@481ed95c
2025-08-11 00:45:18.145 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@40cf6254
2025-08-11 00:45:18.145 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@40bf0e15
2025-08-11 00:45:18.145 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@40bf0e15
2025-08-11 00:45:18.145 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@2c77344f
2025-08-11 00:45:18.147 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@121ddca4
2025-08-11 00:45:18.149 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@297bd171
2025-08-11 00:45:18.150 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@118cbded
2025-08-11 00:45:18.150 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@118cbded
2025-08-11 00:45:18.152 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4cc26df
2025-08-11 00:45:18.152 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7848321e
2025-08-11 00:45:18.153 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@f4f843f
2025-08-11 00:45:18.154 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@f4f843f
2025-08-11 00:45:18.154 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@7b5833ee
2025-08-11 00:45:18.154 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@7b5833ee
2025-08-11 00:45:18.155 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@1e471884
2025-08-11 00:45:18.155 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@1e471884
2025-08-11 00:45:18.156 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@1e471884
2025-08-11 00:45:18.156 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@27261190
2025-08-11 00:45:18.156 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@27261190
2025-08-11 00:45:18.157 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@27261190
2025-08-11 00:45:18.157 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@543b0737
2025-08-11 00:45:18.157 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@6e46891d
2025-08-11 00:45:18.157 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@48632f69
2025-08-11 00:45:18.159 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@48632f69
2025-08-11 00:45:18.161 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@5fde1d64
2025-08-11 00:45:18.162 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@5fde1d64
2025-08-11 00:45:18.162 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@5fde1d64
2025-08-11 00:45:18.162 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@5350ab17
2025-08-11 00:45:18.164 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@984de01
2025-08-11 00:45:18.168 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@58cda03f
2025-08-11 00:45:18.169 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@58cda03f
2025-08-11 00:45:18.169 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@7757a37f
2025-08-11 00:45:18.170 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@7757a37f
2025-08-11 00:45:18.170 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@7757a37f
2025-08-11 00:45:18.170 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@2109a691
2025-08-11 00:45:18.171 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@2109a691
2025-08-11 00:45:18.171 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@e521067
2025-08-11 00:45:18.171 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@e521067
2025-08-11 00:45:18.171 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3bab95ca
2025-08-11 00:45:18.171 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3bab95ca
2025-08-11 00:45:18.172 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@71ad959b
2025-08-11 00:45:18.172 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@71ad959b
2025-08-11 00:45:18.172 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@1d7c9811
2025-08-11 00:45:18.172 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@1d7c9811
2025-08-11 00:45:18.172 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@3b362f1
2025-08-11 00:45:18.172 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6451a288
2025-08-11 00:45:18.179 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@7f305f34
2025-08-11 00:45:18.180 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7f305f34
2025-08-11 00:45:18.181 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@48fc0211
2025-08-11 00:45:18.182 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@3ae2702a
2025-08-11 00:45:18.182 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@134abd78
2025-08-11 00:45:18.182 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@3b0ed98a
2025-08-11 00:45:18.182 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@12448de1
2025-08-11 00:45:18.183 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2b35c7aa
2025-08-11 00:45:18.183 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6dd20ec9
2025-08-11 00:45:18.184 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@20dd5870
2025-08-11 00:45:18.184 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@1640f20f
2025-08-11 00:45:19.095 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-11 00:45:19.497 [main] DEBUG [] [] o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@58a8ea6f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2e6b379c)
2025-08-11 00:45:19.498 [main] DEBUG [] [] o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5e7e7a7e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1ff81b0d)
2025-08-11 00:45:19.499 [main] DEBUG [] [] o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1c610f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@773c7147)
2025-08-11 00:45:19.499 [main] DEBUG [] [] o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5abc5854) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5c3007d)
2025-08-11 00:45:19.499 [main] DEBUG [] [] o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@66b40dd3) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7296fe0b)
2025-08-11 00:45:19.499 [main] DEBUG [] [] o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4a5066f5) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@578d472a)
2025-08-11 00:45:19.500 [main] DEBUG [] [] o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1191029d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@54b2d002)
2025-08-11 00:45:19.501 [main] DEBUG [] [] o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1d1c63af) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2095c331)
2025-08-11 00:45:19.502 [main] DEBUG [] [] o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3909a854) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7b795db7)
2025-08-11 00:45:19.505 [main] DEBUG [] [] o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2025-08-11 00:45:19.505 [main] DEBUG [] [] o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2025-08-11 00:45:19.506 [main] DEBUG [] [] o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2025-08-11 00:45:19.513 [main] DEBUG [] [] o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-08-11 00:45:19.514 [main] DEBUG [] [] o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-08-11 00:45:19.523 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@2904bc56
2025-08-11 00:45:19.524 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@48fc0211`
2025-08-11 00:45:19.531 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-08-11 00:45:19.531 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-08-11 00:45:19.532 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-08-11 00:45:19.559 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-11 00:45:19.560 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-11 00:45:19.560 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-11 00:45:19.560 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-11 00:45:19.560 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-11 00:45:19.560 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-11 00:45:19.561 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-08-11 00:45:19.561 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-11 00:45:19.562 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-11 00:45:19.563 [main] DEBUG [] [] o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@55e5415d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@b8142f4]
2025-08-11 00:45:21.372 [main] INFO  [] [] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-11 00:45:21.373 [main] DEBUG [] [] o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@55e5415d] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@76641439]
2025-08-11 00:45:21.378 [main] TRACE [] [] o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@76641439] for TypeConfiguration
2025-08-11 00:45:21.379 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-11 00:45:21.564 [main] DEBUG [] [] o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false]
2025-08-11 00:45:21.983 [main] DEBUG [] [] c.m.t.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-11 00:45:22.152 [main] INFO  [] [] c.m.tarot.controllers.CardController - CardController initialized with cardRepository: $Proxy139
2025-08-11 00:45:22.259 [main] INFO  [] [] c.m.t.controllers.StoryController - StoryController initialized with repository: $Proxy140
2025-08-11 00:45:22.300 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-11 00:45:22.541 [main] DEBUG [] [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 34 mappings in 'requestMappingHandlerMapping'
2025-08-11 00:45:22.632 [main] DEBUG [] [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 00:45:22.696 [main] INFO  [] [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@71dac63f, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@36003e90, org.springframework.security.web.context.SecurityContextHolderFilter@75a6cdb, org.springframework.security.web.header.HeaderWriterFilter@276e5add, org.springframework.web.filter.CorsFilter@5a1ddc7c, org.springframework.security.web.authentication.logout.LogoutFilter@475c2f47, com.mercy.tarot.security.JwtAuthenticationFilter@4e6add8d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@637de489, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@38614875, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@362fbd98, org.springframework.security.web.session.SessionManagementFilter@16b1b213, org.springframework.security.web.access.ExceptionTranslationFilter@32be672d, org.springframework.security.web.access.intercept.AuthorizationFilter@7306836f]
2025-08-11 00:45:22.800 [main] DEBUG [] [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-11 00:45:22.849 [main] DEBUG [] [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-11 00:45:23.140 [main] INFO  [] [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-08-11 00:45:23.175 [main] INFO  [] [] com.mercy.tarot.TarotApplication - Started TarotApplication in 11.275 seconds (process running for 12.067)
2025-08-11 00:45:23.609 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from card c1_0
2025-08-11 00:45:23.645 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from tarotstoryelements tse1_0
2025-08-11 00:45:23.675 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from users u1_0
2025-08-11 00:45:23.723 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from users u1_0
2025-08-11 00:45:36.964 [http-nio-8080-exec-1] INFO  [] [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-11 00:45:36.969 [http-nio-8080-exec-1] INFO  [] [] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-11 00:45:36.970 [http-nio-8080-exec-1] DEBUG [] [] o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-11 00:45:36.971 [http-nio-8080-exec-1] DEBUG [] [] o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-11 00:45:36.971 [http-nio-8080-exec-1] DEBUG [] [] o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-11 00:45:36.992 [http-nio-8080-exec-1] DEBUG [] [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@4f876114
2025-08-11 00:45:36.993 [http-nio-8080-exec-1] DEBUG [] [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@4c3125ff
2025-08-11 00:45:36.995 [http-nio-8080-exec-1] DEBUG [] [] o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 00:45:36.995 [http-nio-8080-exec-1] INFO  [] [] o.s.web.servlet.DispatcherServlet - Completed initialization in 26 ms
2025-08-11 00:45:37.499 [http-nio-8080-exec-2] ERROR [] [] c.m.t.s.JwtAuthenticationFilter - Cannot set user authentication
io.jsonwebtoken.UnsupportedJwtException: The parsed JWT indicates it was signed with the 'RS256' signature algorithm, but the provided javax.crypto.spec.SecretKeySpec key may not be used to verify RS256 signatures.  Because the specified key reflects a specific and expected algorithm, and the JWT does not reflect this algorithm, it is likely that the JWT was not expected and therefore should not be trusted.  Another possibility is that the parser was provided the incorrect signature verification key, but this cannot be assumed for security reasons.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:393)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.mercy.tarot.service.JwtTokenService.getAllClaimsFromToken(JwtTokenService.java:70)
	at com.mercy.tarot.service.JwtTokenService.getClaimFromToken(JwtTokenService.java:62)
	at com.mercy.tarot.service.JwtTokenService.getUsername(JwtTokenService.java:44)
	at com.mercy.tarot.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:49)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: io.jsonwebtoken.security.InvalidKeyException: RSA verification keys must be RSAKey instances.
	at io.jsonwebtoken.SignatureAlgorithm.assertValid(SignatureAlgorithm.java:424)
	at io.jsonwebtoken.SignatureAlgorithm.assertValidVerificationKey(SignatureAlgorithm.java:328)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:380)
	... 67 common frames omitted
2025-08-11 00:45:37.535 [http-nio-8080-exec-2] DEBUG [] [] o.s.web.servlet.DispatcherServlet - POST "/api/auth/token", parameters={}
2025-08-11 00:45:37.544 [http-nio-8080-exec-2] WARN  [] [] o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' is not supported]
2025-08-11 00:45:37.545 [http-nio-8080-exec-2] DEBUG [] [] o.s.web.servlet.DispatcherServlet - Completed 405 METHOD_NOT_ALLOWED
2025-08-11 00:45:38.067 [http-nio-8080-exec-3] ERROR [] [] c.m.t.s.JwtAuthenticationFilter - Cannot set user authentication
io.jsonwebtoken.UnsupportedJwtException: The parsed JWT indicates it was signed with the 'RS256' signature algorithm, but the provided javax.crypto.spec.SecretKeySpec key may not be used to verify RS256 signatures.  Because the specified key reflects a specific and expected algorithm, and the JWT does not reflect this algorithm, it is likely that the JWT was not expected and therefore should not be trusted.  Another possibility is that the parser was provided the incorrect signature verification key, but this cannot be assumed for security reasons.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:393)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.mercy.tarot.service.JwtTokenService.getAllClaimsFromToken(JwtTokenService.java:70)
	at com.mercy.tarot.service.JwtTokenService.getClaimFromToken(JwtTokenService.java:62)
	at com.mercy.tarot.service.JwtTokenService.getUsername(JwtTokenService.java:44)
	at com.mercy.tarot.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:49)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: io.jsonwebtoken.security.InvalidKeyException: RSA verification keys must be RSAKey instances.
	at io.jsonwebtoken.SignatureAlgorithm.assertValid(SignatureAlgorithm.java:424)
	at io.jsonwebtoken.SignatureAlgorithm.assertValidVerificationKey(SignatureAlgorithm.java:328)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:380)
	... 67 common frames omitted
2025-08-11 00:45:38.073 [http-nio-8080-exec-3] DEBUG [] [] o.s.web.servlet.DispatcherServlet - POST "/api/auth/token", parameters={}
2025-08-11 00:45:38.070 [http-nio-8080-exec-4] ERROR [] [] c.m.t.s.JwtAuthenticationFilter - Cannot set user authentication
io.jsonwebtoken.UnsupportedJwtException: The parsed JWT indicates it was signed with the 'RS256' signature algorithm, but the provided javax.crypto.spec.SecretKeySpec key may not be used to verify RS256 signatures.  Because the specified key reflects a specific and expected algorithm, and the JWT does not reflect this algorithm, it is likely that the JWT was not expected and therefore should not be trusted.  Another possibility is that the parser was provided the incorrect signature verification key, but this cannot be assumed for security reasons.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:393)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.mercy.tarot.service.JwtTokenService.getAllClaimsFromToken(JwtTokenService.java:70)
	at com.mercy.tarot.service.JwtTokenService.getClaimFromToken(JwtTokenService.java:62)
	at com.mercy.tarot.service.JwtTokenService.getUsername(JwtTokenService.java:44)
	at com.mercy.tarot.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:49)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: io.jsonwebtoken.security.InvalidKeyException: RSA verification keys must be RSAKey instances.
	at io.jsonwebtoken.SignatureAlgorithm.assertValid(SignatureAlgorithm.java:424)
	at io.jsonwebtoken.SignatureAlgorithm.assertValidVerificationKey(SignatureAlgorithm.java:328)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:380)
	... 67 common frames omitted
2025-08-11 00:45:38.077 [http-nio-8080-exec-4] DEBUG [] [] o.s.web.servlet.DispatcherServlet - POST "/api/auth/token", parameters={}
2025-08-11 00:45:38.077 [http-nio-8080-exec-3] WARN  [] [] o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' is not supported]
2025-08-11 00:45:38.077 [http-nio-8080-exec-3] DEBUG [] [] o.s.web.servlet.DispatcherServlet - Completed 405 METHOD_NOT_ALLOWED
2025-08-11 00:45:38.078 [http-nio-8080-exec-4] WARN  [] [] o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' is not supported]
2025-08-11 00:45:38.078 [http-nio-8080-exec-4] DEBUG [] [] o.s.web.servlet.DispatcherServlet - Completed 405 METHOD_NOT_ALLOWED
2025-08-11 00:46:00.588 [http-nio-8080-exec-6] ERROR [] [] c.m.t.s.JwtAuthenticationFilter - Cannot set user authentication
io.jsonwebtoken.UnsupportedJwtException: The parsed JWT indicates it was signed with the 'RS256' signature algorithm, but the provided javax.crypto.spec.SecretKeySpec key may not be used to verify RS256 signatures.  Because the specified key reflects a specific and expected algorithm, and the JWT does not reflect this algorithm, it is likely that the JWT was not expected and therefore should not be trusted.  Another possibility is that the parser was provided the incorrect signature verification key, but this cannot be assumed for security reasons.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:393)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.mercy.tarot.service.JwtTokenService.getAllClaimsFromToken(JwtTokenService.java:70)
	at com.mercy.tarot.service.JwtTokenService.getClaimFromToken(JwtTokenService.java:62)
	at com.mercy.tarot.service.JwtTokenService.getUsername(JwtTokenService.java:44)
	at com.mercy.tarot.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:49)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: io.jsonwebtoken.security.InvalidKeyException: RSA verification keys must be RSAKey instances.
	at io.jsonwebtoken.SignatureAlgorithm.assertValid(SignatureAlgorithm.java:424)
	at io.jsonwebtoken.SignatureAlgorithm.assertValidVerificationKey(SignatureAlgorithm.java:328)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:380)
	... 67 common frames omitted
2025-08-11 00:46:00.588 [http-nio-8080-exec-5] ERROR [] [] c.m.t.s.JwtAuthenticationFilter - Cannot set user authentication
io.jsonwebtoken.UnsupportedJwtException: The parsed JWT indicates it was signed with the 'RS256' signature algorithm, but the provided javax.crypto.spec.SecretKeySpec key may not be used to verify RS256 signatures.  Because the specified key reflects a specific and expected algorithm, and the JWT does not reflect this algorithm, it is likely that the JWT was not expected and therefore should not be trusted.  Another possibility is that the parser was provided the incorrect signature verification key, but this cannot be assumed for security reasons.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:393)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.mercy.tarot.service.JwtTokenService.getAllClaimsFromToken(JwtTokenService.java:70)
	at com.mercy.tarot.service.JwtTokenService.getClaimFromToken(JwtTokenService.java:62)
	at com.mercy.tarot.service.JwtTokenService.getUsername(JwtTokenService.java:44)
	at com.mercy.tarot.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:49)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: io.jsonwebtoken.security.InvalidKeyException: RSA verification keys must be RSAKey instances.
	at io.jsonwebtoken.SignatureAlgorithm.assertValid(SignatureAlgorithm.java:424)
	at io.jsonwebtoken.SignatureAlgorithm.assertValidVerificationKey(SignatureAlgorithm.java:328)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:380)
	... 67 common frames omitted
2025-08-11 00:46:00.603 [http-nio-8080-exec-6] DEBUG [] [] o.s.web.servlet.DispatcherServlet - POST "/api/auth/token", parameters={}
2025-08-11 00:46:00.613 [http-nio-8080-exec-5] DEBUG [] [] o.s.web.servlet.DispatcherServlet - POST "/api/auth/token", parameters={}
2025-08-11 00:46:00.615 [http-nio-8080-exec-6] WARN  [] [] o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' is not supported]
2025-08-11 00:46:00.615 [http-nio-8080-exec-5] WARN  [] [] o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' is not supported]
2025-08-11 00:46:00.616 [http-nio-8080-exec-5] DEBUG [] [] o.s.web.servlet.DispatcherServlet - Completed 405 METHOD_NOT_ALLOWED
2025-08-11 00:46:00.616 [http-nio-8080-exec-6] DEBUG [] [] o.s.web.servlet.DispatcherServlet - Completed 405 METHOD_NOT_ALLOWED
2025-08-11 00:46:06.571 [http-nio-8080-exec-8] ERROR [] [] c.m.t.s.JwtAuthenticationFilter - Cannot set user authentication
io.jsonwebtoken.UnsupportedJwtException: The parsed JWT indicates it was signed with the 'RS256' signature algorithm, but the provided javax.crypto.spec.SecretKeySpec key may not be used to verify RS256 signatures.  Because the specified key reflects a specific and expected algorithm, and the JWT does not reflect this algorithm, it is likely that the JWT was not expected and therefore should not be trusted.  Another possibility is that the parser was provided the incorrect signature verification key, but this cannot be assumed for security reasons.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:393)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.mercy.tarot.service.JwtTokenService.getAllClaimsFromToken(JwtTokenService.java:70)
	at com.mercy.tarot.service.JwtTokenService.getClaimFromToken(JwtTokenService.java:62)
	at com.mercy.tarot.service.JwtTokenService.getUsername(JwtTokenService.java:44)
	at com.mercy.tarot.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:49)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: io.jsonwebtoken.security.InvalidKeyException: RSA verification keys must be RSAKey instances.
	at io.jsonwebtoken.SignatureAlgorithm.assertValid(SignatureAlgorithm.java:424)
	at io.jsonwebtoken.SignatureAlgorithm.assertValidVerificationKey(SignatureAlgorithm.java:328)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:380)
	... 67 common frames omitted
2025-08-11 00:46:06.577 [http-nio-8080-exec-8] DEBUG [] [] o.s.web.servlet.DispatcherServlet - POST "/api/auth/token", parameters={}
2025-08-11 00:46:06.571 [http-nio-8080-exec-7] ERROR [] [] c.m.t.s.JwtAuthenticationFilter - Cannot set user authentication
io.jsonwebtoken.UnsupportedJwtException: The parsed JWT indicates it was signed with the 'RS256' signature algorithm, but the provided javax.crypto.spec.SecretKeySpec key may not be used to verify RS256 signatures.  Because the specified key reflects a specific and expected algorithm, and the JWT does not reflect this algorithm, it is likely that the JWT was not expected and therefore should not be trusted.  Another possibility is that the parser was provided the incorrect signature verification key, but this cannot be assumed for security reasons.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:393)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.mercy.tarot.service.JwtTokenService.getAllClaimsFromToken(JwtTokenService.java:70)
	at com.mercy.tarot.service.JwtTokenService.getClaimFromToken(JwtTokenService.java:62)
	at com.mercy.tarot.service.JwtTokenService.getUsername(JwtTokenService.java:44)
	at com.mercy.tarot.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:49)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: io.jsonwebtoken.security.InvalidKeyException: RSA verification keys must be RSAKey instances.
	at io.jsonwebtoken.SignatureAlgorithm.assertValid(SignatureAlgorithm.java:424)
	at io.jsonwebtoken.SignatureAlgorithm.assertValidVerificationKey(SignatureAlgorithm.java:328)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:380)
	... 67 common frames omitted
2025-08-11 00:46:06.579 [http-nio-8080-exec-8] WARN  [] [] o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' is not supported]
2025-08-11 00:46:06.579 [http-nio-8080-exec-8] DEBUG [] [] o.s.web.servlet.DispatcherServlet - Completed 405 METHOD_NOT_ALLOWED
2025-08-11 00:46:06.580 [http-nio-8080-exec-7] DEBUG [] [] o.s.web.servlet.DispatcherServlet - POST "/api/auth/token", parameters={}
2025-08-11 00:46:06.580 [http-nio-8080-exec-7] WARN  [] [] o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' is not supported]
2025-08-11 00:46:06.580 [http-nio-8080-exec-7] DEBUG [] [] o.s.web.servlet.DispatcherServlet - Completed 405 METHOD_NOT_ALLOWED
2025-08-11 00:46:23.973 [http-nio-8080-exec-9] DEBUG [] [] o.s.web.servlet.DispatcherServlet - GET "/api/users/check-email?email=ariosa%40gmail.com", parameters={masked}
2025-08-11 00:46:23.982 [http-nio-8080-exec-9] DEBUG [] [] o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-11 00:46:24.017 [http-nio-8080-exec-9] DEBUG [] [] o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-08-11 00:46:24.021 [http-nio-8080-exec-9] DEBUG [] [] o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/users/check-email.]
2025-08-11 00:46:24.025 [http-nio-8080-exec-9] DEBUG [] [] o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-08-11 00:56:35.905 [SpringApplicationShutdownHook] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-11 00:56:35.989 [SpringApplicationShutdownHook] TRACE [] [] o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@76641439] for TypeConfiguration
2025-08-11 00:56:35.991 [SpringApplicationShutdownHook] DEBUG [] [] o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@310a3a70] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@76641439]
2025-08-11 00:56:36.015 [SpringApplicationShutdownHook] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-11 00:56:36.055 [SpringApplicationShutdownHook] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-11 00:56:51.475 [main] INFO  [] [] c.mercy.tarot.TarotApplicationTests - Starting TarotApplicationTests using Java 21.0.2 with PID 12690 (started by w0xy in /Users/w0xy/code/tarot)
2025-08-11 00:56:51.477 [main] DEBUG [] [] c.mercy.tarot.TarotApplicationTests - Running with Spring Boot v3.2.4, Spring v6.1.5
2025-08-11 00:56:51.478 [main] INFO  [] [] c.mercy.tarot.TarotApplicationTests - No active profile set, falling back to 1 default profile: "default"
2025-08-11 00:56:51.525 [main] DEBUG [] [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@4fbb001b
2025-08-11 00:56:51.634 [main] INFO  [] [] c.mercy.tarot.TarotApplicationTests - Started TarotApplicationTests in 0.677 seconds (process running for 1.854)
2025-08-11 00:56:52.953 [SpringApplicationShutdownHook] DEBUG [] [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@4fbb001b, started on Mon Aug 11 00:56:51 EDT 2025
2025-08-11 00:56:58.152 [main] INFO  [] [] com.mercy.tarot.TarotApplication - Starting TarotApplication v0.0.5-SNAPSHOT using Java 21.0.2 with PID 12718 (/Users/w0xy/code/tarot/target/tarot-0.0.5-SNAPSHOT.jar started by w0xy in /Users/w0xy/code/tarot)
2025-08-11 00:56:58.154 [main] DEBUG [] [] com.mercy.tarot.TarotApplication - Running with Spring Boot v3.2.4, Spring v6.1.5
2025-08-11 00:56:58.155 [main] INFO  [] [] com.mercy.tarot.TarotApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-11 00:56:59.041 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-11 00:56:59.098 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 50 ms. Found 3 JPA repository interfaces.
2025-08-11 00:56:59.930 [main] INFO  [] [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-11 00:56:59.953 [main] INFO  [] [] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-11 00:56:59.953 [main] INFO  [] [] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.19]
2025-08-11 00:56:59.993 [main] INFO  [] [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-11 00:56:59.993 [main] INFO  [] [] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1750 ms
2025-08-11 00:57:00.354 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-11 00:57:00.625 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6321a5aa
2025-08-11 00:57:00.628 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-11 00:57:00.790 [main] INFO  [] [] org.flywaydb.core.FlywayExecutor - Database: jdbc:mysql://127.0.0.1:3306/tarot (MySQL 8.3)
2025-08-11 00:57:00.843 [main] WARN  [] [] o.f.c.i.database.base.Database - Flyway upgrade recommended: MySQL 8.3 is newer than this version of Flyway and support has not been tested. The latest supported version of MySQL is 8.1.
2025-08-11 00:57:00.986 [main] INFO  [] [] o.f.core.internal.command.DbValidate - Successfully validated 6 migrations (execution time 00:00.083s)
2025-08-11 00:57:01.025 [main] INFO  [] [] o.f.core.internal.command.DbMigrate - Current version of schema `tarot`: 1.0.6
2025-08-11 00:57:01.031 [main] INFO  [] [] o.f.core.internal.command.DbMigrate - Schema `tarot` is up to date. No migration necessary.
2025-08-11 00:57:01.092 [main] INFO  [] [] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-11 00:57:01.164 [main] INFO  [] [] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.0.CR1
2025-08-11 00:57:01.203 [main] INFO  [] [] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-11 00:57:01.284 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@47c96f2c
2025-08-11 00:57:01.285 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@47c96f2c
2025-08-11 00:57:01.285 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@47c96f2c
2025-08-11 00:57:01.285 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@210a26b
2025-08-11 00:57:01.285 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@210a26b
2025-08-11 00:57:01.285 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2dc21583
2025-08-11 00:57:01.285 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2dc21583
2025-08-11 00:57:01.286 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@6cbdd1c5
2025-08-11 00:57:01.286 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@6cbdd1c5
2025-08-11 00:57:01.286 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@60816371
2025-08-11 00:57:01.287 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@60816371
2025-08-11 00:57:01.287 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@60816371
2025-08-11 00:57:01.287 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@678586f0
2025-08-11 00:57:01.287 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@678586f0
2025-08-11 00:57:01.287 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@678586f0
2025-08-11 00:57:01.288 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@5ad6f98e
2025-08-11 00:57:01.288 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@5ad6f98e
2025-08-11 00:57:01.288 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@586728e8
2025-08-11 00:57:01.288 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@3316527e
2025-08-11 00:57:01.288 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@3316527e
2025-08-11 00:57:01.288 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@786ff0ea
2025-08-11 00:57:01.289 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@15186ce0
2025-08-11 00:57:01.289 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@745926c3
2025-08-11 00:57:01.289 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@745926c3
2025-08-11 00:57:01.289 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@745926c3
2025-08-11 00:57:01.289 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@75dd0f94
2025-08-11 00:57:01.289 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@75dd0f94
2025-08-11 00:57:01.289 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@75dd0f94
2025-08-11 00:57:01.290 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@72324965
2025-08-11 00:57:01.290 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@72324965
2025-08-11 00:57:01.290 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@72324965
2025-08-11 00:57:01.290 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@249b54af
2025-08-11 00:57:01.290 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@249b54af
2025-08-11 00:57:01.290 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@249b54af
2025-08-11 00:57:01.290 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@194911c1
2025-08-11 00:57:01.291 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@194911c1
2025-08-11 00:57:01.291 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@194911c1
2025-08-11 00:57:01.291 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@4751cd3
2025-08-11 00:57:01.291 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@4751cd3
2025-08-11 00:57:01.292 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@64ec1459
2025-08-11 00:57:01.292 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@64ec1459
2025-08-11 00:57:01.292 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@1aac0a47
2025-08-11 00:57:01.292 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@1aac0a47
2025-08-11 00:57:01.292 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@1aac0a47
2025-08-11 00:57:01.292 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@4b3ad7ca
2025-08-11 00:57:01.293 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@6785c9fa
2025-08-11 00:57:01.293 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@6785c9fa
2025-08-11 00:57:01.293 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@63cf578f
2025-08-11 00:57:01.293 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@194b9783
2025-08-11 00:57:01.293 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@194b9783
2025-08-11 00:57:01.293 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@194b9783
2025-08-11 00:57:01.293 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@45297e7
2025-08-11 00:57:01.294 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@4dd1548e
2025-08-11 00:57:01.294 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@54bb1194
2025-08-11 00:57:01.294 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@1109730f
2025-08-11 00:57:01.294 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@1109730f
2025-08-11 00:57:01.294 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1f42366
2025-08-11 00:57:01.294 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1f42366
2025-08-11 00:57:01.294 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@46c662f2
2025-08-11 00:57:01.295 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@4afdfc0f
2025-08-11 00:57:01.295 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@10b67f54
2025-08-11 00:57:01.295 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@30798137
2025-08-11 00:57:01.295 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@455da438
2025-08-11 00:57:01.295 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@60652518
2025-08-11 00:57:01.296 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@438aaa9f
2025-08-11 00:57:01.296 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@438aaa9f
2025-08-11 00:57:01.297 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3f06ebe0
2025-08-11 00:57:01.297 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3f06ebe0
2025-08-11 00:57:01.297 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@1752e45c
2025-08-11 00:57:01.297 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@1752e45c
2025-08-11 00:57:01.297 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@5ed65e4b
2025-08-11 00:57:01.297 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@5ed65e4b
2025-08-11 00:57:01.297 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@481ed95c
2025-08-11 00:57:01.297 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@481ed95c
2025-08-11 00:57:01.298 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@40cf6254
2025-08-11 00:57:01.298 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@40bf0e15
2025-08-11 00:57:01.298 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2c77344f
2025-08-11 00:57:01.298 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2c77344f
2025-08-11 00:57:01.298 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@121ddca4
2025-08-11 00:57:01.298 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@297bd171
2025-08-11 00:57:01.298 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@118cbded
2025-08-11 00:57:01.299 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@4cc26df
2025-08-11 00:57:01.299 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@4cc26df
2025-08-11 00:57:01.299 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7848321e
2025-08-11 00:57:01.299 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@f4f843f
2025-08-11 00:57:01.299 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@7b5833ee
2025-08-11 00:57:01.299 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@7b5833ee
2025-08-11 00:57:01.299 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@1e471884
2025-08-11 00:57:01.299 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@1e471884
2025-08-11 00:57:01.300 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@27261190
2025-08-11 00:57:01.300 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@27261190
2025-08-11 00:57:01.300 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@27261190
2025-08-11 00:57:01.300 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@543b0737
2025-08-11 00:57:01.300 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@543b0737
2025-08-11 00:57:01.300 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@543b0737
2025-08-11 00:57:01.301 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@6e46891d
2025-08-11 00:57:01.301 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@48632f69
2025-08-11 00:57:01.301 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@5fde1d64
2025-08-11 00:57:01.301 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5fde1d64
2025-08-11 00:57:01.301 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@5350ab17
2025-08-11 00:57:01.301 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@5350ab17
2025-08-11 00:57:01.301 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@5350ab17
2025-08-11 00:57:01.302 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@984de01
2025-08-11 00:57:01.303 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@58cda03f
2025-08-11 00:57:01.303 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@7757a37f
2025-08-11 00:57:01.303 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@7757a37f
2025-08-11 00:57:01.303 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@2109a691
2025-08-11 00:57:01.304 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@2109a691
2025-08-11 00:57:01.305 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@2109a691
2025-08-11 00:57:01.305 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@e521067
2025-08-11 00:57:01.305 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@e521067
2025-08-11 00:57:01.306 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@3bab95ca
2025-08-11 00:57:01.306 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@3bab95ca
2025-08-11 00:57:01.306 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@71ad959b
2025-08-11 00:57:01.306 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@71ad959b
2025-08-11 00:57:01.306 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@1d7c9811
2025-08-11 00:57:01.306 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@1d7c9811
2025-08-11 00:57:01.306 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@3b362f1
2025-08-11 00:57:01.306 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@3b362f1
2025-08-11 00:57:01.306 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@6451a288
2025-08-11 00:57:01.307 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@79cdf2d4
2025-08-11 00:57:01.312 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@1a84a8b2
2025-08-11 00:57:01.312 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@1a84a8b2
2025-08-11 00:57:01.314 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@3ae2702a
2025-08-11 00:57:01.315 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@7d088813
2025-08-11 00:57:01.315 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@3b0ed98a
2025-08-11 00:57:01.315 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@12448de1
2025-08-11 00:57:01.315 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@2b35c7aa
2025-08-11 00:57:01.315 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@6dd20ec9
2025-08-11 00:57:01.316 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@20dd5870
2025-08-11 00:57:01.316 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@1640f20f
2025-08-11 00:57:01.316 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@134d7ffa
2025-08-11 00:57:01.605 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-11 00:57:01.740 [main] DEBUG [] [] o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@58a8ea6f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2e6b379c)
2025-08-11 00:57:01.740 [main] DEBUG [] [] o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5e7e7a7e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1ff81b0d)
2025-08-11 00:57:01.740 [main] DEBUG [] [] o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1c610f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@773c7147)
2025-08-11 00:57:01.741 [main] DEBUG [] [] o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5abc5854) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5c3007d)
2025-08-11 00:57:01.741 [main] DEBUG [] [] o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@66b40dd3) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7296fe0b)
2025-08-11 00:57:01.741 [main] DEBUG [] [] o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4a5066f5) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@578d472a)
2025-08-11 00:57:01.741 [main] DEBUG [] [] o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1191029d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@54b2d002)
2025-08-11 00:57:01.741 [main] DEBUG [] [] o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1d1c63af) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2095c331)
2025-08-11 00:57:01.741 [main] DEBUG [] [] o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3909a854) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7b795db7)
2025-08-11 00:57:01.743 [main] DEBUG [] [] o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2025-08-11 00:57:01.743 [main] DEBUG [] [] o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2025-08-11 00:57:01.744 [main] DEBUG [] [] o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2025-08-11 00:57:01.746 [main] DEBUG [] [] o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-08-11 00:57:01.747 [main] DEBUG [] [] o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-08-11 00:57:01.750 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@2904bc56
2025-08-11 00:57:01.750 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@3ae2702a`
2025-08-11 00:57:01.756 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-08-11 00:57:01.756 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-08-11 00:57:01.756 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-08-11 00:57:01.760 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-11 00:57:01.761 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-11 00:57:01.761 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-11 00:57:01.761 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-11 00:57:01.761 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-11 00:57:01.761 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-11 00:57:01.762 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-08-11 00:57:01.763 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-11 00:57:01.763 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-11 00:57:01.764 [main] DEBUG [] [] o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@55e5415d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@b8142f4]
2025-08-11 00:57:02.988 [main] INFO  [] [] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-11 00:57:02.989 [main] DEBUG [] [] o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@55e5415d] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@753c7411]
2025-08-11 00:57:02.991 [main] TRACE [] [] o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@753c7411] for TypeConfiguration
2025-08-11 00:57:02.992 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-11 00:57:03.099 [main] DEBUG [] [] o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false]
2025-08-11 00:57:03.397 [main] DEBUG [] [] c.m.t.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-11 00:57:03.520 [main] INFO  [] [] c.m.tarot.controllers.CardController - CardController initialized with cardRepository: $Proxy139
2025-08-11 00:57:03.615 [main] INFO  [] [] c.m.t.controllers.StoryController - StoryController initialized with repository: $Proxy140
2025-08-11 00:57:03.672 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-11 00:57:03.897 [main] DEBUG [] [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 34 mappings in 'requestMappingHandlerMapping'
2025-08-11 00:57:03.976 [main] DEBUG [] [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 00:57:04.036 [main] INFO  [] [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5e1d3188, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5982255e, org.springframework.security.web.context.SecurityContextHolderFilter@6421d85c, org.springframework.security.web.header.HeaderWriterFilter@3325f17, org.springframework.web.filter.CorsFilter@7306836f, org.springframework.security.web.authentication.logout.LogoutFilter@4b094115, com.mercy.tarot.security.JwtAuthenticationFilter@7053a864, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@16b1b213, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@77f1026e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@e9c5db9, org.springframework.security.web.session.SessionManagementFilter@4a5e0faf, org.springframework.security.web.access.ExceptionTranslationFilter@b3c7c75, org.springframework.security.web.access.intercept.AuthorizationFilter@7200702]
2025-08-11 00:57:04.137 [main] DEBUG [] [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-11 00:57:04.178 [main] DEBUG [] [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-11 00:57:04.324 [main] INFO  [] [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-08-11 00:57:04.356 [main] INFO  [] [] com.mercy.tarot.TarotApplication - Started TarotApplication in 6.774 seconds (process running for 7.646)
2025-08-11 00:57:04.692 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from users u1_0
2025-08-11 00:57:04.718 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from card c1_0
2025-08-11 00:57:04.725 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from tarotstoryelements tse1_0
2025-08-11 00:57:04.734 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from users u1_0
2025-08-11 00:57:26.839 [http-nio-8080-exec-1] INFO  [] [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-11 00:57:26.842 [http-nio-8080-exec-1] INFO  [] [] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-11 00:57:26.843 [http-nio-8080-exec-1] DEBUG [] [] o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-11 00:57:26.844 [http-nio-8080-exec-1] DEBUG [] [] o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-11 00:57:26.844 [http-nio-8080-exec-1] DEBUG [] [] o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-11 00:57:26.854 [http-nio-8080-exec-1] DEBUG [] [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@5a438c0a
2025-08-11 00:57:26.854 [http-nio-8080-exec-1] DEBUG [] [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@560e1459
2025-08-11 00:57:26.855 [http-nio-8080-exec-1] DEBUG [] [] o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 00:57:26.855 [http-nio-8080-exec-1] INFO  [] [] o.s.web.servlet.DispatcherServlet - Completed initialization in 13 ms
2025-08-11 00:57:26.971 [http-nio-8080-exec-1] DEBUG [] [] o.s.web.servlet.DispatcherServlet - GET "/api/users/check-email?email=ariosa%40gmail.com", parameters={masked}
2025-08-11 00:57:26.977 [http-nio-8080-exec-1] DEBUG [] [] o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-11 00:57:26.999 [http-nio-8080-exec-1] DEBUG [] [] o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-08-11 00:57:27.003 [http-nio-8080-exec-1] DEBUG [] [] o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/users/check-email.]
2025-08-11 00:57:27.005 [http-nio-8080-exec-1] DEBUG [] [] o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-08-11 00:58:13.248 [SpringApplicationShutdownHook] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-11 00:58:13.272 [SpringApplicationShutdownHook] TRACE [] [] o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@753c7411] for TypeConfiguration
2025-08-11 00:58:13.276 [SpringApplicationShutdownHook] DEBUG [] [] o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@43df9bf1] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@753c7411]
2025-08-11 00:58:13.285 [SpringApplicationShutdownHook] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-11 00:58:13.349 [SpringApplicationShutdownHook] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-11 00:58:24.648 [main] INFO  [] [] c.mercy.tarot.TarotApplicationTests - Starting TarotApplicationTests using Java 21.0.2 with PID 12844 (started by w0xy in /Users/w0xy/code/tarot)
2025-08-11 00:58:24.649 [main] DEBUG [] [] c.mercy.tarot.TarotApplicationTests - Running with Spring Boot v3.2.4, Spring v6.1.5
2025-08-11 00:58:24.650 [main] INFO  [] [] c.mercy.tarot.TarotApplicationTests - No active profile set, falling back to 1 default profile: "default"
2025-08-11 00:58:24.687 [main] DEBUG [] [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@4fbb001b
2025-08-11 00:58:24.774 [main] INFO  [] [] c.mercy.tarot.TarotApplicationTests - Started TarotApplicationTests in 0.528 seconds (process running for 1.562)
2025-08-11 00:58:25.954 [SpringApplicationShutdownHook] DEBUG [] [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@4fbb001b, started on Mon Aug 11 00:58:24 EDT 2025
2025-08-11 00:58:30.678 [main] INFO  [] [] com.mercy.tarot.TarotApplication - Starting TarotApplication v0.0.5-SNAPSHOT using Java 21.0.2 with PID 12873 (/Users/w0xy/code/tarot/target/tarot-0.0.5-SNAPSHOT.jar started by w0xy in /Users/w0xy/code/tarot)
2025-08-11 00:58:30.679 [main] DEBUG [] [] com.mercy.tarot.TarotApplication - Running with Spring Boot v3.2.4, Spring v6.1.5
2025-08-11 00:58:30.680 [main] INFO  [] [] com.mercy.tarot.TarotApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-11 00:58:31.686 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-11 00:58:31.739 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 47 ms. Found 3 JPA repository interfaces.
2025-08-11 00:58:32.475 [main] INFO  [] [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-11 00:58:32.489 [main] INFO  [] [] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-11 00:58:32.489 [main] INFO  [] [] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.19]
2025-08-11 00:58:32.524 [main] INFO  [] [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-11 00:58:32.524 [main] INFO  [] [] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1740 ms
2025-08-11 00:58:32.807 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-11 00:58:33.022 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5329f6b3
2025-08-11 00:58:33.024 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-11 00:58:33.097 [main] INFO  [] [] org.flywaydb.core.FlywayExecutor - Database: jdbc:mysql://127.0.0.1:3306/tarot (MySQL 8.3)
2025-08-11 00:58:33.114 [main] WARN  [] [] o.f.c.i.database.base.Database - Flyway upgrade recommended: MySQL 8.3 is newer than this version of Flyway and support has not been tested. The latest supported version of MySQL is 8.1.
2025-08-11 00:58:33.230 [main] INFO  [] [] o.f.core.internal.command.DbValidate - Successfully validated 6 migrations (execution time 00:00.093s)
2025-08-11 00:58:33.256 [main] INFO  [] [] o.f.core.internal.command.DbMigrate - Current version of schema `tarot`: 1.0.6
2025-08-11 00:58:33.259 [main] INFO  [] [] o.f.core.internal.command.DbMigrate - Schema `tarot` is up to date. No migration necessary.
2025-08-11 00:58:33.311 [main] INFO  [] [] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-11 00:58:33.379 [main] INFO  [] [] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.0.CR1
2025-08-11 00:58:33.419 [main] INFO  [] [] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-11 00:58:33.489 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@74ce7fdf
2025-08-11 00:58:33.490 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@74ce7fdf
2025-08-11 00:58:33.490 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@74ce7fdf
2025-08-11 00:58:33.490 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@1f26b992
2025-08-11 00:58:33.490 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@1f26b992
2025-08-11 00:58:33.490 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2f60cbf2
2025-08-11 00:58:33.490 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2f60cbf2
2025-08-11 00:58:33.491 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@631bc9f4
2025-08-11 00:58:33.491 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@631bc9f4
2025-08-11 00:58:33.491 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@642c72cf
2025-08-11 00:58:33.491 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@642c72cf
2025-08-11 00:58:33.491 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@642c72cf
2025-08-11 00:58:33.491 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@4e6cbdf1
2025-08-11 00:58:33.492 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@4e6cbdf1
2025-08-11 00:58:33.492 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@4e6cbdf1
2025-08-11 00:58:33.492 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@67fac095
2025-08-11 00:58:33.492 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@67fac095
2025-08-11 00:58:33.492 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@5a13f1f7
2025-08-11 00:58:33.492 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@5dae5a70
2025-08-11 00:58:33.493 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5dae5a70
2025-08-11 00:58:33.493 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7686f701
2025-08-11 00:58:33.493 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@47c96f2c
2025-08-11 00:58:33.493 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@210a26b
2025-08-11 00:58:33.494 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@210a26b
2025-08-11 00:58:33.494 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@210a26b
2025-08-11 00:58:33.494 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@2dc21583
2025-08-11 00:58:33.494 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@2dc21583
2025-08-11 00:58:33.494 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@2dc21583
2025-08-11 00:58:33.494 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@6cbdd1c5
2025-08-11 00:58:33.494 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@6cbdd1c5
2025-08-11 00:58:33.495 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6cbdd1c5
2025-08-11 00:58:33.495 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@60816371
2025-08-11 00:58:33.495 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@60816371
2025-08-11 00:58:33.495 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@60816371
2025-08-11 00:58:33.495 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@678586f0
2025-08-11 00:58:33.495 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@678586f0
2025-08-11 00:58:33.495 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@678586f0
2025-08-11 00:58:33.496 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@5ad6f98e
2025-08-11 00:58:33.496 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@5ad6f98e
2025-08-11 00:58:33.496 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@586728e8
2025-08-11 00:58:33.497 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@586728e8
2025-08-11 00:58:33.497 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@3316527e
2025-08-11 00:58:33.497 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@3316527e
2025-08-11 00:58:33.497 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3316527e
2025-08-11 00:58:33.497 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@786ff0ea
2025-08-11 00:58:33.497 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@15186ce0
2025-08-11 00:58:33.497 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@15186ce0
2025-08-11 00:58:33.497 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@745926c3
2025-08-11 00:58:33.498 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@75dd0f94
2025-08-11 00:58:33.498 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@75dd0f94
2025-08-11 00:58:33.498 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@75dd0f94
2025-08-11 00:58:33.498 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@72324965
2025-08-11 00:58:33.498 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@249b54af
2025-08-11 00:58:33.498 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@194911c1
2025-08-11 00:58:33.498 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@4751cd3
2025-08-11 00:58:33.498 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@4751cd3
2025-08-11 00:58:33.498 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@64ec1459
2025-08-11 00:58:33.499 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@64ec1459
2025-08-11 00:58:33.499 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@1aac0a47
2025-08-11 00:58:33.499 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@4b3ad7ca
2025-08-11 00:58:33.499 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6785c9fa
2025-08-11 00:58:33.500 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@63cf578f
2025-08-11 00:58:33.500 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@194b9783
2025-08-11 00:58:33.500 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@45297e7
2025-08-11 00:58:33.500 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@4dd1548e
2025-08-11 00:58:33.500 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@4dd1548e
2025-08-11 00:58:33.500 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@54bb1194
2025-08-11 00:58:33.500 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@54bb1194
2025-08-11 00:58:33.500 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@1109730f
2025-08-11 00:58:33.501 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@1109730f
2025-08-11 00:58:33.501 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@1f42366
2025-08-11 00:58:33.501 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@1f42366
2025-08-11 00:58:33.501 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@46c662f2
2025-08-11 00:58:33.501 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@46c662f2
2025-08-11 00:58:33.501 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4afdfc0f
2025-08-11 00:58:33.501 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@10b67f54
2025-08-11 00:58:33.502 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@30798137
2025-08-11 00:58:33.502 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@30798137
2025-08-11 00:58:33.502 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@455da438
2025-08-11 00:58:33.502 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@60652518
2025-08-11 00:58:33.503 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@438aaa9f
2025-08-11 00:58:33.503 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@3f06ebe0
2025-08-11 00:58:33.503 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@3f06ebe0
2025-08-11 00:58:33.503 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1752e45c
2025-08-11 00:58:33.503 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5ed65e4b
2025-08-11 00:58:33.503 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@481ed95c
2025-08-11 00:58:33.503 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@481ed95c
2025-08-11 00:58:33.503 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@40cf6254
2025-08-11 00:58:33.504 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@40cf6254
2025-08-11 00:58:33.504 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@40bf0e15
2025-08-11 00:58:33.504 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@40bf0e15
2025-08-11 00:58:33.504 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@40bf0e15
2025-08-11 00:58:33.504 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@2c77344f
2025-08-11 00:58:33.505 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@2c77344f
2025-08-11 00:58:33.505 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@2c77344f
2025-08-11 00:58:33.505 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@121ddca4
2025-08-11 00:58:33.505 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@297bd171
2025-08-11 00:58:33.505 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@118cbded
2025-08-11 00:58:33.505 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@118cbded
2025-08-11 00:58:33.505 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@4cc26df
2025-08-11 00:58:33.505 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@4cc26df
2025-08-11 00:58:33.505 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@4cc26df
2025-08-11 00:58:33.506 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7848321e
2025-08-11 00:58:33.506 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@f4f843f
2025-08-11 00:58:33.506 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@7b5833ee
2025-08-11 00:58:33.506 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@7b5833ee
2025-08-11 00:58:33.506 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@1e471884
2025-08-11 00:58:33.506 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@1e471884
2025-08-11 00:58:33.506 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@1e471884
2025-08-11 00:58:33.506 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@27261190
2025-08-11 00:58:33.506 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@27261190
2025-08-11 00:58:33.506 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@543b0737
2025-08-11 00:58:33.507 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@543b0737
2025-08-11 00:58:33.507 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@6e46891d
2025-08-11 00:58:33.507 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@6e46891d
2025-08-11 00:58:33.507 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@48632f69
2025-08-11 00:58:33.507 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@48632f69
2025-08-11 00:58:33.507 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@5fde1d64
2025-08-11 00:58:33.507 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@5fde1d64
2025-08-11 00:58:33.508 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@5350ab17
2025-08-11 00:58:33.508 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@984de01
2025-08-11 00:58:33.513 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@2d73e8c4
2025-08-11 00:58:33.513 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2d73e8c4
2025-08-11 00:58:33.514 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@601d295
2025-08-11 00:58:33.514 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@485451d8
2025-08-11 00:58:33.514 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@a1e912f
2025-08-11 00:58:33.514 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@2036f83
2025-08-11 00:58:33.515 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@68b3248a
2025-08-11 00:58:33.515 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@5e158f33
2025-08-11 00:58:33.515 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@20fcea37
2025-08-11 00:58:33.515 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@399af6dc
2025-08-11 00:58:33.515 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@48fc0211
2025-08-11 00:58:33.739 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-11 00:58:33.837 [main] DEBUG [] [] o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7f1ad846) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5d5ae6aa)
2025-08-11 00:58:33.837 [main] DEBUG [] [] o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2bc2e022) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2210e466)
2025-08-11 00:58:33.837 [main] DEBUG [] [] o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@be1c08a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@10408ea)
2025-08-11 00:58:33.837 [main] DEBUG [] [] o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3d7b3b18) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@186dcb05)
2025-08-11 00:58:33.837 [main] DEBUG [] [] o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1d0dad12) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3c6fb501)
2025-08-11 00:58:33.837 [main] DEBUG [] [] o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@58a8ea6f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2e6b379c)
2025-08-11 00:58:33.837 [main] DEBUG [] [] o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5e7e7a7e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1ff81b0d)
2025-08-11 00:58:33.837 [main] DEBUG [] [] o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1c610f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@773c7147)
2025-08-11 00:58:33.837 [main] DEBUG [] [] o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5abc5854) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5c3007d)
2025-08-11 00:58:33.839 [main] DEBUG [] [] o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2025-08-11 00:58:33.839 [main] DEBUG [] [] o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2025-08-11 00:58:33.839 [main] DEBUG [] [] o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2025-08-11 00:58:33.841 [main] DEBUG [] [] o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-08-11 00:58:33.841 [main] DEBUG [] [] o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-08-11 00:58:33.844 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@13137835
2025-08-11 00:58:33.844 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@601d295`
2025-08-11 00:58:33.847 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-08-11 00:58:33.847 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-08-11 00:58:33.847 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-08-11 00:58:33.850 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-11 00:58:33.850 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-11 00:58:33.850 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-11 00:58:33.850 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-11 00:58:33.850 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-11 00:58:33.850 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-11 00:58:33.851 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-08-11 00:58:33.851 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-11 00:58:33.852 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-11 00:58:33.853 [main] DEBUG [] [] o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@39ead1b7] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@27ec74a3]
2025-08-11 00:58:34.867 [main] INFO  [] [] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-11 00:58:34.868 [main] DEBUG [] [] o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@39ead1b7] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@e60c466]
2025-08-11 00:58:34.870 [main] TRACE [] [] o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@e60c466] for TypeConfiguration
2025-08-11 00:58:34.871 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-11 00:58:34.954 [main] DEBUG [] [] o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false]
2025-08-11 00:58:35.201 [main] DEBUG [] [] c.m.t.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-11 00:58:35.285 [main] INFO  [] [] c.m.tarot.controllers.CardController - CardController initialized with cardRepository: $Proxy139
2025-08-11 00:58:35.352 [main] INFO  [] [] c.m.t.controllers.StoryController - StoryController initialized with repository: $Proxy140
2025-08-11 00:58:35.391 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-11 00:58:35.567 [main] DEBUG [] [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 34 mappings in 'requestMappingHandlerMapping'
2025-08-11 00:58:35.638 [main] DEBUG [] [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 00:58:35.689 [main] INFO  [] [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5481001f, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5581e273, org.springframework.security.web.context.SecurityContextHolderFilter@6ec9f664, org.springframework.security.web.header.HeaderWriterFilter@409b1740, org.springframework.web.filter.CorsFilter@475c2f47, org.springframework.security.web.authentication.logout.LogoutFilter@996293a, com.mercy.tarot.security.JwtAuthenticationFilter@121b7a95, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1b48784a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7ab17cf, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@10806dbe, org.springframework.security.web.session.SessionManagementFilter@736af6f3, org.springframework.security.web.access.ExceptionTranslationFilter@6cbb79c3, org.springframework.security.web.access.intercept.AuthorizationFilter@4b094115]
2025-08-11 00:58:35.774 [main] DEBUG [] [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-11 00:58:35.811 [main] DEBUG [] [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-11 00:58:36.048 [main] INFO  [] [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-08-11 00:58:36.092 [main] INFO  [] [] com.mercy.tarot.TarotApplication - Started TarotApplication in 6.28 seconds (process running for 7.123)
2025-08-11 00:58:36.724 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from users u1_0
2025-08-11 00:58:36.804 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from card c1_0
2025-08-11 00:58:36.809 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from tarotstoryelements tse1_0
2025-08-11 00:58:36.852 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from users u1_0
2025-08-11 00:58:51.520 [http-nio-8080-exec-1] INFO  [] [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-11 00:58:51.521 [http-nio-8080-exec-1] INFO  [] [] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-11 00:58:51.522 [http-nio-8080-exec-1] DEBUG [] [] o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-11 00:58:51.522 [http-nio-8080-exec-1] DEBUG [] [] o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-11 00:58:51.522 [http-nio-8080-exec-1] DEBUG [] [] o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-11 00:58:51.523 [http-nio-8080-exec-1] DEBUG [] [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@293988dc
2025-08-11 00:58:51.524 [http-nio-8080-exec-1] DEBUG [] [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@159e9629
2025-08-11 00:58:51.524 [http-nio-8080-exec-1] DEBUG [] [] o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 00:58:51.525 [http-nio-8080-exec-1] INFO  [] [] o.s.web.servlet.DispatcherServlet - Completed initialization in 4 ms
2025-08-11 00:58:51.598 [http-nio-8080-exec-1] DEBUG [] [] o.s.web.servlet.DispatcherServlet - GET "/api/users/check-email?email=ariosa%40gmail.com", parameters={masked}
2025-08-11 00:58:51.601 [http-nio-8080-exec-1] DEBUG [] [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mercy.tarot.controllers.UserController#checkEmailExists(String)
2025-08-11 00:58:51.683 [http-nio-8080-exec-1] DEBUG [] [] org.hibernate.SQL - select u1_0.id,u1_0.created_at,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.photo_url,u1_0.updated_at from users u1_0 where u1_0.email=?
2025-08-11 00:58:51.712 [http-nio-8080-exec-1] DEBUG [] [] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-11 00:58:51.714 [http-nio-8080-exec-1] DEBUG [] [] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{exists=false}]
2025-08-11 00:58:51.731 [http-nio-8080-exec-1] DEBUG [] [] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-11 00:58:51.768 [http-nio-8080-exec-3] DEBUG [] [] o.s.web.servlet.DispatcherServlet - POST "/api/auth/register", parameters={}
2025-08-11 00:58:51.769 [http-nio-8080-exec-3] DEBUG [] [] o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-11 00:58:51.772 [http-nio-8080-exec-3] DEBUG [] [] o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-08-11 00:58:51.774 [http-nio-8080-exec-3] DEBUG [] [] o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/auth/register.]
2025-08-11 00:58:51.775 [http-nio-8080-exec-3] DEBUG [] [] o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-08-11 01:01:40.386 [SpringApplicationShutdownHook] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-11 01:01:40.424 [SpringApplicationShutdownHook] TRACE [] [] o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@e60c466] for TypeConfiguration
2025-08-11 01:01:40.427 [SpringApplicationShutdownHook] DEBUG [] [] o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@1f540768] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@e60c466]
2025-08-11 01:01:40.443 [SpringApplicationShutdownHook] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-11 01:01:40.566 [SpringApplicationShutdownHook] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-11 01:01:53.541 [main] INFO  [] [] c.mercy.tarot.TarotApplicationTests - Starting TarotApplicationTests using Java 21.0.2 with PID 13081 (started by w0xy in /Users/w0xy/code/tarot)
2025-08-11 01:01:53.544 [main] DEBUG [] [] c.mercy.tarot.TarotApplicationTests - Running with Spring Boot v3.2.4, Spring v6.1.5
2025-08-11 01:01:53.546 [main] INFO  [] [] c.mercy.tarot.TarotApplicationTests - No active profile set, falling back to 1 default profile: "default"
2025-08-11 01:01:53.619 [main] DEBUG [] [] o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@4fbb001b
2025-08-11 01:01:53.806 [main] INFO  [] [] c.mercy.tarot.TarotApplicationTests - Started TarotApplicationTests in 1.411 seconds (process running for 2.473)
2025-08-11 01:01:55.932 [SpringApplicationShutdownHook] DEBUG [] [] o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@4fbb001b, started on Mon Aug 11 01:01:53 EDT 2025
2025-08-11 01:02:11.783 [main] INFO  [] [] com.mercy.tarot.TarotApplication - Starting TarotApplication v0.0.5-SNAPSHOT using Java 21.0.2 with PID 13125 (/Users/w0xy/code/tarot/target/tarot-0.0.5-SNAPSHOT.jar started by w0xy in /Users/w0xy/code/tarot)
2025-08-11 01:02:11.785 [main] DEBUG [] [] com.mercy.tarot.TarotApplication - Running with Spring Boot v3.2.4, Spring v6.1.5
2025-08-11 01:02:11.786 [main] INFO  [] [] com.mercy.tarot.TarotApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-11 01:02:12.686 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-11 01:02:12.742 [main] INFO  [] [] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 50 ms. Found 3 JPA repository interfaces.
2025-08-11 01:02:13.528 [main] INFO  [] [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-11 01:02:13.541 [main] INFO  [] [] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-11 01:02:13.541 [main] INFO  [] [] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.19]
2025-08-11 01:02:13.577 [main] INFO  [] [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-11 01:02:13.578 [main] INFO  [] [] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1714 ms
2025-08-11 01:02:13.869 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-11 01:02:14.086 [main] INFO  [] [] com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6321a5aa
2025-08-11 01:02:14.088 [main] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-11 01:02:14.157 [main] INFO  [] [] org.flywaydb.core.FlywayExecutor - Database: jdbc:mysql://127.0.0.1:3306/tarot (MySQL 8.3)
2025-08-11 01:02:14.171 [main] WARN  [] [] o.f.c.i.database.base.Database - Flyway upgrade recommended: MySQL 8.3 is newer than this version of Flyway and support has not been tested. The latest supported version of MySQL is 8.1.
2025-08-11 01:02:14.254 [main] INFO  [] [] o.f.core.internal.command.DbValidate - Successfully validated 6 migrations (execution time 00:00.060s)
2025-08-11 01:02:14.280 [main] INFO  [] [] o.f.core.internal.command.DbMigrate - Current version of schema `tarot`: 1.0.6
2025-08-11 01:02:14.284 [main] INFO  [] [] o.f.core.internal.command.DbMigrate - Schema `tarot` is up to date. No migration necessary.
2025-08-11 01:02:14.345 [main] INFO  [] [] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-11 01:02:14.422 [main] INFO  [] [] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.0.CR1
2025-08-11 01:02:14.470 [main] INFO  [] [] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-11 01:02:14.559 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@47c96f2c
2025-08-11 01:02:14.559 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@47c96f2c
2025-08-11 01:02:14.559 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@47c96f2c
2025-08-11 01:02:14.559 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@210a26b
2025-08-11 01:02:14.559 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@210a26b
2025-08-11 01:02:14.560 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2dc21583
2025-08-11 01:02:14.560 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2dc21583
2025-08-11 01:02:14.560 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@6cbdd1c5
2025-08-11 01:02:14.560 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@6cbdd1c5
2025-08-11 01:02:14.560 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@60816371
2025-08-11 01:02:14.560 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@60816371
2025-08-11 01:02:14.560 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@60816371
2025-08-11 01:02:14.560 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@678586f0
2025-08-11 01:02:14.560 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@678586f0
2025-08-11 01:02:14.561 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@678586f0
2025-08-11 01:02:14.561 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@5ad6f98e
2025-08-11 01:02:14.561 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@5ad6f98e
2025-08-11 01:02:14.561 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@586728e8
2025-08-11 01:02:14.561 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@3316527e
2025-08-11 01:02:14.561 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@3316527e
2025-08-11 01:02:14.561 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@786ff0ea
2025-08-11 01:02:14.561 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@15186ce0
2025-08-11 01:02:14.562 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@745926c3
2025-08-11 01:02:14.562 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@745926c3
2025-08-11 01:02:14.562 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@745926c3
2025-08-11 01:02:14.562 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@75dd0f94
2025-08-11 01:02:14.562 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@75dd0f94
2025-08-11 01:02:14.562 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@75dd0f94
2025-08-11 01:02:14.563 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@72324965
2025-08-11 01:02:14.563 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@72324965
2025-08-11 01:02:14.563 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@72324965
2025-08-11 01:02:14.563 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@249b54af
2025-08-11 01:02:14.563 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@249b54af
2025-08-11 01:02:14.563 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@249b54af
2025-08-11 01:02:14.564 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@194911c1
2025-08-11 01:02:14.564 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@194911c1
2025-08-11 01:02:14.564 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@194911c1
2025-08-11 01:02:14.564 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@4751cd3
2025-08-11 01:02:14.564 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@4751cd3
2025-08-11 01:02:14.564 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@64ec1459
2025-08-11 01:02:14.565 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@64ec1459
2025-08-11 01:02:14.565 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@1aac0a47
2025-08-11 01:02:14.565 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@1aac0a47
2025-08-11 01:02:14.565 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@1aac0a47
2025-08-11 01:02:14.565 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@4b3ad7ca
2025-08-11 01:02:14.565 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@6785c9fa
2025-08-11 01:02:14.566 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@6785c9fa
2025-08-11 01:02:14.566 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@63cf578f
2025-08-11 01:02:14.566 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@194b9783
2025-08-11 01:02:14.566 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@194b9783
2025-08-11 01:02:14.568 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@194b9783
2025-08-11 01:02:14.569 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@45297e7
2025-08-11 01:02:14.569 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@4dd1548e
2025-08-11 01:02:14.569 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@54bb1194
2025-08-11 01:02:14.569 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@1109730f
2025-08-11 01:02:14.569 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@1109730f
2025-08-11 01:02:14.569 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1f42366
2025-08-11 01:02:14.569 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1f42366
2025-08-11 01:02:14.569 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@46c662f2
2025-08-11 01:02:14.570 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@4afdfc0f
2025-08-11 01:02:14.570 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@10b67f54
2025-08-11 01:02:14.570 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@30798137
2025-08-11 01:02:14.570 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@455da438
2025-08-11 01:02:14.570 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@60652518
2025-08-11 01:02:14.570 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@438aaa9f
2025-08-11 01:02:14.570 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@438aaa9f
2025-08-11 01:02:14.571 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3f06ebe0
2025-08-11 01:02:14.571 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3f06ebe0
2025-08-11 01:02:14.571 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@1752e45c
2025-08-11 01:02:14.571 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@1752e45c
2025-08-11 01:02:14.571 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@5ed65e4b
2025-08-11 01:02:14.571 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@5ed65e4b
2025-08-11 01:02:14.572 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@481ed95c
2025-08-11 01:02:14.572 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@481ed95c
2025-08-11 01:02:14.572 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@40cf6254
2025-08-11 01:02:14.572 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@40bf0e15
2025-08-11 01:02:14.572 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2c77344f
2025-08-11 01:02:14.572 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2c77344f
2025-08-11 01:02:14.572 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@121ddca4
2025-08-11 01:02:14.572 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@297bd171
2025-08-11 01:02:14.573 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@118cbded
2025-08-11 01:02:14.573 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@4cc26df
2025-08-11 01:02:14.573 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@4cc26df
2025-08-11 01:02:14.573 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7848321e
2025-08-11 01:02:14.573 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@f4f843f
2025-08-11 01:02:14.573 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@7b5833ee
2025-08-11 01:02:14.573 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@7b5833ee
2025-08-11 01:02:14.574 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@1e471884
2025-08-11 01:02:14.574 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@1e471884
2025-08-11 01:02:14.574 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@27261190
2025-08-11 01:02:14.574 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@27261190
2025-08-11 01:02:14.574 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@27261190
2025-08-11 01:02:14.574 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@543b0737
2025-08-11 01:02:14.574 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@543b0737
2025-08-11 01:02:14.574 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@543b0737
2025-08-11 01:02:14.575 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@6e46891d
2025-08-11 01:02:14.575 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@48632f69
2025-08-11 01:02:14.575 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@5fde1d64
2025-08-11 01:02:14.575 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5fde1d64
2025-08-11 01:02:14.575 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@5350ab17
2025-08-11 01:02:14.575 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@5350ab17
2025-08-11 01:02:14.575 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@5350ab17
2025-08-11 01:02:14.576 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@984de01
2025-08-11 01:02:14.576 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@58cda03f
2025-08-11 01:02:14.576 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@7757a37f
2025-08-11 01:02:14.577 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@7757a37f
2025-08-11 01:02:14.577 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@2109a691
2025-08-11 01:02:14.577 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@2109a691
2025-08-11 01:02:14.577 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@2109a691
2025-08-11 01:02:14.577 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@e521067
2025-08-11 01:02:14.577 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@e521067
2025-08-11 01:02:14.578 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@3bab95ca
2025-08-11 01:02:14.578 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@3bab95ca
2025-08-11 01:02:14.578 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@71ad959b
2025-08-11 01:02:14.578 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@71ad959b
2025-08-11 01:02:14.579 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@1d7c9811
2025-08-11 01:02:14.579 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@1d7c9811
2025-08-11 01:02:14.580 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@3b362f1
2025-08-11 01:02:14.580 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@3b362f1
2025-08-11 01:02:14.580 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@6451a288
2025-08-11 01:02:14.581 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@79cdf2d4
2025-08-11 01:02:14.587 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@1a84a8b2
2025-08-11 01:02:14.587 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@1a84a8b2
2025-08-11 01:02:14.589 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@3ae2702a
2025-08-11 01:02:14.590 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@7d088813
2025-08-11 01:02:14.590 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@3b0ed98a
2025-08-11 01:02:14.590 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@12448de1
2025-08-11 01:02:14.590 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@2b35c7aa
2025-08-11 01:02:14.590 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@6dd20ec9
2025-08-11 01:02:14.590 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@20dd5870
2025-08-11 01:02:14.591 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@1640f20f
2025-08-11 01:02:14.591 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@134d7ffa
2025-08-11 01:02:14.867 [main] INFO  [] [] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-11 01:02:14.972 [main] DEBUG [] [] o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2e6b379c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5e7e7a7e)
2025-08-11 01:02:14.972 [main] DEBUG [] [] o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1ff81b0d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1c610f)
2025-08-11 01:02:14.972 [main] DEBUG [] [] o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@773c7147) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5abc5854)
2025-08-11 01:02:14.972 [main] DEBUG [] [] o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5c3007d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@66b40dd3)
2025-08-11 01:02:14.972 [main] DEBUG [] [] o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7296fe0b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4a5066f5)
2025-08-11 01:02:14.972 [main] DEBUG [] [] o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@578d472a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1191029d)
2025-08-11 01:02:14.973 [main] DEBUG [] [] o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@54b2d002) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1d1c63af)
2025-08-11 01:02:14.973 [main] DEBUG [] [] o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2095c331) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3909a854)
2025-08-11 01:02:14.973 [main] DEBUG [] [] o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7b795db7) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@586486c)
2025-08-11 01:02:14.974 [main] DEBUG [] [] o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2025-08-11 01:02:14.975 [main] DEBUG [] [] o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2025-08-11 01:02:14.975 [main] DEBUG [] [] o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2025-08-11 01:02:14.977 [main] DEBUG [] [] o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-08-11 01:02:14.978 [main] DEBUG [] [] o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-08-11 01:02:14.981 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@7bb25046
2025-08-11 01:02:14.982 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@3ae2702a`
2025-08-11 01:02:14.987 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-08-11 01:02:14.987 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-08-11 01:02:14.987 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-08-11 01:02:14.991 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-11 01:02:14.991 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-11 01:02:14.991 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-08-11 01:02:14.992 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-11 01:02:14.992 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-11 01:02:14.992 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-08-11 01:02:14.993 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-08-11 01:02:14.994 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-11 01:02:14.994 [main] DEBUG [] [] o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-08-11 01:02:14.996 [main] DEBUG [] [] o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@b8142f4] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@52d59507]
2025-08-11 01:02:16.103 [main] INFO  [] [] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-11 01:02:16.104 [main] DEBUG [] [] o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@b8142f4] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@76641439]
2025-08-11 01:02:16.107 [main] TRACE [] [] o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@76641439] for TypeConfiguration
2025-08-11 01:02:16.107 [main] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-11 01:02:16.194 [main] DEBUG [] [] o.h.s.internal.StatisticsInitiator - Statistics initialized [enabled=false]
2025-08-11 01:02:16.443 [main] DEBUG [] [] c.m.t.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-11 01:02:16.522 [main] INFO  [] [] c.m.tarot.controllers.CardController - CardController initialized with cardRepository: $Proxy139
2025-08-11 01:02:16.580 [main] INFO  [] [] c.m.t.controllers.StoryController - StoryController initialized with repository: $Proxy140
2025-08-11 01:02:16.609 [main] WARN  [] [] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-11 01:02:16.788 [main] DEBUG [] [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 34 mappings in 'requestMappingHandlerMapping'
2025-08-11 01:02:16.860 [main] DEBUG [] [] o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-08-11 01:02:16.908 [main] INFO  [] [] o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@393aac93, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@71dac63f, org.springframework.security.web.context.SecurityContextHolderFilter@1df8c7f4, org.springframework.security.web.header.HeaderWriterFilter@23e54c8a, org.springframework.web.filter.CorsFilter@36003e90, org.springframework.security.web.authentication.logout.LogoutFilter@5581e273, com.mercy.tarot.security.JwtAuthenticationFilter@4e6add8d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1ce07709, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@637de489, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5a1ddc7c, org.springframework.security.web.session.SessionManagementFilter@5eb89000, org.springframework.security.web.access.ExceptionTranslationFilter@5d51203b, org.springframework.security.web.access.intercept.AuthorizationFilter@5982255e]
2025-08-11 01:02:16.985 [main] DEBUG [] [] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-11 01:02:17.017 [main] DEBUG [] [] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-11 01:02:17.135 [main] INFO  [] [] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-08-11 01:02:17.151 [main] INFO  [] [] com.mercy.tarot.TarotApplication - Started TarotApplication in 5.965 seconds (process running for 6.797)
2025-08-11 01:02:17.421 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from card c1_0
2025-08-11 01:02:17.448 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from tarotstoryelements tse1_0
2025-08-11 01:02:17.455 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from users u1_0
2025-08-11 01:02:17.460 [main] DEBUG [] [] org.hibernate.SQL - select count(*) from users u1_0
2025-08-11 01:02:44.327 [http-nio-8080-exec-1] INFO  [] [] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-11 01:02:44.328 [http-nio-8080-exec-1] INFO  [] [] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-11 01:02:44.329 [http-nio-8080-exec-1] DEBUG [] [] o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-11 01:02:44.329 [http-nio-8080-exec-1] DEBUG [] [] o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-11 01:02:44.329 [http-nio-8080-exec-1] DEBUG [] [] o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-11 01:02:44.334 [http-nio-8080-exec-1] DEBUG [] [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@59d8a968
2025-08-11 01:02:44.335 [http-nio-8080-exec-1] DEBUG [] [] o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@514eefc4
2025-08-11 01:02:44.335 [http-nio-8080-exec-1] DEBUG [] [] o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-11 01:02:44.336 [http-nio-8080-exec-1] INFO  [] [] o.s.web.servlet.DispatcherServlet - Completed initialization in 7 ms
2025-08-11 01:02:44.412 [http-nio-8080-exec-1] DEBUG [] [] o.s.web.servlet.DispatcherServlet - GET "/api/users/check-email?email=ariosa%40gmail.com", parameters={masked}
2025-08-11 01:02:44.414 [http-nio-8080-exec-1] DEBUG [] [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mercy.tarot.controllers.UserController#checkEmailExists(String)
2025-08-11 01:02:44.497 [http-nio-8080-exec-1] DEBUG [] [] org.hibernate.SQL - select u1_0.id,u1_0.created_at,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.photo_url,u1_0.updated_at from users u1_0 where u1_0.email=?
2025-08-11 01:02:44.512 [http-nio-8080-exec-1] DEBUG [] [] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-11 01:02:44.514 [http-nio-8080-exec-1] DEBUG [] [] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{exists=false}]
2025-08-11 01:02:44.527 [http-nio-8080-exec-1] DEBUG [] [] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-11 01:02:44.551 [http-nio-8080-exec-2] DEBUG [] [] o.s.web.servlet.DispatcherServlet - POST "/api/auth/register", parameters={}
2025-08-11 01:02:44.551 [http-nio-8080-exec-2] DEBUG [] [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mercy.tarot.controllers.AuthController#registerUser(UserRegistrationDTO)
2025-08-11 01:02:44.570 [http-nio-8080-exec-2] DEBUG [] [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.mercy.tarot.dto.UserRegistrationDTO@7163c27e]
2025-08-11 01:02:44.575 [http-nio-8080-exec-2] DEBUG [] [] org.hibernate.SQL - select u1_0.id,u1_0.created_at,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.photo_url,u1_0.updated_at from users u1_0 where u1_0.email=?
2025-08-11 01:02:44.738 [http-nio-8080-exec-2] DEBUG [] [] org.hibernate.SQL - insert into users (created_at,email,is_active,name,password,photo_url,updated_at) values (?,?,?,?,?,?,?)
2025-08-11 01:02:44.815 [http-nio-8080-exec-2] WARN  [] [] o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 0, SQLState: S0022
2025-08-11 01:02:44.815 [http-nio-8080-exec-2] ERROR [] [] o.h.e.jdbc.spi.SqlExceptionHelper - Column 'id' not found.
2025-08-11 01:02:44.846 [http-nio-8080-exec-2] DEBUG [] [] org.hibernate.SQL - insert into user_roles (user_id,role) values (?,?)
2025-08-11 01:02:44.877 [http-nio-8080-exec-2] DEBUG [] [] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-11 01:02:44.877 [http-nio-8080-exec-2] DEBUG [] [] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{message=User registered successfully!, userId=4}]
2025-08-11 01:02:44.882 [http-nio-8080-exec-2] DEBUG [] [] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-11 01:05:11.684 [http-nio-8080-exec-5] DEBUG [] [] o.s.web.servlet.DispatcherServlet - POST "/api/auth/login", parameters={}
2025-08-11 01:05:11.696 [http-nio-8080-exec-5] DEBUG [] [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mercy.tarot.controllers.AuthController#login(LoginRequest)
2025-08-11 01:05:11.866 [http-nio-8080-exec-5] DEBUG [] [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [LoginRequest[email=ariosap@gmail.com, password=3tHXywA83dq7J5A]]
2025-08-11 01:05:11.973 [http-nio-8080-exec-5] DEBUG [] [] org.hibernate.SQL - select u1_0.id,u1_0.created_at,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.photo_url,u1_0.updated_at from users u1_0 where u1_0.email=?
2025-08-11 01:05:12.101 [http-nio-8080-exec-5] DEBUG [] [] o.s.web.servlet.DispatcherServlet - Failed to complete request: org.springframework.security.authentication.BadCredentialsException: Bad credentials
2025-08-11 01:05:26.285 [http-nio-8080-exec-6] DEBUG [] [] o.s.web.servlet.DispatcherServlet - POST "/api/auth/login", parameters={}
2025-08-11 01:05:26.286 [http-nio-8080-exec-6] DEBUG [] [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mercy.tarot.controllers.AuthController#login(LoginRequest)
2025-08-11 01:05:26.288 [http-nio-8080-exec-6] DEBUG [] [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [LoginRequest[email=ariosa@gmail.com, password=Innit2012!]]
2025-08-11 01:05:26.293 [http-nio-8080-exec-6] DEBUG [] [] org.hibernate.SQL - select u1_0.id,u1_0.created_at,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.photo_url,u1_0.updated_at from users u1_0 where u1_0.email=?
2025-08-11 01:05:26.374 [http-nio-8080-exec-6] DEBUG [] [] org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
2025-08-11 01:05:26.549 [http-nio-8080-exec-6] DEBUG [] [] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-11 01:05:26.553 [http-nio-8080-exec-6] DEBUG [] [] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [LoginResponse[token=eyJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJST0xFX1VTRVIiXSwic3ViIjoiYXJpb3NhQGdtYWlsLmN (truncated)...]
2025-08-11 01:05:26.556 [http-nio-8080-exec-6] DEBUG [] [] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-11 01:05:53.582 [http-nio-8080-exec-9] DEBUG [] [] org.hibernate.SQL - select u1_0.id,u1_0.created_at,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.photo_url,u1_0.updated_at from users u1_0 where u1_0.email=?
2025-08-11 01:05:53.615 [http-nio-8080-exec-9] DEBUG [] [] org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
2025-08-11 01:05:53.644 [http-nio-8080-exec-9] DEBUG [] [] org.hibernate.SQL - select u1_0.id,u1_0.created_at,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.photo_url,u1_0.updated_at from users u1_0 where u1_0.email=?
2025-08-11 01:05:53.647 [http-nio-8080-exec-9] DEBUG [] [] org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
2025-08-11 01:05:53.693 [http-nio-8080-exec-9] DEBUG [] [] o.s.web.servlet.DispatcherServlet - GET "/api/auth/me", parameters={}
2025-08-11 01:05:53.700 [http-nio-8080-exec-9] DEBUG [] [] o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-11 01:05:53.709 [http-nio-8080-exec-9] DEBUG [] [] o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-08-11 01:05:53.719 [http-nio-8080-exec-9] DEBUG [] [] o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/auth/me.]
2025-08-11 01:05:53.733 [http-nio-8080-exec-9] DEBUG [] [] o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-08-11 01:05:53.751 [http-nio-8080-exec-10] DEBUG [] [] org.hibernate.SQL - select u1_0.id,u1_0.created_at,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.photo_url,u1_0.updated_at from users u1_0 where u1_0.email=?
2025-08-11 01:05:53.804 [http-nio-8080-exec-10] DEBUG [] [] org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
2025-08-11 01:05:53.841 [http-nio-8080-exec-10] DEBUG [] [] org.hibernate.SQL - select u1_0.id,u1_0.created_at,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.photo_url,u1_0.updated_at from users u1_0 where u1_0.email=?
2025-08-11 01:05:53.844 [http-nio-8080-exec-10] DEBUG [] [] org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
2025-08-11 01:05:53.851 [http-nio-8080-exec-10] DEBUG [] [] o.s.web.servlet.DispatcherServlet - GET "/api/auth/me", parameters={}
2025-08-11 01:05:53.851 [http-nio-8080-exec-10] DEBUG [] [] o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-11 01:05:53.854 [http-nio-8080-exec-10] DEBUG [] [] o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-08-11 01:05:53.855 [http-nio-8080-exec-10] DEBUG [] [] o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/auth/me.]
2025-08-11 01:05:53.866 [http-nio-8080-exec-10] DEBUG [] [] o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-08-11 01:19:20.294 [http-nio-8080-exec-9] DEBUG [] [] o.s.web.servlet.DispatcherServlet - POST "/api/auth/login", parameters={}
2025-08-11 01:19:20.335 [http-nio-8080-exec-9] DEBUG [] [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mercy.tarot.controllers.AuthController#login(LoginRequest)
2025-08-11 01:19:20.439 [http-nio-8080-exec-9] DEBUG [] [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [LoginRequest[email=ariosap@gmail.com, password=3tHXywA83dq7J5A]]
2025-08-11 01:19:20.533 [http-nio-8080-exec-9] DEBUG [] [] org.hibernate.SQL - select u1_0.id,u1_0.created_at,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.photo_url,u1_0.updated_at from users u1_0 where u1_0.email=?
2025-08-11 01:19:21.275 [http-nio-8080-exec-9] DEBUG [] [] o.s.web.servlet.DispatcherServlet - Failed to complete request: org.springframework.security.authentication.BadCredentialsException: Bad credentials
2025-08-11 01:19:27.053 [http-nio-8080-exec-10] DEBUG [] [] o.s.web.servlet.DispatcherServlet - POST "/api/auth/login", parameters={}
2025-08-11 01:19:27.054 [http-nio-8080-exec-10] DEBUG [] [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mercy.tarot.controllers.AuthController#login(LoginRequest)
2025-08-11 01:19:27.062 [http-nio-8080-exec-10] DEBUG [] [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [LoginRequest[email=ariosa@gmail.com, password=Innit20-12!]]
2025-08-11 01:19:27.065 [http-nio-8080-exec-10] DEBUG [] [] org.hibernate.SQL - select u1_0.id,u1_0.created_at,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.photo_url,u1_0.updated_at from users u1_0 where u1_0.email=?
2025-08-11 01:19:27.167 [http-nio-8080-exec-10] DEBUG [] [] org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
2025-08-11 01:19:27.281 [http-nio-8080-exec-10] DEBUG [] [] o.s.web.servlet.DispatcherServlet - Failed to complete request: org.springframework.security.authentication.BadCredentialsException: Bad credentials
2025-08-11 01:19:34.762 [http-nio-8080-exec-1] DEBUG [] [] o.s.web.servlet.DispatcherServlet - POST "/api/auth/login", parameters={}
2025-08-11 01:19:34.766 [http-nio-8080-exec-1] DEBUG [] [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mercy.tarot.controllers.AuthController#login(LoginRequest)
2025-08-11 01:19:34.768 [http-nio-8080-exec-1] DEBUG [] [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [LoginRequest[email=ariosa@gmail.com, password=Innit2012!]]
2025-08-11 01:19:34.773 [http-nio-8080-exec-1] DEBUG [] [] org.hibernate.SQL - select u1_0.id,u1_0.created_at,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.photo_url,u1_0.updated_at from users u1_0 where u1_0.email=?
2025-08-11 01:19:34.786 [http-nio-8080-exec-1] DEBUG [] [] org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
2025-08-11 01:19:35.101 [http-nio-8080-exec-1] DEBUG [] [] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-11 01:19:35.108 [http-nio-8080-exec-1] DEBUG [] [] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [LoginResponse[token=eyJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJST0xFX1VTRVIiXSwic3ViIjoiYXJpb3NhQGdtYWlsLmN (truncated)...]
2025-08-11 01:19:35.118 [http-nio-8080-exec-1] DEBUG [] [] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-11 01:19:44.717 [http-nio-8080-exec-2] DEBUG [] [] org.hibernate.SQL - select u1_0.id,u1_0.created_at,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.photo_url,u1_0.updated_at from users u1_0 where u1_0.email=?
2025-08-11 01:19:44.717 [http-nio-8080-exec-5] DEBUG [] [] org.hibernate.SQL - select u1_0.id,u1_0.created_at,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.photo_url,u1_0.updated_at from users u1_0 where u1_0.email=?
2025-08-11 01:19:44.754 [http-nio-8080-exec-2] DEBUG [] [] org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
2025-08-11 01:19:44.804 [http-nio-8080-exec-2] DEBUG [] [] org.hibernate.SQL - select u1_0.id,u1_0.created_at,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.photo_url,u1_0.updated_at from users u1_0 where u1_0.email=?
2025-08-11 01:19:44.808 [http-nio-8080-exec-2] DEBUG [] [] org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
2025-08-11 01:19:44.873 [http-nio-8080-exec-2] DEBUG [] [] o.s.web.servlet.DispatcherServlet - GET "/api/auth/me", parameters={}
2025-08-11 01:19:44.885 [http-nio-8080-exec-2] DEBUG [] [] o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-11 01:19:45.054 [http-nio-8080-exec-2] DEBUG [] [] o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-08-11 01:19:45.058 [http-nio-8080-exec-2] DEBUG [] [] o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/auth/me.]
2025-08-11 01:19:45.058 [http-nio-8080-exec-2] DEBUG [] [] o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-08-11 01:19:45.088 [http-nio-8080-exec-6] DEBUG [] [] org.hibernate.SQL - select u1_0.id,u1_0.created_at,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.photo_url,u1_0.updated_at from users u1_0 where u1_0.email=?
2025-08-11 01:19:45.096 [http-nio-8080-exec-6] DEBUG [] [] org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
2025-08-11 01:19:45.125 [http-nio-8080-exec-6] DEBUG [] [] org.hibernate.SQL - select u1_0.id,u1_0.created_at,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.photo_url,u1_0.updated_at from users u1_0 where u1_0.email=?
2025-08-11 01:19:45.128 [http-nio-8080-exec-6] DEBUG [] [] org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
2025-08-11 01:19:45.130 [http-nio-8080-exec-6] DEBUG [] [] o.s.web.servlet.DispatcherServlet - GET "/api/auth/me", parameters={}
2025-08-11 01:19:45.131 [http-nio-8080-exec-6] DEBUG [] [] o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-11 01:19:45.142 [http-nio-8080-exec-6] DEBUG [] [] o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-08-11 01:19:45.142 [http-nio-8080-exec-6] DEBUG [] [] o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/auth/me.]
2025-08-11 01:19:45.143 [http-nio-8080-exec-6] DEBUG [] [] o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-08-11 01:19:45.162 [http-nio-8080-exec-5] DEBUG [] [] org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
2025-08-11 01:19:45.209 [http-nio-8080-exec-5] DEBUG [] [] org.hibernate.SQL - select u1_0.id,u1_0.created_at,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.photo_url,u1_0.updated_at from users u1_0 where u1_0.email=?
2025-08-11 01:19:45.218 [http-nio-8080-exec-5] DEBUG [] [] org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
2025-08-11 01:19:45.219 [http-nio-8080-exec-5] DEBUG [] [] o.s.web.servlet.DispatcherServlet - GET "/api/auth/validate", parameters={}
2025-08-11 01:19:45.220 [http-nio-8080-exec-5] DEBUG [] [] o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-11 01:19:45.251 [http-nio-8080-exec-5] DEBUG [] [] o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-08-11 01:19:45.252 [http-nio-8080-exec-5] DEBUG [] [] o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/auth/validate.]
2025-08-11 01:19:45.254 [http-nio-8080-exec-5] DEBUG [] [] o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-08-11 01:19:45.314 [http-nio-8080-exec-8] DEBUG [] [] org.hibernate.SQL - select u1_0.id,u1_0.created_at,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.photo_url,u1_0.updated_at from users u1_0 where u1_0.email=?
2025-08-11 01:19:45.317 [http-nio-8080-exec-8] DEBUG [] [] org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
2025-08-11 01:19:45.372 [http-nio-8080-exec-8] DEBUG [] [] org.hibernate.SQL - select u1_0.id,u1_0.created_at,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.photo_url,u1_0.updated_at from users u1_0 where u1_0.email=?
2025-08-11 01:19:45.394 [http-nio-8080-exec-8] DEBUG [] [] org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
2025-08-11 01:19:45.407 [http-nio-8080-exec-8] DEBUG [] [] o.s.web.servlet.DispatcherServlet - GET "/api/auth/validate", parameters={}
2025-08-11 01:19:45.408 [http-nio-8080-exec-8] DEBUG [] [] o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-11 01:19:45.416 [http-nio-8080-exec-8] DEBUG [] [] o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-08-11 01:19:45.416 [http-nio-8080-exec-8] DEBUG [] [] o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/auth/validate.]
2025-08-11 01:19:45.416 [http-nio-8080-exec-8] DEBUG [] [] o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-08-11 01:19:45.450 [http-nio-8080-exec-10] ERROR [] [] c.m.t.s.JwtAuthenticationFilter - Cannot set user authentication
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:275)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.mercy.tarot.service.JwtTokenService.getAllClaimsFromToken(JwtTokenService.java:70)
	at com.mercy.tarot.service.JwtTokenService.getClaimFromToken(JwtTokenService.java:62)
	at com.mercy.tarot.service.JwtTokenService.getUsername(JwtTokenService.java:44)
	at com.mercy.tarot.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:49)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 01:19:45.324 [http-nio-8080-exec-9] ERROR [] [] c.m.t.s.JwtAuthenticationFilter - Cannot set user authentication
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:275)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.mercy.tarot.service.JwtTokenService.getAllClaimsFromToken(JwtTokenService.java:70)
	at com.mercy.tarot.service.JwtTokenService.getClaimFromToken(JwtTokenService.java:62)
	at com.mercy.tarot.service.JwtTokenService.getUsername(JwtTokenService.java:44)
	at com.mercy.tarot.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:49)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 01:19:45.528 [http-nio-8080-exec-9] DEBUG [] [] o.s.web.servlet.DispatcherServlet - POST "/api/auth/logout", parameters={}
2025-08-11 01:19:45.529 [http-nio-8080-exec-9] DEBUG [] [] o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-11 01:19:45.529 [http-nio-8080-exec-10] DEBUG [] [] o.s.web.servlet.DispatcherServlet - POST "/api/auth/logout", parameters={}
2025-08-11 01:19:45.530 [http-nio-8080-exec-10] DEBUG [] [] o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]
2025-08-11 01:19:45.535 [http-nio-8080-exec-9] DEBUG [] [] o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-08-11 01:19:45.535 [http-nio-8080-exec-9] DEBUG [] [] o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/auth/logout.]
2025-08-11 01:19:45.535 [http-nio-8080-exec-9] DEBUG [] [] o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-08-11 01:19:45.536 [http-nio-8080-exec-10] DEBUG [] [] o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
2025-08-11 01:19:45.536 [http-nio-8080-exec-10] DEBUG [] [] o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/auth/logout.]
2025-08-11 01:19:45.536 [http-nio-8080-exec-10] DEBUG [] [] o.s.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-08-11 01:21:07.670 [http-nio-8080-exec-8] ERROR [] [] c.m.t.s.JwtAuthenticationFilter - Cannot set user authentication
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:275)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.mercy.tarot.service.JwtTokenService.getAllClaimsFromToken(JwtTokenService.java:70)
	at com.mercy.tarot.service.JwtTokenService.getClaimFromToken(JwtTokenService.java:62)
	at com.mercy.tarot.service.JwtTokenService.getUsername(JwtTokenService.java:44)
	at com.mercy.tarot.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:49)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 01:21:20.924 [http-nio-8080-exec-9] DEBUG [] [] o.s.web.servlet.DispatcherServlet - POST "/api/getStoryDTO", parameters={}
2025-08-11 01:21:20.928 [http-nio-8080-exec-9] DEBUG [] [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mercy.tarot.controllers.StoryController#getStoryPrompt(CardNamesRequest)
2025-08-11 01:21:21.138 [http-nio-8080-exec-9] DEBUG [] [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [CardNamesRequest{cardNames='Ace of Cups, The Sun, The Moon, Ace Of Wands'}]
2025-08-11 01:21:21.147 [http-nio-8080-exec-9] INFO  [] [] c.m.t.controllers.StoryController - Story prompt requested for cards: Ace of Cups, The Sun, The Moon, Ace Of Wands
2025-08-11 01:21:21.193 [http-nio-8080-exec-9] DEBUG [] [] c.m.t.controllers.StoryController - Parsed card names: [Ace of Cups, The Sun, The Moon, Ace Of Wands]
2025-08-11 01:21:21.390 [http-nio-8080-exec-9] DEBUG [] [] org.hibernate.SQL - select tse1_0.title,tse1_0.ally_defecits,tse1_0.ally_descriptors,tse1_0.ally_goals,tse1_0.call_to_action,tse1_0.card_name,tse1_0.climax_description,tse1_0.climax_event,tse1_0.climax_location,tse1_0.enemy_defecits,tse1_0.enemy_descriptors,tse1_0.enemy_goals,tse1_0.keywords,tse1_0.locations,tse1_0.main_character_defecits,tse1_0.main_character_descriptors,tse1_0.main_character_goals,tse1_0.moral_value,tse1_0.point_of_view,tse1_0.style,tse1_0.theme from tarotstoryelements tse1_0
2025-08-11 01:21:21.570 [http-nio-8080-exec-9] DEBUG [] [] c.m.t.controllers.StoryController - Retrieved 44 story elements from database
2025-08-11 01:21:21.574 [http-nio-8080-exec-9] WARN  [] [] c.m.t.controllers.StoryController - Found 2 story elements with null card names in database
2025-08-11 01:21:21.576 [http-nio-8080-exec-9] DEBUG [] [] c.m.t.controllers.StoryController - Processing story elements for card: The Moon
2025-08-11 01:21:21.604 [http-nio-8080-exec-9] DEBUG [] [] c.m.t.controllers.StoryController - Processing story elements for card: The Sun
2025-08-11 01:21:21.606 [http-nio-8080-exec-9] INFO  [] [] c.m.t.controllers.StoryController - Matched 2 cards from request, generating story elements
2025-08-11 01:21:21.616 [http-nio-8080-exec-9] INFO  [] [] c.m.t.controllers.StoryController - Generated complete story prompt with 19 elements for 2 matched cards
2025-08-11 01:21:21.623 [http-nio-8080-exec-9] DEBUG [] [] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-11 01:21:21.624 [http-nio-8080-exec-9] DEBUG [] [] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{mainCharacterDeficit={storyElement=Needs external validation, source=The Sun}, allyGoal={storyEleme (truncated)...]
2025-08-11 01:21:21.643 [http-nio-8080-exec-9] DEBUG [] [] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-11 01:24:32.257 [http-nio-8080-exec-4] ERROR [] [] c.m.t.s.JwtAuthenticationFilter - Cannot set user authentication
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:275)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.mercy.tarot.service.JwtTokenService.getAllClaimsFromToken(JwtTokenService.java:70)
	at com.mercy.tarot.service.JwtTokenService.getClaimFromToken(JwtTokenService.java:62)
	at com.mercy.tarot.service.JwtTokenService.getUsername(JwtTokenService.java:44)
	at com.mercy.tarot.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:49)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 01:24:32.384 [http-nio-8080-exec-4] DEBUG [] [] o.s.web.servlet.DispatcherServlet - GET "/api/spread/parallel/weighted/2", parameters={}
2025-08-11 01:24:32.386 [http-nio-8080-exec-4] DEBUG [] [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mercy.tarot.controllers.CardController#getSpreadParallelWeighted(int)
2025-08-11 01:24:32.559 [http-nio-8080-exec-4] INFO  [] [] c.m.tarot.controllers.CardController - Weighted card spread with parallel shuffle requested for 2 cards
2025-08-11 01:24:32.559 [http-nio-8080-exec-4] DEBUG [] [] c.m.tarot.controllers.CardController - Getting 2 random cards with weighted reversal using parallel shuffle
2025-08-11 01:24:32.633 [http-nio-8080-exec-4] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.card_description,c1_0.card_value,c1_0.major,c1_0.reversed_description,c1_0.story,c1_0.suit,c1_0.title from card c1_0
2025-08-11 01:24:32.820 [http-nio-8080-exec-4] DEBUG [] [] c.m.tarot.controllers.CardController - Retrieved 78 total cards from repository for parallel weighted shuffle
2025-08-11 01:24:32.821 [http-nio-8080-exec-4] DEBUG [] [] c.m.tarot.controllers.CardController - Starting parallel shuffle for 78 cards
2025-08-11 01:24:32.826 [http-nio-8080-exec-4] DEBUG [] [] c.m.tarot.controllers.CardController - Using 8 threads with segment size: 9
2025-08-11 01:24:32.978 [http-nio-8080-exec-4] DEBUG [] [] c.m.tarot.controllers.CardController - Parallel shuffle completed in 157ms for 78 cards
2025-08-11 01:24:32.979 [http-nio-8080-exec-4] DEBUG [] [] c.m.tarot.controllers.CardController - Selecting 2 cards with parallel weighted reversal (requested: 2, available: 78)
2025-08-11 01:24:33.010 [http-nio-8080-exec-4] INFO  [] [] c.m.tarot.controllers.CardController - Successfully generated 2 weighted reversal cards using parallel shuffle
2025-08-11 01:24:33.010 [http-nio-8080-exec-4] INFO  [] [] c.m.tarot.controllers.CardController - Weighted card spread with parallel shuffle completed - 2 cards drawn
2025-08-11 01:24:33.074 [http-nio-8080-exec-4] DEBUG [] [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-11 01:24:33.075 [http-nio-8080-exec-4] DEBUG [] [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[com.mercy.tarot.dto.CardDTO@610a6ff, com.mercy.tarot.dto.CardDTO@3fd4187c]]
2025-08-11 01:24:33.098 [http-nio-8080-exec-4] DEBUG [] [] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-11 01:24:39.385 [http-nio-8080-exec-2] ERROR [] [] c.m.t.s.JwtAuthenticationFilter - Cannot set user authentication
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:275)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.mercy.tarot.service.JwtTokenService.getAllClaimsFromToken(JwtTokenService.java:70)
	at com.mercy.tarot.service.JwtTokenService.getClaimFromToken(JwtTokenService.java:62)
	at com.mercy.tarot.service.JwtTokenService.getUsername(JwtTokenService.java:44)
	at com.mercy.tarot.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:49)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 01:24:39.417 [http-nio-8080-exec-2] DEBUG [] [] o.s.web.servlet.DispatcherServlet - GET "/api/spread/parallel/weighted/3", parameters={}
2025-08-11 01:24:39.418 [http-nio-8080-exec-2] DEBUG [] [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mercy.tarot.controllers.CardController#getSpreadParallelWeighted(int)
2025-08-11 01:24:39.424 [http-nio-8080-exec-2] INFO  [] [] c.m.tarot.controllers.CardController - Weighted card spread with parallel shuffle requested for 3 cards
2025-08-11 01:24:39.425 [http-nio-8080-exec-2] DEBUG [] [] c.m.tarot.controllers.CardController - Getting 3 random cards with weighted reversal using parallel shuffle
2025-08-11 01:24:39.440 [http-nio-8080-exec-2] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.card_description,c1_0.card_value,c1_0.major,c1_0.reversed_description,c1_0.story,c1_0.suit,c1_0.title from card c1_0
2025-08-11 01:24:39.502 [http-nio-8080-exec-2] DEBUG [] [] c.m.tarot.controllers.CardController - Retrieved 78 total cards from repository for parallel weighted shuffle
2025-08-11 01:24:39.503 [http-nio-8080-exec-2] DEBUG [] [] c.m.tarot.controllers.CardController - Starting parallel shuffle for 78 cards
2025-08-11 01:24:39.503 [http-nio-8080-exec-2] DEBUG [] [] c.m.tarot.controllers.CardController - Using 8 threads with segment size: 9
2025-08-11 01:24:39.507 [http-nio-8080-exec-2] DEBUG [] [] c.m.tarot.controllers.CardController - Parallel shuffle completed in 4ms for 78 cards
2025-08-11 01:24:39.507 [http-nio-8080-exec-2] DEBUG [] [] c.m.tarot.controllers.CardController - Selecting 3 cards with parallel weighted reversal (requested: 3, available: 78)
2025-08-11 01:24:39.510 [http-nio-8080-exec-2] INFO  [] [] c.m.tarot.controllers.CardController - Successfully generated 3 weighted reversal cards using parallel shuffle
2025-08-11 01:24:39.510 [http-nio-8080-exec-2] INFO  [] [] c.m.tarot.controllers.CardController - Weighted card spread with parallel shuffle completed - 3 cards drawn
2025-08-11 01:24:39.511 [http-nio-8080-exec-2] DEBUG [] [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-11 01:24:39.513 [http-nio-8080-exec-2] DEBUG [] [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[com.mercy.tarot.dto.CardDTO@5d7657dc, com.mercy.tarot.dto.CardDTO@1afcbacd, com.mercy.tarot.dto.Car (truncated)...]
2025-08-11 01:24:39.516 [http-nio-8080-exec-2] DEBUG [] [] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-11 01:24:43.969 [http-nio-8080-exec-7] ERROR [] [] c.m.t.s.JwtAuthenticationFilter - Cannot set user authentication
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:275)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.mercy.tarot.service.JwtTokenService.getAllClaimsFromToken(JwtTokenService.java:70)
	at com.mercy.tarot.service.JwtTokenService.getClaimFromToken(JwtTokenService.java:62)
	at com.mercy.tarot.service.JwtTokenService.getUsername(JwtTokenService.java:44)
	at com.mercy.tarot.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:49)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 01:24:44.074 [http-nio-8080-exec-7] DEBUG [] [] o.s.web.servlet.DispatcherServlet - GET "/api/spread/parallel/weighted/5", parameters={}
2025-08-11 01:24:44.074 [http-nio-8080-exec-7] DEBUG [] [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mercy.tarot.controllers.CardController#getSpreadParallelWeighted(int)
2025-08-11 01:24:44.078 [http-nio-8080-exec-7] INFO  [] [] c.m.tarot.controllers.CardController - Weighted card spread with parallel shuffle requested for 5 cards
2025-08-11 01:24:44.079 [http-nio-8080-exec-7] DEBUG [] [] c.m.tarot.controllers.CardController - Getting 5 random cards with weighted reversal using parallel shuffle
2025-08-11 01:24:44.278 [http-nio-8080-exec-7] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.card_description,c1_0.card_value,c1_0.major,c1_0.reversed_description,c1_0.story,c1_0.suit,c1_0.title from card c1_0
2025-08-11 01:24:45.149 [http-nio-8080-exec-7] DEBUG [] [] c.m.tarot.controllers.CardController - Retrieved 78 total cards from repository for parallel weighted shuffle
2025-08-11 01:24:45.154 [http-nio-8080-exec-7] DEBUG [] [] c.m.tarot.controllers.CardController - Starting parallel shuffle for 78 cards
2025-08-11 01:24:45.154 [http-nio-8080-exec-7] DEBUG [] [] c.m.tarot.controllers.CardController - Using 8 threads with segment size: 9
2025-08-11 01:24:45.174 [http-nio-8080-exec-7] DEBUG [] [] c.m.tarot.controllers.CardController - Parallel shuffle completed in 20ms for 78 cards
2025-08-11 01:24:46.368 [http-nio-8080-exec-7] DEBUG [] [] c.m.tarot.controllers.CardController - Selecting 5 cards with parallel weighted reversal (requested: 5, available: 78)
2025-08-11 01:24:46.368 [http-nio-8080-exec-7] INFO  [] [] c.m.tarot.controllers.CardController - Successfully generated 5 weighted reversal cards using parallel shuffle
2025-08-11 01:24:46.368 [http-nio-8080-exec-7] INFO  [] [] c.m.tarot.controllers.CardController - Weighted card spread with parallel shuffle completed - 5 cards drawn
2025-08-11 01:24:46.380 [http-nio-8080-exec-7] DEBUG [] [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-11 01:24:46.383 [http-nio-8080-exec-7] DEBUG [] [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[com.mercy.tarot.dto.CardDTO@2a6f34ef, com.mercy.tarot.dto.CardDTO@49601a31, com.mercy.tarot.dto.Car (truncated)...]
2025-08-11 01:24:46.428 [http-nio-8080-exec-7] DEBUG [] [] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-11 01:24:49.721 [http-nio-8080-exec-8] ERROR [] [] c.m.t.s.JwtAuthenticationFilter - Cannot set user authentication
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:275)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.mercy.tarot.service.JwtTokenService.getAllClaimsFromToken(JwtTokenService.java:70)
	at com.mercy.tarot.service.JwtTokenService.getClaimFromToken(JwtTokenService.java:62)
	at com.mercy.tarot.service.JwtTokenService.getUsername(JwtTokenService.java:44)
	at com.mercy.tarot.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:49)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 01:25:21.245 [http-nio-8080-exec-9] ERROR [] [] c.m.t.s.JwtAuthenticationFilter - Cannot set user authentication
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:275)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.mercy.tarot.service.JwtTokenService.getAllClaimsFromToken(JwtTokenService.java:70)
	at com.mercy.tarot.service.JwtTokenService.getClaimFromToken(JwtTokenService.java:62)
	at com.mercy.tarot.service.JwtTokenService.getUsername(JwtTokenService.java:44)
	at com.mercy.tarot.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:49)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 01:25:21.343 [http-nio-8080-exec-9] DEBUG [] [] o.s.web.servlet.DispatcherServlet - GET "/api/spread/parallel/weighted/5", parameters={}
2025-08-11 01:25:21.344 [http-nio-8080-exec-9] DEBUG [] [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mercy.tarot.controllers.CardController#getSpreadParallelWeighted(int)
2025-08-11 01:25:21.359 [http-nio-8080-exec-9] INFO  [] [] c.m.tarot.controllers.CardController - Weighted card spread with parallel shuffle requested for 5 cards
2025-08-11 01:25:21.359 [http-nio-8080-exec-9] DEBUG [] [] c.m.tarot.controllers.CardController - Getting 5 random cards with weighted reversal using parallel shuffle
2025-08-11 01:25:21.399 [http-nio-8080-exec-9] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.card_description,c1_0.card_value,c1_0.major,c1_0.reversed_description,c1_0.story,c1_0.suit,c1_0.title from card c1_0
2025-08-11 01:25:21.446 [http-nio-8080-exec-9] DEBUG [] [] c.m.tarot.controllers.CardController - Retrieved 78 total cards from repository for parallel weighted shuffle
2025-08-11 01:25:21.446 [http-nio-8080-exec-9] DEBUG [] [] c.m.tarot.controllers.CardController - Starting parallel shuffle for 78 cards
2025-08-11 01:25:21.446 [http-nio-8080-exec-9] DEBUG [] [] c.m.tarot.controllers.CardController - Using 8 threads with segment size: 9
2025-08-11 01:25:21.471 [http-nio-8080-exec-9] DEBUG [] [] c.m.tarot.controllers.CardController - Parallel shuffle completed in 25ms for 78 cards
2025-08-11 01:25:21.471 [http-nio-8080-exec-9] DEBUG [] [] c.m.tarot.controllers.CardController - Selecting 5 cards with parallel weighted reversal (requested: 5, available: 78)
2025-08-11 01:25:21.472 [http-nio-8080-exec-9] INFO  [] [] c.m.tarot.controllers.CardController - Successfully generated 5 weighted reversal cards using parallel shuffle
2025-08-11 01:25:21.472 [http-nio-8080-exec-9] INFO  [] [] c.m.tarot.controllers.CardController - Weighted card spread with parallel shuffle completed - 5 cards drawn
2025-08-11 01:25:21.478 [http-nio-8080-exec-9] DEBUG [] [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-11 01:25:21.511 [http-nio-8080-exec-9] DEBUG [] [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[com.mercy.tarot.dto.CardDTO@5de31a0b, com.mercy.tarot.dto.CardDTO@44d92bf, com.mercy.tarot.dto.Card (truncated)...]
2025-08-11 01:25:21.517 [http-nio-8080-exec-9] DEBUG [] [] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-11 01:25:24.255 [http-nio-8080-exec-1] ERROR [] [] c.m.t.s.JwtAuthenticationFilter - Cannot set user authentication
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:275)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.mercy.tarot.service.JwtTokenService.getAllClaimsFromToken(JwtTokenService.java:70)
	at com.mercy.tarot.service.JwtTokenService.getClaimFromToken(JwtTokenService.java:62)
	at com.mercy.tarot.service.JwtTokenService.getUsername(JwtTokenService.java:44)
	at com.mercy.tarot.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:49)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 01:25:24.275 [http-nio-8080-exec-1] DEBUG [] [] o.s.web.servlet.DispatcherServlet - POST "/api/getStoryDTO", parameters={}
2025-08-11 01:25:24.276 [http-nio-8080-exec-1] DEBUG [] [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mercy.tarot.controllers.StoryController#getStoryPrompt(CardNamesRequest)
2025-08-11 01:25:24.297 [http-nio-8080-exec-1] DEBUG [] [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [CardNamesRequest{cardNames='Two Of Swords, Temperance, Eight Of Wands, King Of Cups, Nine Of Pentacl (truncated)...]
2025-08-11 01:25:24.304 [http-nio-8080-exec-1] INFO  [] [] c.m.t.controllers.StoryController - Story prompt requested for cards: Two Of Swords, Temperance, Eight Of Wands, King Of Cups, Nine Of Pentacles
2025-08-11 01:25:24.307 [http-nio-8080-exec-1] DEBUG [] [] c.m.t.controllers.StoryController - Parsed card names: [Two Of Swords, Temperance, Eight Of Wands, King Of Cups, Nine Of Pentacles]
2025-08-11 01:25:24.314 [http-nio-8080-exec-1] DEBUG [] [] org.hibernate.SQL - select tse1_0.title,tse1_0.ally_defecits,tse1_0.ally_descriptors,tse1_0.ally_goals,tse1_0.call_to_action,tse1_0.card_name,tse1_0.climax_description,tse1_0.climax_event,tse1_0.climax_location,tse1_0.enemy_defecits,tse1_0.enemy_descriptors,tse1_0.enemy_goals,tse1_0.keywords,tse1_0.locations,tse1_0.main_character_defecits,tse1_0.main_character_descriptors,tse1_0.main_character_goals,tse1_0.moral_value,tse1_0.point_of_view,tse1_0.style,tse1_0.theme from tarotstoryelements tse1_0
2025-08-11 01:25:24.423 [http-nio-8080-exec-1] DEBUG [] [] c.m.t.controllers.StoryController - Retrieved 44 story elements from database
2025-08-11 01:25:24.426 [http-nio-8080-exec-1] WARN  [] [] c.m.t.controllers.StoryController - Found 2 story elements with null card names in database
2025-08-11 01:25:24.426 [http-nio-8080-exec-1] DEBUG [] [] c.m.t.controllers.StoryController - Processing story elements for card: Nine of Pentacles
2025-08-11 01:25:24.444 [http-nio-8080-exec-1] DEBUG [] [] c.m.t.controllers.StoryController - Processing story elements for card: Two of Swords
2025-08-11 01:25:24.445 [http-nio-8080-exec-1] DEBUG [] [] c.m.t.controllers.StoryController - Processing story elements for card: Temperance
2025-08-11 01:25:24.449 [http-nio-8080-exec-1] INFO  [] [] c.m.t.controllers.StoryController - Matched 3 cards from request, generating story elements
2025-08-11 01:25:24.462 [http-nio-8080-exec-1] INFO  [] [] c.m.t.controllers.StoryController - Generated complete story prompt with 19 elements for 3 matched cards
2025-08-11 01:25:24.467 [http-nio-8080-exec-1] DEBUG [] [] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-11 01:25:24.471 [http-nio-8080-exec-1] DEBUG [] [] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{mainCharacterDeficit={storyElement=Perfectionist, source=Temperance}, allyGoal={storyElement=Protec (truncated)...]
2025-08-11 01:25:24.475 [http-nio-8080-exec-1] DEBUG [] [] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-11 01:25:31.409 [http-nio-8080-exec-3] ERROR [] [] c.m.t.s.JwtAuthenticationFilter - Cannot set user authentication
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:275)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.mercy.tarot.service.JwtTokenService.getAllClaimsFromToken(JwtTokenService.java:70)
	at com.mercy.tarot.service.JwtTokenService.getClaimFromToken(JwtTokenService.java:62)
	at com.mercy.tarot.service.JwtTokenService.getUsername(JwtTokenService.java:44)
	at com.mercy.tarot.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:49)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 01:25:31.428 [http-nio-8080-exec-3] DEBUG [] [] o.s.web.servlet.DispatcherServlet - GET "/api/spread/parallel/weighted/3", parameters={}
2025-08-11 01:25:31.429 [http-nio-8080-exec-3] DEBUG [] [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mercy.tarot.controllers.CardController#getSpreadParallelWeighted(int)
2025-08-11 01:25:31.458 [http-nio-8080-exec-3] INFO  [] [] c.m.tarot.controllers.CardController - Weighted card spread with parallel shuffle requested for 3 cards
2025-08-11 01:25:31.459 [http-nio-8080-exec-3] DEBUG [] [] c.m.tarot.controllers.CardController - Getting 3 random cards with weighted reversal using parallel shuffle
2025-08-11 01:25:31.490 [http-nio-8080-exec-3] DEBUG [] [] org.hibernate.SQL - select c1_0.id,c1_0.card_description,c1_0.card_value,c1_0.major,c1_0.reversed_description,c1_0.story,c1_0.suit,c1_0.title from card c1_0
2025-08-11 01:25:31.538 [http-nio-8080-exec-3] DEBUG [] [] c.m.tarot.controllers.CardController - Retrieved 78 total cards from repository for parallel weighted shuffle
2025-08-11 01:25:31.538 [http-nio-8080-exec-3] DEBUG [] [] c.m.tarot.controllers.CardController - Starting parallel shuffle for 78 cards
2025-08-11 01:25:31.538 [http-nio-8080-exec-3] DEBUG [] [] c.m.tarot.controllers.CardController - Using 8 threads with segment size: 9
2025-08-11 01:25:31.541 [http-nio-8080-exec-3] DEBUG [] [] c.m.tarot.controllers.CardController - Parallel shuffle completed in 3ms for 78 cards
2025-08-11 01:25:31.543 [http-nio-8080-exec-3] DEBUG [] [] c.m.tarot.controllers.CardController - Selecting 3 cards with parallel weighted reversal (requested: 3, available: 78)
2025-08-11 01:25:31.560 [http-nio-8080-exec-3] INFO  [] [] c.m.tarot.controllers.CardController - Successfully generated 3 weighted reversal cards using parallel shuffle
2025-08-11 01:25:31.560 [http-nio-8080-exec-3] INFO  [] [] c.m.tarot.controllers.CardController - Weighted card spread with parallel shuffle completed - 3 cards drawn
2025-08-11 01:25:31.560 [http-nio-8080-exec-3] DEBUG [] [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-11 01:25:31.563 [http-nio-8080-exec-3] DEBUG [] [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[com.mercy.tarot.dto.CardDTO@4ed1e183, com.mercy.tarot.dto.CardDTO@42709d30, com.mercy.tarot.dto.Car (truncated)...]
2025-08-11 01:25:31.621 [http-nio-8080-exec-3] DEBUG [] [] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-11 01:26:14.915 [http-nio-8080-exec-4] ERROR [] [] c.m.t.s.JwtAuthenticationFilter - Cannot set user authentication
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:275)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.mercy.tarot.service.JwtTokenService.getAllClaimsFromToken(JwtTokenService.java:70)
	at com.mercy.tarot.service.JwtTokenService.getClaimFromToken(JwtTokenService.java:62)
	at com.mercy.tarot.service.JwtTokenService.getUsername(JwtTokenService.java:44)
	at com.mercy.tarot.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:49)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-11 01:26:14.981 [http-nio-8080-exec-4] DEBUG [] [] o.s.web.servlet.DispatcherServlet - POST "/api/getStoryDTO", parameters={}
2025-08-11 01:26:14.983 [http-nio-8080-exec-4] DEBUG [] [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mercy.tarot.controllers.StoryController#getStoryPrompt(CardNamesRequest)
2025-08-11 01:26:14.997 [http-nio-8080-exec-4] DEBUG [] [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [CardNamesRequest{cardNames='The Hierophant, Strength, The Star'}]
2025-08-11 01:26:15.000 [http-nio-8080-exec-4] INFO  [] [] c.m.t.controllers.StoryController - Story prompt requested for cards: The Hierophant, Strength, The Star
2025-08-11 01:26:15.011 [http-nio-8080-exec-4] DEBUG [] [] c.m.t.controllers.StoryController - Parsed card names: [The Hierophant, Strength, The Star]
2025-08-11 01:26:15.045 [http-nio-8080-exec-4] DEBUG [] [] org.hibernate.SQL - select tse1_0.title,tse1_0.ally_defecits,tse1_0.ally_descriptors,tse1_0.ally_goals,tse1_0.call_to_action,tse1_0.card_name,tse1_0.climax_description,tse1_0.climax_event,tse1_0.climax_location,tse1_0.enemy_defecits,tse1_0.enemy_descriptors,tse1_0.enemy_goals,tse1_0.keywords,tse1_0.locations,tse1_0.main_character_defecits,tse1_0.main_character_descriptors,tse1_0.main_character_goals,tse1_0.moral_value,tse1_0.point_of_view,tse1_0.style,tse1_0.theme from tarotstoryelements tse1_0
2025-08-11 01:26:15.164 [http-nio-8080-exec-4] DEBUG [] [] c.m.t.controllers.StoryController - Retrieved 44 story elements from database
2025-08-11 01:26:15.165 [http-nio-8080-exec-4] WARN  [] [] c.m.t.controllers.StoryController - Found 2 story elements with null card names in database
2025-08-11 01:26:15.166 [http-nio-8080-exec-4] DEBUG [] [] c.m.t.controllers.StoryController - Processing story elements for card: The Hierophant
2025-08-11 01:26:15.169 [http-nio-8080-exec-4] DEBUG [] [] c.m.t.controllers.StoryController - Processing story elements for card: Strength
2025-08-11 01:26:15.169 [http-nio-8080-exec-4] INFO  [] [] c.m.t.controllers.StoryController - Matched 2 cards from request, generating story elements
2025-08-11 01:26:15.170 [http-nio-8080-exec-4] INFO  [] [] c.m.t.controllers.StoryController - Generated complete story prompt with 19 elements for 2 matched cards
2025-08-11 01:26:15.173 [http-nio-8080-exec-4] DEBUG [] [] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-11 01:26:15.174 [http-nio-8080-exec-4] DEBUG [] [] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{mainCharacterDeficit={storyElement=Haunted by Memory, source=The Hierophant}, allyGoal={storyElemen (truncated)...]
2025-08-11 01:26:15.216 [http-nio-8080-exec-4] DEBUG [] [] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-11 01:28:18.777 [http-nio-8080-exec-2] DEBUG [] [] o.s.web.servlet.DispatcherServlet - POST "/api/auth/login", parameters={}
2025-08-11 01:28:18.782 [http-nio-8080-exec-2] DEBUG [] [] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mercy.tarot.controllers.AuthController#login(LoginRequest)
2025-08-11 01:28:18.804 [http-nio-8080-exec-2] DEBUG [] [] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [LoginRequest[email=ariosa@gmail.com, password=Innit2012!]]
2025-08-11 01:28:18.882 [http-nio-8080-exec-2] DEBUG [] [] org.hibernate.SQL - select u1_0.id,u1_0.created_at,u1_0.email,u1_0.is_active,u1_0.name,u1_0.password,u1_0.photo_url,u1_0.updated_at from users u1_0 where u1_0.email=?
2025-08-11 01:28:18.973 [http-nio-8080-exec-2] DEBUG [] [] org.hibernate.SQL - select r1_0.user_id,r1_0.role from user_roles r1_0 where r1_0.user_id=?
2025-08-11 01:28:19.116 [http-nio-8080-exec-2] DEBUG [] [] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-08-11 01:28:19.117 [http-nio-8080-exec-2] DEBUG [] [] o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [LoginResponse[token=eyJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJST0xFX1VTRVIiXSwic3ViIjoiYXJpb3NhQGdtYWlsLmN (truncated)...]
2025-08-11 01:28:19.122 [http-nio-8080-exec-2] DEBUG [] [] o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-11 01:28:36.295 [SpringApplicationShutdownHook] INFO  [] [] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-11 01:28:36.347 [SpringApplicationShutdownHook] TRACE [] [] o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@76641439] for TypeConfiguration
2025-08-11 01:28:36.348 [SpringApplicationShutdownHook] DEBUG [] [] o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5e2daf86] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@76641439]
2025-08-11 01:28:36.378 [SpringApplicationShutdownHook] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-11 01:28:36.410 [SpringApplicationShutdownHook] INFO  [] [] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
